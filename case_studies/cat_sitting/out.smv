MODULE INJECT_FAILURE(IN1, IN1_FAULT, IN1_CONNECTED, SUBSTITUTE, SUBSTITUTE_FAULT, SUBSTITUTE_CONNECTED)
VAR
    OUT1_FAULT: boolean;
    FAILURE: boolean;
DEFINE
    OUT1 := SUBSTITUTE;
INIT !FAILURE -> OUT1_FAULT = IN1_FAULT & SUBSTITUTE = IN1
TRANS !next(FAILURE) -> next(OUT1_FAULT) = next(IN1_FAULT) & next(SUBSTITUTE) = next(IN1)

MODULE NONDET_DELAY_0(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: 0..1000;
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE NONDET_DELAY_1(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: boolean;
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE WRAPPER_SITTING_APU_DIV1(
    WIDTH_DIV1, WIDTH_DIV1_FAULT, WIDTH_DIV1_CONNECTED, 
    HEIGHT_DIV1, HEIGHT_DIV1_FAULT, HEIGHT_DIV1_CONNECTED, 
    DEPTH_DIV1, DEPTH_DIV1_FAULT, DEPTH_DIV1_CONNECTED)
VAR
    -- delay modules for WIDTH from division 1
    WIDTH_DIV1_DELAYED1: NONDET_DELAY_0(WIDTH_DIV1, WIDTH_DIV1_FAULT, TRUE);
    WIDTH_DIV1_DELAYED2: NONDET_DELAY_0(WIDTH_DIV1_DELAYED1.OUT0, WIDTH_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HEIGHT from division 1
    HEIGHT_DIV1_DELAYED1: NONDET_DELAY_0(HEIGHT_DIV1, HEIGHT_DIV1_FAULT, TRUE);
    HEIGHT_DIV1_DELAYED2: NONDET_DELAY_0(HEIGHT_DIV1_DELAYED1.OUT0, HEIGHT_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for DEPTH from division 1
    DEPTH_DIV1_DELAYED1: NONDET_DELAY_0(DEPTH_DIV1, DEPTH_DIV1_FAULT, TRUE);
    DEPTH_DIV1_DELAYED2: NONDET_DELAY_0(DEPTH_DIV1_DELAYED1.OUT0, DEPTH_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- unit
    content: SITTING_APU(
        WIDTH_DIV1_DELAYED2.OUT0, WIDTH_DIV1_DELAYED2.OUT0_FAULT, TRUE, 
        HEIGHT_DIV1_DELAYED2.OUT0, HEIGHT_DIV1_DELAYED2.OUT0_FAULT, TRUE, 
        DEPTH_DIV1_DELAYED2.OUT0, DEPTH_DIV1_DELAYED2.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := FALSE;
    CAN_SIT := content.CAN_SIT;
    CAN_SIT_FAULT := content.CAN_SIT_FAULT;

MODULE WRAPPER_SITTING_APU_DIV2(
    WIDTH_DIV2, WIDTH_DIV2_FAULT, WIDTH_DIV2_CONNECTED, 
    HEIGHT_DIV2, HEIGHT_DIV2_FAULT, HEIGHT_DIV2_CONNECTED, 
    DEPTH_DIV2, DEPTH_DIV2_FAULT, DEPTH_DIV2_CONNECTED)
VAR
    -- delay modules for WIDTH from division 2
    WIDTH_DIV2_DELAYED1: NONDET_DELAY_0(WIDTH_DIV2, WIDTH_DIV2_FAULT, TRUE);
    WIDTH_DIV2_DELAYED2: NONDET_DELAY_0(WIDTH_DIV2_DELAYED1.OUT0, WIDTH_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HEIGHT from division 2
    HEIGHT_DIV2_DELAYED1: NONDET_DELAY_0(HEIGHT_DIV2, HEIGHT_DIV2_FAULT, TRUE);
    HEIGHT_DIV2_DELAYED2: NONDET_DELAY_0(HEIGHT_DIV2_DELAYED1.OUT0, HEIGHT_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for DEPTH from division 2
    DEPTH_DIV2_DELAYED1: NONDET_DELAY_0(DEPTH_DIV2, DEPTH_DIV2_FAULT, TRUE);
    DEPTH_DIV2_DELAYED2: NONDET_DELAY_0(DEPTH_DIV2_DELAYED1.OUT0, DEPTH_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- fault injection modules for WIDTH_DIV2
    WIDTH_DIV2_DELAYED2.OUT0_SUBS: 0..1000;
    WIDTH_DIV2_AFTER_FAILURE: INJECT_FAILURE(WIDTH_DIV2_DELAYED2.OUT0, WIDTH_DIV2_DELAYED2.OUT0_FAULT, TRUE, WIDTH_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE);
    -- fault injection modules for HEIGHT_DIV2
    HEIGHT_DIV2_DELAYED2.OUT0_SUBS: 0..1000;
    HEIGHT_DIV2_AFTER_FAILURE: INJECT_FAILURE(HEIGHT_DIV2_DELAYED2.OUT0, HEIGHT_DIV2_DELAYED2.OUT0_FAULT, TRUE, HEIGHT_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE);
    -- fault injection modules for DEPTH_DIV2
    DEPTH_DIV2_DELAYED2.OUT0_SUBS: 0..1000;
    DEPTH_DIV2_AFTER_FAILURE: INJECT_FAILURE(DEPTH_DIV2_DELAYED2.OUT0, DEPTH_DIV2_DELAYED2.OUT0_FAULT, TRUE, DEPTH_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE);
    -- unit
    content: SITTING_APU(
        WIDTH_DIV2_AFTER_FAILURE.OUT1, WIDTH_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        HEIGHT_DIV2_AFTER_FAILURE.OUT1, HEIGHT_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        DEPTH_DIV2_AFTER_FAILURE.OUT1, DEPTH_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := WIDTH_DIV2_AFTER_FAILURE.FAILURE | HEIGHT_DIV2_AFTER_FAILURE.FAILURE | DEPTH_DIV2_AFTER_FAILURE.FAILURE;
    CAN_SIT := content.CAN_SIT;
    CAN_SIT_FAULT := content.CAN_SIT_FAULT;

MODULE WRAPPER_SITTING_APU_DIV3(
    WIDTH_DIV3, WIDTH_DIV3_FAULT, WIDTH_DIV3_CONNECTED, 
    HEIGHT_DIV3, HEIGHT_DIV3_FAULT, HEIGHT_DIV3_CONNECTED, 
    DEPTH_DIV3, DEPTH_DIV3_FAULT, DEPTH_DIV3_CONNECTED)
VAR
    -- delay modules for WIDTH from division 3
    WIDTH_DIV3_DELAYED1: NONDET_DELAY_0(WIDTH_DIV3, WIDTH_DIV3_FAULT, TRUE);
    WIDTH_DIV3_DELAYED2: NONDET_DELAY_0(WIDTH_DIV3_DELAYED1.OUT0, WIDTH_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HEIGHT from division 3
    HEIGHT_DIV3_DELAYED1: NONDET_DELAY_0(HEIGHT_DIV3, HEIGHT_DIV3_FAULT, TRUE);
    HEIGHT_DIV3_DELAYED2: NONDET_DELAY_0(HEIGHT_DIV3_DELAYED1.OUT0, HEIGHT_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for DEPTH from division 3
    DEPTH_DIV3_DELAYED1: NONDET_DELAY_0(DEPTH_DIV3, DEPTH_DIV3_FAULT, TRUE);
    DEPTH_DIV3_DELAYED2: NONDET_DELAY_0(DEPTH_DIV3_DELAYED1.OUT0, DEPTH_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- unit
    content: SITTING_APU(
        WIDTH_DIV3_DELAYED2.OUT0, WIDTH_DIV3_DELAYED2.OUT0_FAULT, TRUE, 
        HEIGHT_DIV3_DELAYED2.OUT0, HEIGHT_DIV3_DELAYED2.OUT0_FAULT, TRUE, 
        DEPTH_DIV3_DELAYED2.OUT0, DEPTH_DIV3_DELAYED2.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := FALSE;
    CAN_SIT := content.CAN_SIT;
    CAN_SIT_FAULT := content.CAN_SIT_FAULT;

MODULE WRAPPER_SITTING_ALU_DIV1(
    SITTING_APU_CAN_SIT_DIV1, SITTING_APU_CAN_SIT_DIV1_FAULT, SITTING_APU_CAN_SIT_DIV1_CONNECTED, 
    SITTING_APU_CAN_SIT_DIV2, SITTING_APU_CAN_SIT_DIV2_FAULT, SITTING_APU_CAN_SIT_DIV2_CONNECTED, 
    SITTING_APU_CAN_SIT_DIV3, SITTING_APU_CAN_SIT_DIV3_FAULT, SITTING_APU_CAN_SIT_DIV3_CONNECTED)
VAR
    -- delay modules for SITTING_APU from division 1
    SITTING_APU_DIV1_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV1, SITTING_APU_CAN_SIT_DIV1_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED1.OUT0, SITTING_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED2.OUT0, SITTING_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED3.OUT0, SITTING_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    -- delay modules for SITTING_APU from division 2
    SITTING_APU_DIV2_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV2, SITTING_APU_CAN_SIT_DIV2_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED1.OUT0, SITTING_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED2.OUT0, SITTING_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED3.OUT0, SITTING_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    -- delay modules for SITTING_APU from division 3
    SITTING_APU_DIV3_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV3, SITTING_APU_CAN_SIT_DIV3_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED1.OUT0, SITTING_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED2.OUT0, SITTING_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED3.OUT0, SITTING_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    -- fault injection modules for SITTING_APU_CAN_SIT_DIV2
    SITTING_APU_DIV2_DELAYED4.OUT0_SUBS: boolean;
    SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE: INJECT_FAILURE(SITTING_APU_DIV2_DELAYED4.OUT0, SITTING_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, SITTING_APU_DIV2_DELAYED4.OUT0_SUBS, FALSE, TRUE);
    -- unit
    content: SITTING_ALU(
        SITTING_APU_DIV1_DELAYED4.OUT0, SITTING_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, 
        SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.OUT1, SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SITTING_APU_DIV3_DELAYED4.OUT0, SITTING_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.FAILURE;
    CAN_SIT := content.CAN_SIT;
    CAN_SIT_FAULT := content.CAN_SIT_FAULT;

MODULE WRAPPER_SITTING_ALU_DIV2(
    SITTING_APU_CAN_SIT_DIV1, SITTING_APU_CAN_SIT_DIV1_FAULT, SITTING_APU_CAN_SIT_DIV1_CONNECTED, 
    SITTING_APU_CAN_SIT_DIV2, SITTING_APU_CAN_SIT_DIV2_FAULT, SITTING_APU_CAN_SIT_DIV2_CONNECTED, 
    SITTING_APU_CAN_SIT_DIV3, SITTING_APU_CAN_SIT_DIV3_FAULT, SITTING_APU_CAN_SIT_DIV3_CONNECTED)
VAR
    -- delay modules for SITTING_APU from division 1
    SITTING_APU_DIV1_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV1, SITTING_APU_CAN_SIT_DIV1_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED1.OUT0, SITTING_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED2.OUT0, SITTING_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED3.OUT0, SITTING_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    -- delay modules for SITTING_APU from division 2
    SITTING_APU_DIV2_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV2, SITTING_APU_CAN_SIT_DIV2_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED1.OUT0, SITTING_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED2.OUT0, SITTING_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED3.OUT0, SITTING_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    -- delay modules for SITTING_APU from division 3
    SITTING_APU_DIV3_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV3, SITTING_APU_CAN_SIT_DIV3_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED1.OUT0, SITTING_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED2.OUT0, SITTING_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED3.OUT0, SITTING_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    -- fault injection modules for SITTING_APU_CAN_SIT_DIV1
    SITTING_APU_DIV1_DELAYED4.OUT0_SUBS: boolean;
    SITTING_APU_CAN_SIT_DIV1_AFTER_FAILURE: INJECT_FAILURE(SITTING_APU_DIV1_DELAYED4.OUT0, SITTING_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, SITTING_APU_DIV1_DELAYED4.OUT0_SUBS, FALSE, TRUE);
    -- fault injection modules for SITTING_APU_CAN_SIT_DIV2
    SITTING_APU_DIV2_DELAYED4.OUT0_SUBS: boolean;
    SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE: INJECT_FAILURE(SITTING_APU_DIV2_DELAYED4.OUT0, SITTING_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, SITTING_APU_DIV2_DELAYED4.OUT0_SUBS, FALSE, TRUE);
    -- fault injection modules for SITTING_APU_CAN_SIT_DIV3
    SITTING_APU_DIV3_DELAYED4.OUT0_SUBS: boolean;
    SITTING_APU_CAN_SIT_DIV3_AFTER_FAILURE: INJECT_FAILURE(SITTING_APU_DIV3_DELAYED4.OUT0, SITTING_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE, SITTING_APU_DIV3_DELAYED4.OUT0_SUBS, FALSE, TRUE);
    -- unit
    content: SITTING_ALU(
        SITTING_APU_CAN_SIT_DIV1_AFTER_FAILURE.OUT1, SITTING_APU_CAN_SIT_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.OUT1, SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SITTING_APU_CAN_SIT_DIV3_AFTER_FAILURE.OUT1, SITTING_APU_CAN_SIT_DIV3_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := SITTING_APU_CAN_SIT_DIV1_AFTER_FAILURE.FAILURE | SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.FAILURE | SITTING_APU_CAN_SIT_DIV3_AFTER_FAILURE.FAILURE;
    CAN_SIT := content.CAN_SIT;
    CAN_SIT_FAULT := content.CAN_SIT_FAULT;

MODULE WRAPPER_SITTING_ALU_DIV3(
    SITTING_APU_CAN_SIT_DIV1, SITTING_APU_CAN_SIT_DIV1_FAULT, SITTING_APU_CAN_SIT_DIV1_CONNECTED, 
    SITTING_APU_CAN_SIT_DIV2, SITTING_APU_CAN_SIT_DIV2_FAULT, SITTING_APU_CAN_SIT_DIV2_CONNECTED, 
    SITTING_APU_CAN_SIT_DIV3, SITTING_APU_CAN_SIT_DIV3_FAULT, SITTING_APU_CAN_SIT_DIV3_CONNECTED)
VAR
    -- delay modules for SITTING_APU from division 1
    SITTING_APU_DIV1_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV1, SITTING_APU_CAN_SIT_DIV1_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED1.OUT0, SITTING_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED2.OUT0, SITTING_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV1_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV1_DELAYED3.OUT0, SITTING_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    -- delay modules for SITTING_APU from division 2
    SITTING_APU_DIV2_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV2, SITTING_APU_CAN_SIT_DIV2_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED1.OUT0, SITTING_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED2.OUT0, SITTING_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV2_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV2_DELAYED3.OUT0, SITTING_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    -- delay modules for SITTING_APU from division 3
    SITTING_APU_DIV3_DELAYED1: NONDET_DELAY_1(SITTING_APU_CAN_SIT_DIV3, SITTING_APU_CAN_SIT_DIV3_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED2: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED1.OUT0, SITTING_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED3: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED2.OUT0, SITTING_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    SITTING_APU_DIV3_DELAYED4: NONDET_DELAY_1(SITTING_APU_DIV3_DELAYED3.OUT0, SITTING_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    -- fault injection modules for SITTING_APU_CAN_SIT_DIV2
    SITTING_APU_DIV2_DELAYED4.OUT0_SUBS: boolean;
    SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE: INJECT_FAILURE(SITTING_APU_DIV2_DELAYED4.OUT0, SITTING_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, SITTING_APU_DIV2_DELAYED4.OUT0_SUBS, FALSE, TRUE);
    -- unit
    content: SITTING_ALU(
        SITTING_APU_DIV1_DELAYED4.OUT0, SITTING_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, 
        SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.OUT1, SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SITTING_APU_DIV3_DELAYED4.OUT0, SITTING_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := SITTING_APU_CAN_SIT_DIV2_AFTER_FAILURE.FAILURE;
    CAN_SIT := content.CAN_SIT;
    CAN_SIT_FAULT := content.CAN_SIT_FAULT;
MODULE LESS_OR_EQUAL(INT_IN, INT_IN_FAULT, INT_IN_CONNECTED, VALUE)
DEFINE
    BIN_OUT := INT_IN <= VALUE;
    BIN_OUT_FAULT := FALSE;


MODULE SITTING_APU(WIDTH, WIDTH_FAULT, WIDTH_CONNECTED, HEIGHT, HEIGHT_FAULT, HEIGHT_CONNECTED, DEPTH, DEPTH_FAULT, DEPTH_CONNECTED)
VAR
    width_ok: LESS_OR_EQUAL(WIDTH, WIDTH_FAULT, WIDTH_CONNECTED, 200);
    height_ok: LESS_OR_EQUAL(HEIGHT, HEIGHT_FAULT, HEIGHT_CONNECTED, 100);
    depth_ok: LESS_OR_EQUAL(DEPTH, DEPTH_FAULT, DEPTH_CONNECTED, 150);
DEFINE
    CAN_SIT := width_ok.BIN_OUT & height_ok.BIN_OUT & depth_ok.BIN_OUT;
    CAN_SIT_FAULT := FALSE;


MODULE SITTING_ALU(CAN_SIT_VOTE_1, CAN_SIT_VOTE_1_FAULT, CAN_SIT_VOTE_1_CONNECTED, CAN_SIT_VOTE_2, CAN_SIT_VOTE_2_FAULT, CAN_SIT_VOTE_2_CONNECTED, CAN_SIT_VOTE_3, CAN_SIT_VOTE_3_FAULT, CAN_SIT_VOTE_3_CONNECTED)
DEFINE
    CAN_SIT := count(CAN_SIT_VOTE_1, CAN_SIT_VOTE_2, CAN_SIT_VOTE_3) >= 2;
    CAN_SIT_FAULT := FALSE;

MODULE main
VAR
    WIDTH_DIV1: 0..1000;
    WIDTH_DIV2: 0..1000;
    WIDTH_DIV3: 0..1000;
    HEIGHT_DIV1: 0..1000;
    HEIGHT_DIV2: 0..1000;
    HEIGHT_DIV3: 0..1000;
    DEPTH_DIV1: 0..1000;
    DEPTH_DIV2: 0..1000;
    DEPTH_DIV3: 0..1000;
    SITTING_APU_DIV1: WRAPPER_SITTING_APU_DIV1(
        WIDTH_DIV1, WIDTH_DIV1_FAULT, TRUE, 
        HEIGHT_DIV1, HEIGHT_DIV1_FAULT, TRUE, 
        DEPTH_DIV1, DEPTH_DIV1_FAULT, TRUE);
    SITTING_APU_DIV2: WRAPPER_SITTING_APU_DIV2(
        WIDTH_DIV2, WIDTH_DIV2_FAULT, TRUE, 
        HEIGHT_DIV2, HEIGHT_DIV2_FAULT, TRUE, 
        DEPTH_DIV2, DEPTH_DIV2_FAULT, TRUE);
    SITTING_APU_DIV3: WRAPPER_SITTING_APU_DIV3(
        WIDTH_DIV3, WIDTH_DIV3_FAULT, TRUE, 
        HEIGHT_DIV3, HEIGHT_DIV3_FAULT, TRUE, 
        DEPTH_DIV3, DEPTH_DIV3_FAULT, TRUE);
    SITTING_ALU_DIV1: WRAPPER_SITTING_ALU_DIV1(
        SITTING_APU_DIV1.CAN_SIT, SITTING_APU_DIV1.CAN_SIT_FAULT, TRUE, 
        SITTING_APU_DIV2.CAN_SIT, SITTING_APU_DIV2.CAN_SIT_FAULT, TRUE, 
        SITTING_APU_DIV3.CAN_SIT, SITTING_APU_DIV3.CAN_SIT_FAULT, TRUE);
    -- (optimized out) SITTING_ALU_DIV2: WRAPPER_SITTING_ALU_DIV2(SITTING_APU_DIV1.CAN_SIT, SITTING_APU_DIV1.CAN_SIT_FAULT, TRUE, SITTING_APU_DIV2.CAN_SIT, SITTING_APU_DIV2.CAN_SIT_FAULT, TRUE, SITTING_APU_DIV3.CAN_SIT, SITTING_APU_DIV3.CAN_SIT_FAULT, TRUE);
    -- (optimized out) SITTING_ALU_DIV3: WRAPPER_SITTING_ALU_DIV3(SITTING_APU_DIV1.CAN_SIT, SITTING_APU_DIV1.CAN_SIT_FAULT, TRUE, SITTING_APU_DIV2.CAN_SIT, SITTING_APU_DIV2.CAN_SIT_FAULT, TRUE, SITTING_APU_DIV3.CAN_SIT, SITTING_APU_DIV3.CAN_SIT_FAULT, TRUE);
    -- (optimized out) SITTING_ALU_DIV1.CAN_SIT_SUBS: boolean;
    -- (optimized out) CAN_SIT_DIV2_AFTER_FAILURE: INJECT_FAILURE(SITTING_ALU_DIV1.CAN_SIT, SITTING_ALU_DIV1.CAN_SIT_FAULT, TRUE, SITTING_ALU_DIV1.CAN_SIT_SUBS, FALSE, TRUE);
DEFINE
    WIDTH_DIV1_FAULT := FALSE;
    WIDTH_DIV2_FAULT := FALSE;
    WIDTH_DIV3_FAULT := FALSE;
    HEIGHT_DIV1_FAULT := FALSE;
    HEIGHT_DIV2_FAULT := FALSE;
    HEIGHT_DIV3_FAULT := FALSE;
    DEPTH_DIV1_FAULT := FALSE;
    DEPTH_DIV2_FAULT := FALSE;
    DEPTH_DIV3_FAULT := FALSE;
    CAN_SIT_DIV1 := SITTING_ALU_DIV1.CAN_SIT;
    CAN_SIT_DIV1_FAULT := SITTING_ALU_DIV1.CAN_SIT_FAULT;
    CAN_SIT_DIV2 := SITTING_ALU_DIV1.CAN_SIT; -- (replaced with the version from DIV1 due to unit optimization);
    CAN_SIT_DIV2_FAULT := SITTING_ALU_DIV1.CAN_SIT_FAULT; -- (replaced with the version from DIV1 due to unit optimization);
    CAN_SIT_DIV3 := SITTING_ALU_DIV1.CAN_SIT; -- (replaced with the version from DIV1 due to unit optimization);
    CAN_SIT_DIV3_FAULT := SITTING_ALU_DIV1.CAN_SIT_FAULT; -- (replaced with the version from DIV1 due to unit optimization);
    FAILURE := SITTING_APU_DIV1.FAILURE | SITTING_APU_DIV2.FAILURE | SITTING_APU_DIV3.FAILURE | SITTING_ALU_DIV1.FAILURE;

-- all requirements specified here are black-box requirements for the ALU in division 1

-- if all the sensors report measurements acceptable for sitting, then eventually a sitting decision will be taken
-- without delays, this requirement is satisfied even with one failure assumed
-- with delays, it is not satisfied
LTLSPEC G(WIDTH_DIV1 <= 200 & WIDTH_DIV2 <= 200 & WIDTH_DIV3 <= 200 & HEIGHT_DIV1 <= 100 & HEIGHT_DIV2 <= 100 & HEIGHT_DIV3 <= 100 & DEPTH_DIV1 <= 150 & DEPTH_DIV2 <= 150 & DEPTH_DIV3 <= 150 -> F CAN_SIT_DIV1)

-- no spurious actuation
-- due to 2 out of 3 voting in ALUs, not all correct sensor measurements are needed, so this requirement is not satisfied
LTLSPEC G(CAN_SIT_DIV1 -> O(WIDTH_DIV1 <= 200 & WIDTH_DIV2 <= 200 & WIDTH_DIV3 <= 200 & HEIGHT_DIV1 <= 100 & HEIGHT_DIV2 <= 100 & HEIGHT_DIV3 <= 100 & DEPTH_DIV1 <= 150 & DEPTH_DIV2 <= 150 & DEPTH_DIV3 <= 150))

-- absence of deadlocks - satisfied
CTLSPEC AG EF CAN_SIT_DIV1
CTLSPEC AG EF !CAN_SIT_DIV1


