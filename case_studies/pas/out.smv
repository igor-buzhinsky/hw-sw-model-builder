MODULE INJECT_FAILURE(IN1, IN1_FAULT, IN1_CONNECTED, SUBSTITUTE, SUBSTITUTE_FAULT, SUBSTITUTE_CONNECTED, FAILURE_VANISHED)
VAR
    OUT1_FAULT: boolean;
DEFINE
    OUT1 := SUBSTITUTE;
    FAILURE := IN1 != OUT1 | IN1_FAULT != OUT1_FAULT;

MODULE INJECT_VANISHING_FAILURE(IN1, IN1_FAULT, IN1_CONNECTED, SUBSTITUTE, SUBSTITUTE_FAULT, SUBSTITUTE_CONNECTED, FAILURE_VANISHED)
VAR
    OUT1_FAULT_: boolean;
DEFINE
    OUT1       := FAILURE_VANISHED ? IN1       : SUBSTITUTE;
    OUT1_FAULT := FAILURE_VANISHED ? IN1_FAULT : OUT1_FAULT_;
    FAILURE    := IN1 != OUT1 | IN1_FAULT != OUT1_FAULT;

MODULE NONDET_DELAY_0(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: {0,50,80};
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE NONDET_DELAY_1(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: {20,400};
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE NONDET_DELAY_2(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: {0,180000,250000};
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE NONDET_DELAY_3(IN0, IN0_FAULT, IN0_CONNECTED, IN1, IN1_FAULT, IN1_CONNECTED)
VAR
    OUT0: boolean;
    OUT0_FAULT: boolean;
    OUT1: boolean;
    OUT1_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
    init(OUT1) := IN1;
    next(OUT1) := delaying ? IN1 : next(IN1);
    init(OUT1_FAULT) := IN1_FAULT;
    next(OUT1_FAULT) := delaying ? IN1_FAULT : next(IN1_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT) | IN1 != next(IN1) | IN1_FAULT != next(IN1_FAULT)) -> next(delaying)

MODULE NONDET_DELAY_4(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: boolean;
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE NONDET_DELAY_5(IN0, IN0_FAULT, IN0_CONNECTED)
VAR
    OUT0: {0,20,80,100,120};
    OUT0_FAULT: boolean;
    delaying: boolean;
ASSIGN
    init(OUT0) := IN0;
    next(OUT0) := delaying ? IN0 : next(IN0);
    init(OUT0_FAULT) := IN0_FAULT;
    next(OUT0_FAULT) := delaying ? IN0_FAULT : next(IN0_FAULT);
TRANS delaying & (IN0 != next(IN0) | IN0_FAULT != next(IN0_FAULT)) -> next(delaying)

MODULE WRAPPER_PS_APU_DIV1(
    HLEG_P_DIV1, HLEG_P_DIV1_FAULT, HLEG_P_DIV1_CONNECTED, 
    HLEG_T_DIV1, HLEG_T_DIV1_FAULT, HLEG_T_DIV1_CONNECTED, 
    NF_DIV1, NF_DIV1_FAULT, NF_DIV1_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for HLEG_P from division 1
    HLEG_P_DIV1_DELAYED1: NONDET_DELAY_0(HLEG_P_DIV1, HLEG_P_DIV1_FAULT, TRUE);
    HLEG_P_DIV1_DELAYED2: NONDET_DELAY_0(HLEG_P_DIV1_DELAYED1.OUT0, HLEG_P_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HLEG_T from division 1
    HLEG_T_DIV1_DELAYED1: NONDET_DELAY_1(HLEG_T_DIV1, HLEG_T_DIV1_FAULT, TRUE);
    HLEG_T_DIV1_DELAYED2: NONDET_DELAY_1(HLEG_T_DIV1_DELAYED1.OUT0, HLEG_T_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 1
    NF_DIV1_DELAYED1: NONDET_DELAY_2(NF_DIV1, NF_DIV1_FAULT, TRUE);
    NF_DIV1_DELAYED2: NONDET_DELAY_2(NF_DIV1_DELAYED1.OUT0, NF_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- unit
    content: PS_APU(
        HLEG_P_DIV1_DELAYED2.OUT0, HLEG_P_DIV1_DELAYED2.OUT0_FAULT, TRUE, 
        HLEG_T_DIV1_DELAYED2.OUT0, HLEG_T_DIV1_DELAYED2.OUT0_FAULT, TRUE, 
        NF_DIV1_DELAYED2.OUT0, NF_DIV1_DELAYED2.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := FALSE;
    HLEG_P := content.HLEG_P;
    HLEG_P_FAULT := content.HLEG_P_FAULT;
    HLEG_P_CONNECTED := content.HLEG_P_CONNECTED;
    HLEG_T := content.HLEG_T;
    HLEG_T_FAULT := content.HLEG_T_FAULT;
    HLEG_T_CONNECTED := content.HLEG_T_CONNECTED;
    NEUTRON_FLUX := content.NEUTRON_FLUX;
    NEUTRON_FLUX_FAULT := content.NEUTRON_FLUX_FAULT;
    NEUTRON_FLUX_CONNECTED := content.NEUTRON_FLUX_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2 := content.HLEG_P_Max2_OR_NF_Max2;
    HLEG_T_Min_AND_HLEG_P_Min := content.HLEG_T_Min_AND_HLEG_P_Min;
    HLEG_P_Max2_OR_NF_Max2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min_FAULT;

MODULE WRAPPER_PS_APU_DIV2(
    HLEG_P_DIV2, HLEG_P_DIV2_FAULT, HLEG_P_DIV2_CONNECTED, 
    HLEG_T_DIV2, HLEG_T_DIV2_FAULT, HLEG_T_DIV2_CONNECTED, 
    NF_DIV2, NF_DIV2_FAULT, NF_DIV2_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for HLEG_P from division 2
    HLEG_P_DIV2_DELAYED1: NONDET_DELAY_0(HLEG_P_DIV2, HLEG_P_DIV2_FAULT, TRUE);
    HLEG_P_DIV2_DELAYED2: NONDET_DELAY_0(HLEG_P_DIV2_DELAYED1.OUT0, HLEG_P_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HLEG_T from division 2
    HLEG_T_DIV2_DELAYED1: NONDET_DELAY_1(HLEG_T_DIV2, HLEG_T_DIV2_FAULT, TRUE);
    HLEG_T_DIV2_DELAYED2: NONDET_DELAY_1(HLEG_T_DIV2_DELAYED1.OUT0, HLEG_T_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 2
    NF_DIV2_DELAYED1: NONDET_DELAY_2(NF_DIV2, NF_DIV2_FAULT, TRUE);
    NF_DIV2_DELAYED2: NONDET_DELAY_2(NF_DIV2_DELAYED1.OUT0, NF_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- fault injection modules for HLEG_P_DIV2
    HLEG_P_DIV2_DELAYED2.OUT0_SUBS: {0,50,80};
    HLEG_P_DIV2_AFTER_FAILURE: INJECT_FAILURE(HLEG_P_DIV2_DELAYED2.OUT0, HLEG_P_DIV2_DELAYED2.OUT0_FAULT, TRUE, HLEG_P_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for HLEG_T_DIV2
    HLEG_T_DIV2_DELAYED2.OUT0_SUBS: {20,400};
    HLEG_T_DIV2_AFTER_FAILURE: INJECT_FAILURE(HLEG_T_DIV2_DELAYED2.OUT0, HLEG_T_DIV2_DELAYED2.OUT0_FAULT, TRUE, HLEG_T_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for NF_DIV2
    NF_DIV2_DELAYED2.OUT0_SUBS: {0,180000,250000};
    NF_DIV2_AFTER_FAILURE: INJECT_FAILURE(NF_DIV2_DELAYED2.OUT0, NF_DIV2_DELAYED2.OUT0_FAULT, TRUE, NF_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PS_APU(
        HLEG_P_DIV2_AFTER_FAILURE.OUT1, HLEG_P_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        HLEG_T_DIV2_AFTER_FAILURE.OUT1, HLEG_T_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        NF_DIV2_AFTER_FAILURE.OUT1, NF_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := HLEG_P_DIV2_AFTER_FAILURE.FAILURE | HLEG_T_DIV2_AFTER_FAILURE.FAILURE | NF_DIV2_AFTER_FAILURE.FAILURE;
    HLEG_P := content.HLEG_P;
    HLEG_P_FAULT := content.HLEG_P_FAULT;
    HLEG_P_CONNECTED := content.HLEG_P_CONNECTED;
    HLEG_T := content.HLEG_T;
    HLEG_T_FAULT := content.HLEG_T_FAULT;
    HLEG_T_CONNECTED := content.HLEG_T_CONNECTED;
    NEUTRON_FLUX := content.NEUTRON_FLUX;
    NEUTRON_FLUX_FAULT := content.NEUTRON_FLUX_FAULT;
    NEUTRON_FLUX_CONNECTED := content.NEUTRON_FLUX_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2 := content.HLEG_P_Max2_OR_NF_Max2;
    HLEG_T_Min_AND_HLEG_P_Min := content.HLEG_T_Min_AND_HLEG_P_Min;
    HLEG_P_Max2_OR_NF_Max2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min_FAULT;

MODULE WRAPPER_PS_APU_DIV3(
    HLEG_P_DIV3, HLEG_P_DIV3_FAULT, HLEG_P_DIV3_CONNECTED, 
    HLEG_T_DIV3, HLEG_T_DIV3_FAULT, HLEG_T_DIV3_CONNECTED, 
    NF_DIV3, NF_DIV3_FAULT, NF_DIV3_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for HLEG_P from division 3
    HLEG_P_DIV3_DELAYED1: NONDET_DELAY_0(HLEG_P_DIV3, HLEG_P_DIV3_FAULT, TRUE);
    HLEG_P_DIV3_DELAYED2: NONDET_DELAY_0(HLEG_P_DIV3_DELAYED1.OUT0, HLEG_P_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HLEG_T from division 3
    HLEG_T_DIV3_DELAYED1: NONDET_DELAY_1(HLEG_T_DIV3, HLEG_T_DIV3_FAULT, TRUE);
    HLEG_T_DIV3_DELAYED2: NONDET_DELAY_1(HLEG_T_DIV3_DELAYED1.OUT0, HLEG_T_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 3
    NF_DIV3_DELAYED1: NONDET_DELAY_2(NF_DIV3, NF_DIV3_FAULT, TRUE);
    NF_DIV3_DELAYED2: NONDET_DELAY_2(NF_DIV3_DELAYED1.OUT0, NF_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- unit
    content: PS_APU(
        HLEG_P_DIV3_DELAYED2.OUT0, HLEG_P_DIV3_DELAYED2.OUT0_FAULT, TRUE, 
        HLEG_T_DIV3_DELAYED2.OUT0, HLEG_T_DIV3_DELAYED2.OUT0_FAULT, TRUE, 
        NF_DIV3_DELAYED2.OUT0, NF_DIV3_DELAYED2.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := FALSE;
    HLEG_P := content.HLEG_P;
    HLEG_P_FAULT := content.HLEG_P_FAULT;
    HLEG_P_CONNECTED := content.HLEG_P_CONNECTED;
    HLEG_T := content.HLEG_T;
    HLEG_T_FAULT := content.HLEG_T_FAULT;
    HLEG_T_CONNECTED := content.HLEG_T_CONNECTED;
    NEUTRON_FLUX := content.NEUTRON_FLUX;
    NEUTRON_FLUX_FAULT := content.NEUTRON_FLUX_FAULT;
    NEUTRON_FLUX_CONNECTED := content.NEUTRON_FLUX_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2 := content.HLEG_P_Max2_OR_NF_Max2;
    HLEG_T_Min_AND_HLEG_P_Min := content.HLEG_T_Min_AND_HLEG_P_Min;
    HLEG_P_Max2_OR_NF_Max2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min_FAULT;

MODULE WRAPPER_PS_APU_DIV4(
    HLEG_P_DIV4, HLEG_P_DIV4_FAULT, HLEG_P_DIV4_CONNECTED, 
    HLEG_T_DIV4, HLEG_T_DIV4_FAULT, HLEG_T_DIV4_CONNECTED, 
    NF_DIV4, NF_DIV4_FAULT, NF_DIV4_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for HLEG_P from division 4
    HLEG_P_DIV4_DELAYED1: NONDET_DELAY_0(HLEG_P_DIV4, HLEG_P_DIV4_FAULT, TRUE);
    HLEG_P_DIV4_DELAYED2: NONDET_DELAY_0(HLEG_P_DIV4_DELAYED1.OUT0, HLEG_P_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for HLEG_T from division 4
    HLEG_T_DIV4_DELAYED1: NONDET_DELAY_1(HLEG_T_DIV4, HLEG_T_DIV4_FAULT, TRUE);
    HLEG_T_DIV4_DELAYED2: NONDET_DELAY_1(HLEG_T_DIV4_DELAYED1.OUT0, HLEG_T_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 4
    NF_DIV4_DELAYED1: NONDET_DELAY_2(NF_DIV4, NF_DIV4_FAULT, TRUE);
    NF_DIV4_DELAYED2: NONDET_DELAY_2(NF_DIV4_DELAYED1.OUT0, NF_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    -- unit
    content: PS_APU(
        HLEG_P_DIV4_DELAYED2.OUT0, HLEG_P_DIV4_DELAYED2.OUT0_FAULT, TRUE, 
        HLEG_T_DIV4_DELAYED2.OUT0, HLEG_T_DIV4_DELAYED2.OUT0_FAULT, TRUE, 
        NF_DIV4_DELAYED2.OUT0, NF_DIV4_DELAYED2.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := FALSE;
    HLEG_P := content.HLEG_P;
    HLEG_P_FAULT := content.HLEG_P_FAULT;
    HLEG_P_CONNECTED := content.HLEG_P_CONNECTED;
    HLEG_T := content.HLEG_T;
    HLEG_T_FAULT := content.HLEG_T_FAULT;
    HLEG_T_CONNECTED := content.HLEG_T_CONNECTED;
    NEUTRON_FLUX := content.NEUTRON_FLUX;
    NEUTRON_FLUX_FAULT := content.NEUTRON_FLUX_FAULT;
    NEUTRON_FLUX_CONNECTED := content.NEUTRON_FLUX_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2 := content.HLEG_P_Max2_OR_NF_Max2;
    HLEG_T_Min_AND_HLEG_P_Min := content.HLEG_T_Min_AND_HLEG_P_Min;
    HLEG_P_Max2_OR_NF_Max2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min_FAULT;

MODULE WRAPPER_PS_ALU_DIV1(
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_CONNECTED, 
    MAN_RESET_DIV1, MAN_RESET_DIV1_FAULT, MAN_RESET_DIV1_CONNECTED, 
    P_VALIDATE_DIV1, P_VALIDATE_DIV1_FAULT, P_VALIDATE_DIV1_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_APU from division 1
    PS_APU_DIV1_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED2: NONDET_DELAY_3(PS_APU_DIV1_DELAYED1.OUT0, PS_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED1.OUT1, PS_APU_DIV1_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED3: NONDET_DELAY_3(PS_APU_DIV1_DELAYED2.OUT0, PS_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED2.OUT1, PS_APU_DIV1_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED4: NONDET_DELAY_3(PS_APU_DIV1_DELAYED3.OUT0, PS_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED3.OUT1, PS_APU_DIV1_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED5: NONDET_DELAY_3(PS_APU_DIV1_DELAYED4.OUT0, PS_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED4.OUT1, PS_APU_DIV1_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED6: NONDET_DELAY_3(PS_APU_DIV1_DELAYED5.OUT0, PS_APU_DIV1_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED5.OUT1, PS_APU_DIV1_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 2
    PS_APU_DIV2_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, TRUE);
    PS_APU_DIV2_DELAYED2: NONDET_DELAY_3(PS_APU_DIV2_DELAYED1.OUT0, PS_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED1.OUT1, PS_APU_DIV2_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED3: NONDET_DELAY_3(PS_APU_DIV2_DELAYED2.OUT0, PS_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED2.OUT1, PS_APU_DIV2_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED4: NONDET_DELAY_3(PS_APU_DIV2_DELAYED3.OUT0, PS_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED3.OUT1, PS_APU_DIV2_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED5: NONDET_DELAY_3(PS_APU_DIV2_DELAYED4.OUT0, PS_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED4.OUT1, PS_APU_DIV2_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED6: NONDET_DELAY_3(PS_APU_DIV2_DELAYED5.OUT0, PS_APU_DIV2_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED5.OUT1, PS_APU_DIV2_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 3
    PS_APU_DIV3_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, TRUE);
    PS_APU_DIV3_DELAYED2: NONDET_DELAY_3(PS_APU_DIV3_DELAYED1.OUT0, PS_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED1.OUT1, PS_APU_DIV3_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED3: NONDET_DELAY_3(PS_APU_DIV3_DELAYED2.OUT0, PS_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED2.OUT1, PS_APU_DIV3_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED4: NONDET_DELAY_3(PS_APU_DIV3_DELAYED3.OUT0, PS_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED3.OUT1, PS_APU_DIV3_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED5: NONDET_DELAY_3(PS_APU_DIV3_DELAYED4.OUT0, PS_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED4.OUT1, PS_APU_DIV3_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED6: NONDET_DELAY_3(PS_APU_DIV3_DELAYED5.OUT0, PS_APU_DIV3_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED5.OUT1, PS_APU_DIV3_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 4
    PS_APU_DIV4_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, TRUE);
    PS_APU_DIV4_DELAYED2: NONDET_DELAY_3(PS_APU_DIV4_DELAYED1.OUT0, PS_APU_DIV4_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED1.OUT1, PS_APU_DIV4_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED3: NONDET_DELAY_3(PS_APU_DIV4_DELAYED2.OUT0, PS_APU_DIV4_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED2.OUT1, PS_APU_DIV4_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED4: NONDET_DELAY_3(PS_APU_DIV4_DELAYED3.OUT0, PS_APU_DIV4_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED3.OUT1, PS_APU_DIV4_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED5: NONDET_DELAY_3(PS_APU_DIV4_DELAYED4.OUT0, PS_APU_DIV4_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED4.OUT1, PS_APU_DIV4_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED6: NONDET_DELAY_3(PS_APU_DIV4_DELAYED5.OUT0, PS_APU_DIV4_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED5.OUT1, PS_APU_DIV4_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for MAN_RESET from division 1
    MAN_RESET_DIV1_DELAYED1: NONDET_DELAY_4(MAN_RESET_DIV1, MAN_RESET_DIV1_FAULT, TRUE);
    MAN_RESET_DIV1_DELAYED2: NONDET_DELAY_4(MAN_RESET_DIV1_DELAYED1.OUT0, MAN_RESET_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    MAN_RESET_DIV1_DELAYED3: NONDET_DELAY_4(MAN_RESET_DIV1_DELAYED2.OUT0, MAN_RESET_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    MAN_RESET_DIV1_DELAYED4: NONDET_DELAY_4(MAN_RESET_DIV1_DELAYED3.OUT0, MAN_RESET_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    MAN_RESET_DIV1_DELAYED5: NONDET_DELAY_4(MAN_RESET_DIV1_DELAYED4.OUT0, MAN_RESET_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    MAN_RESET_DIV1_DELAYED6: NONDET_DELAY_4(MAN_RESET_DIV1_DELAYED5.OUT0, MAN_RESET_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for P_VALIDATE from division 1
    P_VALIDATE_DIV1_DELAYED1: NONDET_DELAY_4(P_VALIDATE_DIV1, P_VALIDATE_DIV1_FAULT, TRUE);
    P_VALIDATE_DIV1_DELAYED2: NONDET_DELAY_4(P_VALIDATE_DIV1_DELAYED1.OUT0, P_VALIDATE_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV1_DELAYED3: NONDET_DELAY_4(P_VALIDATE_DIV1_DELAYED2.OUT0, P_VALIDATE_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV1_DELAYED4: NONDET_DELAY_4(P_VALIDATE_DIV1_DELAYED3.OUT0, P_VALIDATE_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV1_DELAYED5: NONDET_DELAY_4(P_VALIDATE_DIV1_DELAYED4.OUT0, P_VALIDATE_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV1_DELAYED6: NONDET_DELAY_4(P_VALIDATE_DIV1_DELAYED5.OUT0, P_VALIDATE_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2
    PS_APU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT0, PS_APU_DIV2_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2
    PS_APU_DIV2_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT1, PS_APU_DIV2_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PS_ALU(
        PS_APU_DIV1_DELAYED6.OUT0, PS_APU_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_DIV3_DELAYED6.OUT0, PS_APU_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_DIV4_DELAYED6.OUT0, PS_APU_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_DIV1_DELAYED6.OUT1, PS_APU_DIV1_DELAYED6.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_DIV3_DELAYED6.OUT1, PS_APU_DIV3_DELAYED6.OUT1_FAULT, TRUE, 
        PS_APU_DIV4_DELAYED6.OUT1, PS_APU_DIV4_DELAYED6.OUT1_FAULT, TRUE, 
        MAN_RESET_DIV1_DELAYED6.OUT0, MAN_RESET_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        P_VALIDATE_DIV1_DELAYED6.OUT0, P_VALIDATE_DIV1_DELAYED6.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.FAILURE;
    HLEG_T_Min_AND_HLEG_P_Min1 := content.HLEG_T_Min_AND_HLEG_P_Min1;
    HLEG_T_Min_AND_HLEG_P_Min1_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min1_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min2 := content.HLEG_T_Min_AND_HLEG_P_Min2;
    HLEG_T_Min_AND_HLEG_P_Min2_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min3 := content.HLEG_T_Min_AND_HLEG_P_Min3;
    HLEG_T_Min_AND_HLEG_P_Min3_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min3_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min4 := content.HLEG_T_Min_AND_HLEG_P_Min4;
    HLEG_T_Min_AND_HLEG_P_Min4_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min4_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_1 := content.HLEG_P_Max2_OR_NF_Max2_1;
    HLEG_P_Max2_OR_NF_Max2_1_FAULT := content.HLEG_P_Max2_OR_NF_Max2_1_FAULT;
    HLEG_P_Max2_OR_NF_Max2_1_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_1_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_2 := content.HLEG_P_Max2_OR_NF_Max2_2;
    HLEG_P_Max2_OR_NF_Max2_2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_2_FAULT;
    HLEG_P_Max2_OR_NF_Max2_2_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_2_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_3 := content.HLEG_P_Max2_OR_NF_Max2_3;
    HLEG_P_Max2_OR_NF_Max2_3_FAULT := content.HLEG_P_Max2_OR_NF_Max2_3_FAULT;
    HLEG_P_Max2_OR_NF_Max2_3_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_3_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_4 := content.HLEG_P_Max2_OR_NF_Max2_4;
    HLEG_P_Max2_OR_NF_Max2_4_FAULT := content.HLEG_P_Max2_OR_NF_Max2_4_FAULT;
    HLEG_P_Max2_OR_NF_Max2_4_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_4_CONNECTED;
    MANUAL_RESET := content.MANUAL_RESET;
    MANUAL_RESET_FAULT := content.MANUAL_RESET_FAULT;
    MANUAL_RESET_CONNECTED := content.MANUAL_RESET_CONNECTED;
    MANUAL_P_VALIDATE := content.MANUAL_P_VALIDATE;
    MANUAL_P_VALIDATE_FAULT := content.MANUAL_P_VALIDATE_FAULT;
    MANUAL_P_VALIDATE_CONNECTED := content.MANUAL_P_VALIDATE_CONNECTED;
    RODS_DOWN := content.RODS_DOWN;
    ENABLE_SAS := content.ENABLE_SAS;
    ENABLE_PAS := content.ENABLE_PAS;
    RODS_DOWN_FAULT := content.RODS_DOWN_FAULT;
    ENABLE_SAS_FAULT := content.ENABLE_SAS_FAULT;
    ENABLE_PAS_FAULT := content.ENABLE_PAS_FAULT;

MODULE WRAPPER_PS_ALU_DIV2(
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_CONNECTED, 
    MAN_RESET_DIV2, MAN_RESET_DIV2_FAULT, MAN_RESET_DIV2_CONNECTED, 
    P_VALIDATE_DIV2, P_VALIDATE_DIV2_FAULT, P_VALIDATE_DIV2_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_APU from division 1
    PS_APU_DIV1_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED2: NONDET_DELAY_3(PS_APU_DIV1_DELAYED1.OUT0, PS_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED1.OUT1, PS_APU_DIV1_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED3: NONDET_DELAY_3(PS_APU_DIV1_DELAYED2.OUT0, PS_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED2.OUT1, PS_APU_DIV1_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED4: NONDET_DELAY_3(PS_APU_DIV1_DELAYED3.OUT0, PS_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED3.OUT1, PS_APU_DIV1_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED5: NONDET_DELAY_3(PS_APU_DIV1_DELAYED4.OUT0, PS_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED4.OUT1, PS_APU_DIV1_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED6: NONDET_DELAY_3(PS_APU_DIV1_DELAYED5.OUT0, PS_APU_DIV1_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED5.OUT1, PS_APU_DIV1_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 2
    PS_APU_DIV2_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, TRUE);
    PS_APU_DIV2_DELAYED2: NONDET_DELAY_3(PS_APU_DIV2_DELAYED1.OUT0, PS_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED1.OUT1, PS_APU_DIV2_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED3: NONDET_DELAY_3(PS_APU_DIV2_DELAYED2.OUT0, PS_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED2.OUT1, PS_APU_DIV2_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED4: NONDET_DELAY_3(PS_APU_DIV2_DELAYED3.OUT0, PS_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED3.OUT1, PS_APU_DIV2_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED5: NONDET_DELAY_3(PS_APU_DIV2_DELAYED4.OUT0, PS_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED4.OUT1, PS_APU_DIV2_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED6: NONDET_DELAY_3(PS_APU_DIV2_DELAYED5.OUT0, PS_APU_DIV2_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED5.OUT1, PS_APU_DIV2_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 3
    PS_APU_DIV3_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, TRUE);
    PS_APU_DIV3_DELAYED2: NONDET_DELAY_3(PS_APU_DIV3_DELAYED1.OUT0, PS_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED1.OUT1, PS_APU_DIV3_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED3: NONDET_DELAY_3(PS_APU_DIV3_DELAYED2.OUT0, PS_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED2.OUT1, PS_APU_DIV3_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED4: NONDET_DELAY_3(PS_APU_DIV3_DELAYED3.OUT0, PS_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED3.OUT1, PS_APU_DIV3_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED5: NONDET_DELAY_3(PS_APU_DIV3_DELAYED4.OUT0, PS_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED4.OUT1, PS_APU_DIV3_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED6: NONDET_DELAY_3(PS_APU_DIV3_DELAYED5.OUT0, PS_APU_DIV3_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED5.OUT1, PS_APU_DIV3_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 4
    PS_APU_DIV4_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, TRUE);
    PS_APU_DIV4_DELAYED2: NONDET_DELAY_3(PS_APU_DIV4_DELAYED1.OUT0, PS_APU_DIV4_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED1.OUT1, PS_APU_DIV4_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED3: NONDET_DELAY_3(PS_APU_DIV4_DELAYED2.OUT0, PS_APU_DIV4_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED2.OUT1, PS_APU_DIV4_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED4: NONDET_DELAY_3(PS_APU_DIV4_DELAYED3.OUT0, PS_APU_DIV4_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED3.OUT1, PS_APU_DIV4_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED5: NONDET_DELAY_3(PS_APU_DIV4_DELAYED4.OUT0, PS_APU_DIV4_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED4.OUT1, PS_APU_DIV4_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED6: NONDET_DELAY_3(PS_APU_DIV4_DELAYED5.OUT0, PS_APU_DIV4_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED5.OUT1, PS_APU_DIV4_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for MAN_RESET from division 2
    MAN_RESET_DIV2_DELAYED1: NONDET_DELAY_4(MAN_RESET_DIV2, MAN_RESET_DIV2_FAULT, TRUE);
    MAN_RESET_DIV2_DELAYED2: NONDET_DELAY_4(MAN_RESET_DIV2_DELAYED1.OUT0, MAN_RESET_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    MAN_RESET_DIV2_DELAYED3: NONDET_DELAY_4(MAN_RESET_DIV2_DELAYED2.OUT0, MAN_RESET_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    MAN_RESET_DIV2_DELAYED4: NONDET_DELAY_4(MAN_RESET_DIV2_DELAYED3.OUT0, MAN_RESET_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    MAN_RESET_DIV2_DELAYED5: NONDET_DELAY_4(MAN_RESET_DIV2_DELAYED4.OUT0, MAN_RESET_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    MAN_RESET_DIV2_DELAYED6: NONDET_DELAY_4(MAN_RESET_DIV2_DELAYED5.OUT0, MAN_RESET_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for P_VALIDATE from division 2
    P_VALIDATE_DIV2_DELAYED1: NONDET_DELAY_4(P_VALIDATE_DIV2, P_VALIDATE_DIV2_FAULT, TRUE);
    P_VALIDATE_DIV2_DELAYED2: NONDET_DELAY_4(P_VALIDATE_DIV2_DELAYED1.OUT0, P_VALIDATE_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV2_DELAYED3: NONDET_DELAY_4(P_VALIDATE_DIV2_DELAYED2.OUT0, P_VALIDATE_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV2_DELAYED4: NONDET_DELAY_4(P_VALIDATE_DIV2_DELAYED3.OUT0, P_VALIDATE_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV2_DELAYED5: NONDET_DELAY_4(P_VALIDATE_DIV2_DELAYED4.OUT0, P_VALIDATE_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV2_DELAYED6: NONDET_DELAY_4(P_VALIDATE_DIV2_DELAYED5.OUT0, P_VALIDATE_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1
    PS_APU_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV1_DELAYED6.OUT0, PS_APU_DIV1_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2
    PS_APU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT0, PS_APU_DIV2_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3
    PS_APU_DIV3_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV3_DELAYED6.OUT0, PS_APU_DIV3_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4
    PS_APU_DIV4_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV4_DELAYED6.OUT0, PS_APU_DIV4_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1
    PS_APU_DIV1_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV1_DELAYED6.OUT1, PS_APU_DIV1_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV1_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2
    PS_APU_DIV2_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT1, PS_APU_DIV2_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3
    PS_APU_DIV3_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV3_DELAYED6.OUT1, PS_APU_DIV3_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV3_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4
    PS_APU_DIV4_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV4_DELAYED6.OUT1, PS_APU_DIV4_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV4_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for MAN_RESET_DIV2
    MAN_RESET_DIV2_DELAYED6.OUT0_SUBS: boolean;
    MAN_RESET_DIV2_AFTER_FAILURE: INJECT_FAILURE(MAN_RESET_DIV2_DELAYED6.OUT0, MAN_RESET_DIV2_DELAYED6.OUT0_FAULT, TRUE, MAN_RESET_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for P_VALIDATE_DIV2
    P_VALIDATE_DIV2_DELAYED6.OUT0_SUBS: boolean;
    P_VALIDATE_DIV2_AFTER_FAILURE: INJECT_FAILURE(P_VALIDATE_DIV2_DELAYED6.OUT0, P_VALIDATE_DIV2_DELAYED6.OUT0_FAULT, TRUE, P_VALIDATE_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PS_ALU(
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_RESET_DIV2_AFTER_FAILURE.OUT1, MAN_RESET_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        P_VALIDATE_DIV2_AFTER_FAILURE.OUT1, P_VALIDATE_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_AFTER_FAILURE.FAILURE | PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.FAILURE | PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_AFTER_FAILURE.FAILURE | PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_AFTER_FAILURE.FAILURE | MAN_RESET_DIV2_AFTER_FAILURE.FAILURE | P_VALIDATE_DIV2_AFTER_FAILURE.FAILURE;
    HLEG_T_Min_AND_HLEG_P_Min1 := content.HLEG_T_Min_AND_HLEG_P_Min1;
    HLEG_T_Min_AND_HLEG_P_Min1_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min1_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min2 := content.HLEG_T_Min_AND_HLEG_P_Min2;
    HLEG_T_Min_AND_HLEG_P_Min2_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min3 := content.HLEG_T_Min_AND_HLEG_P_Min3;
    HLEG_T_Min_AND_HLEG_P_Min3_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min3_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min4 := content.HLEG_T_Min_AND_HLEG_P_Min4;
    HLEG_T_Min_AND_HLEG_P_Min4_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min4_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_1 := content.HLEG_P_Max2_OR_NF_Max2_1;
    HLEG_P_Max2_OR_NF_Max2_1_FAULT := content.HLEG_P_Max2_OR_NF_Max2_1_FAULT;
    HLEG_P_Max2_OR_NF_Max2_1_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_1_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_2 := content.HLEG_P_Max2_OR_NF_Max2_2;
    HLEG_P_Max2_OR_NF_Max2_2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_2_FAULT;
    HLEG_P_Max2_OR_NF_Max2_2_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_2_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_3 := content.HLEG_P_Max2_OR_NF_Max2_3;
    HLEG_P_Max2_OR_NF_Max2_3_FAULT := content.HLEG_P_Max2_OR_NF_Max2_3_FAULT;
    HLEG_P_Max2_OR_NF_Max2_3_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_3_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_4 := content.HLEG_P_Max2_OR_NF_Max2_4;
    HLEG_P_Max2_OR_NF_Max2_4_FAULT := content.HLEG_P_Max2_OR_NF_Max2_4_FAULT;
    HLEG_P_Max2_OR_NF_Max2_4_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_4_CONNECTED;
    MANUAL_RESET := content.MANUAL_RESET;
    MANUAL_RESET_FAULT := content.MANUAL_RESET_FAULT;
    MANUAL_RESET_CONNECTED := content.MANUAL_RESET_CONNECTED;
    MANUAL_P_VALIDATE := content.MANUAL_P_VALIDATE;
    MANUAL_P_VALIDATE_FAULT := content.MANUAL_P_VALIDATE_FAULT;
    MANUAL_P_VALIDATE_CONNECTED := content.MANUAL_P_VALIDATE_CONNECTED;
    RODS_DOWN := content.RODS_DOWN;
    ENABLE_SAS := content.ENABLE_SAS;
    ENABLE_PAS := content.ENABLE_PAS;
    RODS_DOWN_FAULT := content.RODS_DOWN_FAULT;
    ENABLE_SAS_FAULT := content.ENABLE_SAS_FAULT;
    ENABLE_PAS_FAULT := content.ENABLE_PAS_FAULT;

MODULE WRAPPER_PS_ALU_DIV3(
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_CONNECTED, 
    MAN_RESET_DIV3, MAN_RESET_DIV3_FAULT, MAN_RESET_DIV3_CONNECTED, 
    P_VALIDATE_DIV3, P_VALIDATE_DIV3_FAULT, P_VALIDATE_DIV3_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_APU from division 1
    PS_APU_DIV1_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED2: NONDET_DELAY_3(PS_APU_DIV1_DELAYED1.OUT0, PS_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED1.OUT1, PS_APU_DIV1_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED3: NONDET_DELAY_3(PS_APU_DIV1_DELAYED2.OUT0, PS_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED2.OUT1, PS_APU_DIV1_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED4: NONDET_DELAY_3(PS_APU_DIV1_DELAYED3.OUT0, PS_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED3.OUT1, PS_APU_DIV1_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED5: NONDET_DELAY_3(PS_APU_DIV1_DELAYED4.OUT0, PS_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED4.OUT1, PS_APU_DIV1_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED6: NONDET_DELAY_3(PS_APU_DIV1_DELAYED5.OUT0, PS_APU_DIV1_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED5.OUT1, PS_APU_DIV1_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 2
    PS_APU_DIV2_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, TRUE);
    PS_APU_DIV2_DELAYED2: NONDET_DELAY_3(PS_APU_DIV2_DELAYED1.OUT0, PS_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED1.OUT1, PS_APU_DIV2_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED3: NONDET_DELAY_3(PS_APU_DIV2_DELAYED2.OUT0, PS_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED2.OUT1, PS_APU_DIV2_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED4: NONDET_DELAY_3(PS_APU_DIV2_DELAYED3.OUT0, PS_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED3.OUT1, PS_APU_DIV2_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED5: NONDET_DELAY_3(PS_APU_DIV2_DELAYED4.OUT0, PS_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED4.OUT1, PS_APU_DIV2_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED6: NONDET_DELAY_3(PS_APU_DIV2_DELAYED5.OUT0, PS_APU_DIV2_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED5.OUT1, PS_APU_DIV2_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 3
    PS_APU_DIV3_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, TRUE);
    PS_APU_DIV3_DELAYED2: NONDET_DELAY_3(PS_APU_DIV3_DELAYED1.OUT0, PS_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED1.OUT1, PS_APU_DIV3_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED3: NONDET_DELAY_3(PS_APU_DIV3_DELAYED2.OUT0, PS_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED2.OUT1, PS_APU_DIV3_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED4: NONDET_DELAY_3(PS_APU_DIV3_DELAYED3.OUT0, PS_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED3.OUT1, PS_APU_DIV3_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED5: NONDET_DELAY_3(PS_APU_DIV3_DELAYED4.OUT0, PS_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED4.OUT1, PS_APU_DIV3_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED6: NONDET_DELAY_3(PS_APU_DIV3_DELAYED5.OUT0, PS_APU_DIV3_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED5.OUT1, PS_APU_DIV3_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 4
    PS_APU_DIV4_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, TRUE);
    PS_APU_DIV4_DELAYED2: NONDET_DELAY_3(PS_APU_DIV4_DELAYED1.OUT0, PS_APU_DIV4_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED1.OUT1, PS_APU_DIV4_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED3: NONDET_DELAY_3(PS_APU_DIV4_DELAYED2.OUT0, PS_APU_DIV4_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED2.OUT1, PS_APU_DIV4_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED4: NONDET_DELAY_3(PS_APU_DIV4_DELAYED3.OUT0, PS_APU_DIV4_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED3.OUT1, PS_APU_DIV4_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED5: NONDET_DELAY_3(PS_APU_DIV4_DELAYED4.OUT0, PS_APU_DIV4_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED4.OUT1, PS_APU_DIV4_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED6: NONDET_DELAY_3(PS_APU_DIV4_DELAYED5.OUT0, PS_APU_DIV4_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED5.OUT1, PS_APU_DIV4_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for MAN_RESET from division 3
    MAN_RESET_DIV3_DELAYED1: NONDET_DELAY_4(MAN_RESET_DIV3, MAN_RESET_DIV3_FAULT, TRUE);
    MAN_RESET_DIV3_DELAYED2: NONDET_DELAY_4(MAN_RESET_DIV3_DELAYED1.OUT0, MAN_RESET_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    MAN_RESET_DIV3_DELAYED3: NONDET_DELAY_4(MAN_RESET_DIV3_DELAYED2.OUT0, MAN_RESET_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    MAN_RESET_DIV3_DELAYED4: NONDET_DELAY_4(MAN_RESET_DIV3_DELAYED3.OUT0, MAN_RESET_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    MAN_RESET_DIV3_DELAYED5: NONDET_DELAY_4(MAN_RESET_DIV3_DELAYED4.OUT0, MAN_RESET_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    MAN_RESET_DIV3_DELAYED6: NONDET_DELAY_4(MAN_RESET_DIV3_DELAYED5.OUT0, MAN_RESET_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for P_VALIDATE from division 3
    P_VALIDATE_DIV3_DELAYED1: NONDET_DELAY_4(P_VALIDATE_DIV3, P_VALIDATE_DIV3_FAULT, TRUE);
    P_VALIDATE_DIV3_DELAYED2: NONDET_DELAY_4(P_VALIDATE_DIV3_DELAYED1.OUT0, P_VALIDATE_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV3_DELAYED3: NONDET_DELAY_4(P_VALIDATE_DIV3_DELAYED2.OUT0, P_VALIDATE_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV3_DELAYED4: NONDET_DELAY_4(P_VALIDATE_DIV3_DELAYED3.OUT0, P_VALIDATE_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV3_DELAYED5: NONDET_DELAY_4(P_VALIDATE_DIV3_DELAYED4.OUT0, P_VALIDATE_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV3_DELAYED6: NONDET_DELAY_4(P_VALIDATE_DIV3_DELAYED5.OUT0, P_VALIDATE_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2
    PS_APU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT0, PS_APU_DIV2_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2
    PS_APU_DIV2_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT1, PS_APU_DIV2_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PS_ALU(
        PS_APU_DIV1_DELAYED6.OUT0, PS_APU_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_DIV3_DELAYED6.OUT0, PS_APU_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_DIV4_DELAYED6.OUT0, PS_APU_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_DIV1_DELAYED6.OUT1, PS_APU_DIV1_DELAYED6.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_DIV3_DELAYED6.OUT1, PS_APU_DIV3_DELAYED6.OUT1_FAULT, TRUE, 
        PS_APU_DIV4_DELAYED6.OUT1, PS_APU_DIV4_DELAYED6.OUT1_FAULT, TRUE, 
        MAN_RESET_DIV3_DELAYED6.OUT0, MAN_RESET_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        P_VALIDATE_DIV3_DELAYED6.OUT0, P_VALIDATE_DIV3_DELAYED6.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.FAILURE;
    HLEG_T_Min_AND_HLEG_P_Min1 := content.HLEG_T_Min_AND_HLEG_P_Min1;
    HLEG_T_Min_AND_HLEG_P_Min1_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min1_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min2 := content.HLEG_T_Min_AND_HLEG_P_Min2;
    HLEG_T_Min_AND_HLEG_P_Min2_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min3 := content.HLEG_T_Min_AND_HLEG_P_Min3;
    HLEG_T_Min_AND_HLEG_P_Min3_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min3_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min4 := content.HLEG_T_Min_AND_HLEG_P_Min4;
    HLEG_T_Min_AND_HLEG_P_Min4_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min4_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_1 := content.HLEG_P_Max2_OR_NF_Max2_1;
    HLEG_P_Max2_OR_NF_Max2_1_FAULT := content.HLEG_P_Max2_OR_NF_Max2_1_FAULT;
    HLEG_P_Max2_OR_NF_Max2_1_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_1_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_2 := content.HLEG_P_Max2_OR_NF_Max2_2;
    HLEG_P_Max2_OR_NF_Max2_2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_2_FAULT;
    HLEG_P_Max2_OR_NF_Max2_2_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_2_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_3 := content.HLEG_P_Max2_OR_NF_Max2_3;
    HLEG_P_Max2_OR_NF_Max2_3_FAULT := content.HLEG_P_Max2_OR_NF_Max2_3_FAULT;
    HLEG_P_Max2_OR_NF_Max2_3_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_3_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_4 := content.HLEG_P_Max2_OR_NF_Max2_4;
    HLEG_P_Max2_OR_NF_Max2_4_FAULT := content.HLEG_P_Max2_OR_NF_Max2_4_FAULT;
    HLEG_P_Max2_OR_NF_Max2_4_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_4_CONNECTED;
    MANUAL_RESET := content.MANUAL_RESET;
    MANUAL_RESET_FAULT := content.MANUAL_RESET_FAULT;
    MANUAL_RESET_CONNECTED := content.MANUAL_RESET_CONNECTED;
    MANUAL_P_VALIDATE := content.MANUAL_P_VALIDATE;
    MANUAL_P_VALIDATE_FAULT := content.MANUAL_P_VALIDATE_FAULT;
    MANUAL_P_VALIDATE_CONNECTED := content.MANUAL_P_VALIDATE_CONNECTED;
    RODS_DOWN := content.RODS_DOWN;
    ENABLE_SAS := content.ENABLE_SAS;
    ENABLE_PAS := content.ENABLE_PAS;
    RODS_DOWN_FAULT := content.RODS_DOWN_FAULT;
    ENABLE_SAS_FAULT := content.ENABLE_SAS_FAULT;
    ENABLE_PAS_FAULT := content.ENABLE_PAS_FAULT;

MODULE WRAPPER_PS_ALU_DIV4(
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_CONNECTED, 
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_CONNECTED, 
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_CONNECTED, 
    MAN_RESET_DIV4, MAN_RESET_DIV4_FAULT, MAN_RESET_DIV4_CONNECTED, 
    P_VALIDATE_DIV4, P_VALIDATE_DIV4_FAULT, P_VALIDATE_DIV4_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_APU from division 1
    PS_APU_DIV1_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV1_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED2: NONDET_DELAY_3(PS_APU_DIV1_DELAYED1.OUT0, PS_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED1.OUT1, PS_APU_DIV1_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED3: NONDET_DELAY_3(PS_APU_DIV1_DELAYED2.OUT0, PS_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED2.OUT1, PS_APU_DIV1_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED4: NONDET_DELAY_3(PS_APU_DIV1_DELAYED3.OUT0, PS_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED3.OUT1, PS_APU_DIV1_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED5: NONDET_DELAY_3(PS_APU_DIV1_DELAYED4.OUT0, PS_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED4.OUT1, PS_APU_DIV1_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV1_DELAYED6: NONDET_DELAY_3(PS_APU_DIV1_DELAYED5.OUT0, PS_APU_DIV1_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV1_DELAYED5.OUT1, PS_APU_DIV1_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 2
    PS_APU_DIV2_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_FAULT, TRUE);
    PS_APU_DIV2_DELAYED2: NONDET_DELAY_3(PS_APU_DIV2_DELAYED1.OUT0, PS_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED1.OUT1, PS_APU_DIV2_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED3: NONDET_DELAY_3(PS_APU_DIV2_DELAYED2.OUT0, PS_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED2.OUT1, PS_APU_DIV2_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED4: NONDET_DELAY_3(PS_APU_DIV2_DELAYED3.OUT0, PS_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED3.OUT1, PS_APU_DIV2_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED5: NONDET_DELAY_3(PS_APU_DIV2_DELAYED4.OUT0, PS_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED4.OUT1, PS_APU_DIV2_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV2_DELAYED6: NONDET_DELAY_3(PS_APU_DIV2_DELAYED5.OUT0, PS_APU_DIV2_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED5.OUT1, PS_APU_DIV2_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 3
    PS_APU_DIV3_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV3_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV3_FAULT, TRUE);
    PS_APU_DIV3_DELAYED2: NONDET_DELAY_3(PS_APU_DIV3_DELAYED1.OUT0, PS_APU_DIV3_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED1.OUT1, PS_APU_DIV3_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED3: NONDET_DELAY_3(PS_APU_DIV3_DELAYED2.OUT0, PS_APU_DIV3_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED2.OUT1, PS_APU_DIV3_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED4: NONDET_DELAY_3(PS_APU_DIV3_DELAYED3.OUT0, PS_APU_DIV3_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED3.OUT1, PS_APU_DIV3_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED5: NONDET_DELAY_3(PS_APU_DIV3_DELAYED4.OUT0, PS_APU_DIV3_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED4.OUT1, PS_APU_DIV3_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV3_DELAYED6: NONDET_DELAY_3(PS_APU_DIV3_DELAYED5.OUT0, PS_APU_DIV3_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV3_DELAYED5.OUT1, PS_APU_DIV3_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PS_APU from division 4
    PS_APU_DIV4_DELAYED1: NONDET_DELAY_3(PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV4_FAULT, TRUE, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV4_FAULT, TRUE);
    PS_APU_DIV4_DELAYED2: NONDET_DELAY_3(PS_APU_DIV4_DELAYED1.OUT0, PS_APU_DIV4_DELAYED1.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED1.OUT1, PS_APU_DIV4_DELAYED1.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED3: NONDET_DELAY_3(PS_APU_DIV4_DELAYED2.OUT0, PS_APU_DIV4_DELAYED2.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED2.OUT1, PS_APU_DIV4_DELAYED2.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED4: NONDET_DELAY_3(PS_APU_DIV4_DELAYED3.OUT0, PS_APU_DIV4_DELAYED3.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED3.OUT1, PS_APU_DIV4_DELAYED3.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED5: NONDET_DELAY_3(PS_APU_DIV4_DELAYED4.OUT0, PS_APU_DIV4_DELAYED4.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED4.OUT1, PS_APU_DIV4_DELAYED4.OUT1_FAULT, TRUE);
    PS_APU_DIV4_DELAYED6: NONDET_DELAY_3(PS_APU_DIV4_DELAYED5.OUT0, PS_APU_DIV4_DELAYED5.OUT0_FAULT, TRUE, PS_APU_DIV4_DELAYED5.OUT1, PS_APU_DIV4_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for MAN_RESET from division 4
    MAN_RESET_DIV4_DELAYED1: NONDET_DELAY_4(MAN_RESET_DIV4, MAN_RESET_DIV4_FAULT, TRUE);
    MAN_RESET_DIV4_DELAYED2: NONDET_DELAY_4(MAN_RESET_DIV4_DELAYED1.OUT0, MAN_RESET_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    MAN_RESET_DIV4_DELAYED3: NONDET_DELAY_4(MAN_RESET_DIV4_DELAYED2.OUT0, MAN_RESET_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    MAN_RESET_DIV4_DELAYED4: NONDET_DELAY_4(MAN_RESET_DIV4_DELAYED3.OUT0, MAN_RESET_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    MAN_RESET_DIV4_DELAYED5: NONDET_DELAY_4(MAN_RESET_DIV4_DELAYED4.OUT0, MAN_RESET_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    MAN_RESET_DIV4_DELAYED6: NONDET_DELAY_4(MAN_RESET_DIV4_DELAYED5.OUT0, MAN_RESET_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for P_VALIDATE from division 4
    P_VALIDATE_DIV4_DELAYED1: NONDET_DELAY_4(P_VALIDATE_DIV4, P_VALIDATE_DIV4_FAULT, TRUE);
    P_VALIDATE_DIV4_DELAYED2: NONDET_DELAY_4(P_VALIDATE_DIV4_DELAYED1.OUT0, P_VALIDATE_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV4_DELAYED3: NONDET_DELAY_4(P_VALIDATE_DIV4_DELAYED2.OUT0, P_VALIDATE_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV4_DELAYED4: NONDET_DELAY_4(P_VALIDATE_DIV4_DELAYED3.OUT0, P_VALIDATE_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV4_DELAYED5: NONDET_DELAY_4(P_VALIDATE_DIV4_DELAYED4.OUT0, P_VALIDATE_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    P_VALIDATE_DIV4_DELAYED6: NONDET_DELAY_4(P_VALIDATE_DIV4_DELAYED5.OUT0, P_VALIDATE_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2
    PS_APU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT0, PS_APU_DIV2_DELAYED6.OUT0_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2
    PS_APU_DIV2_DELAYED6.OUT1_SUBS: boolean;
    PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_APU_DIV2_DELAYED6.OUT1, PS_APU_DIV2_DELAYED6.OUT1_FAULT, TRUE, PS_APU_DIV2_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PS_ALU(
        PS_APU_DIV1_DELAYED6.OUT0, PS_APU_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_DIV3_DELAYED6.OUT0, PS_APU_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_DIV4_DELAYED6.OUT0, PS_APU_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        PS_APU_DIV1_DELAYED6.OUT1, PS_APU_DIV1_DELAYED6.OUT1_FAULT, TRUE, 
        PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1, PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_APU_DIV3_DELAYED6.OUT1, PS_APU_DIV3_DELAYED6.OUT1_FAULT, TRUE, 
        PS_APU_DIV4_DELAYED6.OUT1, PS_APU_DIV4_DELAYED6.OUT1_FAULT, TRUE, 
        MAN_RESET_DIV4_DELAYED6.OUT0, MAN_RESET_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        P_VALIDATE_DIV4_DELAYED6.OUT0, P_VALIDATE_DIV4_DELAYED6.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := PS_APU_HLEG_T_Min_AND_HLEG_P_Min_DIV2_AFTER_FAILURE.FAILURE | PS_APU_HLEG_P_Max2_OR_NF_Max2_DIV2_AFTER_FAILURE.FAILURE;
    HLEG_T_Min_AND_HLEG_P_Min1 := content.HLEG_T_Min_AND_HLEG_P_Min1;
    HLEG_T_Min_AND_HLEG_P_Min1_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min1_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min2 := content.HLEG_T_Min_AND_HLEG_P_Min2;
    HLEG_T_Min_AND_HLEG_P_Min2_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min2_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min3 := content.HLEG_T_Min_AND_HLEG_P_Min3;
    HLEG_T_Min_AND_HLEG_P_Min3_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min3_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED;
    HLEG_T_Min_AND_HLEG_P_Min4 := content.HLEG_T_Min_AND_HLEG_P_Min4;
    HLEG_T_Min_AND_HLEG_P_Min4_FAULT := content.HLEG_T_Min_AND_HLEG_P_Min4_FAULT;
    HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED := content.HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_1 := content.HLEG_P_Max2_OR_NF_Max2_1;
    HLEG_P_Max2_OR_NF_Max2_1_FAULT := content.HLEG_P_Max2_OR_NF_Max2_1_FAULT;
    HLEG_P_Max2_OR_NF_Max2_1_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_1_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_2 := content.HLEG_P_Max2_OR_NF_Max2_2;
    HLEG_P_Max2_OR_NF_Max2_2_FAULT := content.HLEG_P_Max2_OR_NF_Max2_2_FAULT;
    HLEG_P_Max2_OR_NF_Max2_2_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_2_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_3 := content.HLEG_P_Max2_OR_NF_Max2_3;
    HLEG_P_Max2_OR_NF_Max2_3_FAULT := content.HLEG_P_Max2_OR_NF_Max2_3_FAULT;
    HLEG_P_Max2_OR_NF_Max2_3_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_3_CONNECTED;
    HLEG_P_Max2_OR_NF_Max2_4 := content.HLEG_P_Max2_OR_NF_Max2_4;
    HLEG_P_Max2_OR_NF_Max2_4_FAULT := content.HLEG_P_Max2_OR_NF_Max2_4_FAULT;
    HLEG_P_Max2_OR_NF_Max2_4_CONNECTED := content.HLEG_P_Max2_OR_NF_Max2_4_CONNECTED;
    MANUAL_RESET := content.MANUAL_RESET;
    MANUAL_RESET_FAULT := content.MANUAL_RESET_FAULT;
    MANUAL_RESET_CONNECTED := content.MANUAL_RESET_CONNECTED;
    MANUAL_P_VALIDATE := content.MANUAL_P_VALIDATE;
    MANUAL_P_VALIDATE_FAULT := content.MANUAL_P_VALIDATE_FAULT;
    MANUAL_P_VALIDATE_CONNECTED := content.MANUAL_P_VALIDATE_CONNECTED;
    RODS_DOWN := content.RODS_DOWN;
    ENABLE_SAS := content.ENABLE_SAS;
    ENABLE_PAS := content.ENABLE_PAS;
    RODS_DOWN_FAULT := content.RODS_DOWN_FAULT;
    ENABLE_SAS_FAULT := content.ENABLE_SAS_FAULT;
    ENABLE_PAS_FAULT := content.ENABLE_PAS_FAULT;

MODULE WRAPPER_SAS_APU_DIV1(
    HLEG_T_SAS_DIV1, HLEG_T_SAS_DIV1_FAULT, HLEG_T_SAS_DIV1_CONNECTED, 
    NF_DIV1, NF_DIV1_FAULT, NF_DIV1_CONNECTED, 
    NF_DIV2, NF_DIV2_FAULT, NF_DIV2_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for HLEG_T_SAS from division 1
    HLEG_T_SAS_DIV1_DELAYED1: NONDET_DELAY_1(HLEG_T_SAS_DIV1, HLEG_T_SAS_DIV1_FAULT, TRUE);
    HLEG_T_SAS_DIV1_DELAYED2: NONDET_DELAY_1(HLEG_T_SAS_DIV1_DELAYED1.OUT0, HLEG_T_SAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 1
    NF_DIV1_DELAYED1: NONDET_DELAY_2(NF_DIV1, NF_DIV1_FAULT, TRUE);
    NF_DIV1_DELAYED2: NONDET_DELAY_2(NF_DIV1_DELAYED1.OUT0, NF_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 2
    NF_DIV2_DELAYED1: NONDET_DELAY_2(NF_DIV2, NF_DIV2_FAULT, TRUE);
    NF_DIV2_DELAYED2: NONDET_DELAY_2(NF_DIV2_DELAYED1.OUT0, NF_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- fault injection modules for HLEG_T_SAS_DIV1
    HLEG_T_SAS_DIV1_DELAYED2.OUT0_SUBS: {20,400};
    HLEG_T_SAS_DIV1_AFTER_FAILURE: INJECT_FAILURE(HLEG_T_SAS_DIV1_DELAYED2.OUT0, HLEG_T_SAS_DIV1_DELAYED2.OUT0_FAULT, TRUE, HLEG_T_SAS_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for NF_DIV1
    NF_DIV1_DELAYED2.OUT0_SUBS: {0,180000,250000};
    NF_DIV1_AFTER_FAILURE: INJECT_FAILURE(NF_DIV1_DELAYED2.OUT0, NF_DIV1_DELAYED2.OUT0_FAULT, TRUE, NF_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for NF_DIV2
    NF_DIV2_DELAYED2.OUT0_SUBS: {0,180000,250000};
    NF_DIV2_AFTER_FAILURE: INJECT_FAILURE(NF_DIV2_DELAYED2.OUT0, NF_DIV2_DELAYED2.OUT0_FAULT, TRUE, NF_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: SAS_APU(
        HLEG_T_SAS_DIV1_AFTER_FAILURE.OUT1, HLEG_T_SAS_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        NF_DIV1_AFTER_FAILURE.OUT1, NF_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        NF_DIV2_AFTER_FAILURE.OUT1, NF_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := HLEG_T_SAS_DIV1_AFTER_FAILURE.FAILURE | NF_DIV1_AFTER_FAILURE.FAILURE | NF_DIV2_AFTER_FAILURE.FAILURE;
    HLEG_T := content.HLEG_T;
    HLEG_T_FAULT := content.HLEG_T_FAULT;
    HLEG_T_CONNECTED := content.HLEG_T_CONNECTED;
    NEUTRON_FLUX_1 := content.NEUTRON_FLUX_1;
    NEUTRON_FLUX_1_FAULT := content.NEUTRON_FLUX_1_FAULT;
    NEUTRON_FLUX_1_CONNECTED := content.NEUTRON_FLUX_1_CONNECTED;
    NEUTRON_FLUX_2 := content.NEUTRON_FLUX_2;
    NEUTRON_FLUX_2_FAULT := content.NEUTRON_FLUX_2_FAULT;
    NEUTRON_FLUX_2_CONNECTED := content.NEUTRON_FLUX_2_CONNECTED;
    RT_CRITERIA := content.RT_CRITERIA;
    RT_CRITERIA_FAULT := content.RT_CRITERIA_FAULT;

MODULE WRAPPER_SAS_APU_DIV2(
    HLEG_T_SAS_DIV2, HLEG_T_SAS_DIV2_FAULT, HLEG_T_SAS_DIV2_CONNECTED, 
    NF_DIV3, NF_DIV3_FAULT, NF_DIV3_CONNECTED, 
    NF_DIV4, NF_DIV4_FAULT, NF_DIV4_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for HLEG_T_SAS from division 2
    HLEG_T_SAS_DIV2_DELAYED1: NONDET_DELAY_1(HLEG_T_SAS_DIV2, HLEG_T_SAS_DIV2_FAULT, TRUE);
    HLEG_T_SAS_DIV2_DELAYED2: NONDET_DELAY_1(HLEG_T_SAS_DIV2_DELAYED1.OUT0, HLEG_T_SAS_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 3
    NF_DIV3_DELAYED1: NONDET_DELAY_2(NF_DIV3, NF_DIV3_FAULT, TRUE);
    NF_DIV3_DELAYED2: NONDET_DELAY_2(NF_DIV3_DELAYED1.OUT0, NF_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for NF from division 4
    NF_DIV4_DELAYED1: NONDET_DELAY_2(NF_DIV4, NF_DIV4_FAULT, TRUE);
    NF_DIV4_DELAYED2: NONDET_DELAY_2(NF_DIV4_DELAYED1.OUT0, NF_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    -- fault injection modules for HLEG_T_SAS_DIV2
    HLEG_T_SAS_DIV2_DELAYED2.OUT0_SUBS: {20,400};
    HLEG_T_SAS_DIV2_AFTER_FAILURE: INJECT_FAILURE(HLEG_T_SAS_DIV2_DELAYED2.OUT0, HLEG_T_SAS_DIV2_DELAYED2.OUT0_FAULT, TRUE, HLEG_T_SAS_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for NF_DIV3
    NF_DIV3_DELAYED2.OUT0_SUBS: {0,180000,250000};
    NF_DIV3_AFTER_FAILURE: INJECT_FAILURE(NF_DIV3_DELAYED2.OUT0, NF_DIV3_DELAYED2.OUT0_FAULT, TRUE, NF_DIV3_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for NF_DIV4
    NF_DIV4_DELAYED2.OUT0_SUBS: {0,180000,250000};
    NF_DIV4_AFTER_FAILURE: INJECT_FAILURE(NF_DIV4_DELAYED2.OUT0, NF_DIV4_DELAYED2.OUT0_FAULT, TRUE, NF_DIV4_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: SAS_APU(
        HLEG_T_SAS_DIV2_AFTER_FAILURE.OUT1, HLEG_T_SAS_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        NF_DIV3_AFTER_FAILURE.OUT1, NF_DIV3_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        NF_DIV4_AFTER_FAILURE.OUT1, NF_DIV4_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := HLEG_T_SAS_DIV2_AFTER_FAILURE.FAILURE | NF_DIV3_AFTER_FAILURE.FAILURE | NF_DIV4_AFTER_FAILURE.FAILURE;
    HLEG_T := content.HLEG_T;
    HLEG_T_FAULT := content.HLEG_T_FAULT;
    HLEG_T_CONNECTED := content.HLEG_T_CONNECTED;
    NEUTRON_FLUX_1 := content.NEUTRON_FLUX_1;
    NEUTRON_FLUX_1_FAULT := content.NEUTRON_FLUX_1_FAULT;
    NEUTRON_FLUX_1_CONNECTED := content.NEUTRON_FLUX_1_CONNECTED;
    NEUTRON_FLUX_2 := content.NEUTRON_FLUX_2;
    NEUTRON_FLUX_2_FAULT := content.NEUTRON_FLUX_2_FAULT;
    NEUTRON_FLUX_2_CONNECTED := content.NEUTRON_FLUX_2_CONNECTED;
    RT_CRITERIA := content.RT_CRITERIA;
    RT_CRITERIA_FAULT := content.RT_CRITERIA_FAULT;

MODULE WRAPPER_SAS_ALU_DIV1(
    SAS_APU_RT_CRITERIA_DIV1, SAS_APU_RT_CRITERIA_DIV1_FAULT, SAS_APU_RT_CRITERIA_DIV1_CONNECTED, 
    SAS_APU_RT_CRITERIA_DIV2, SAS_APU_RT_CRITERIA_DIV2_FAULT, SAS_APU_RT_CRITERIA_DIV2_CONNECTED, 
    MAN_TRIP_DIV1, MAN_TRIP_DIV1_FAULT, MAN_TRIP_DIV1_CONNECTED, 
    PAS_RODS_UP_GROUP_1_DIV1, PAS_RODS_UP_GROUP_1_DIV1_FAULT, PAS_RODS_UP_GROUP_1_DIV1_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV1, PS_ALU_ENABLE_SAS_DIV1_FAULT, PS_ALU_ENABLE_SAS_DIV1_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV3, PS_ALU_ENABLE_SAS_DIV3_FAULT, PS_ALU_ENABLE_SAS_DIV3_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for SAS_APU from division 1
    SAS_APU_DIV1_DELAYED1: NONDET_DELAY_4(SAS_APU_RT_CRITERIA_DIV1, SAS_APU_RT_CRITERIA_DIV1_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED2: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED1.OUT0, SAS_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED3: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED2.OUT0, SAS_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED4: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED3.OUT0, SAS_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED5: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED4.OUT0, SAS_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED6: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED5.OUT0, SAS_APU_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for SAS_APU from division 2
    SAS_APU_DIV2_DELAYED1: NONDET_DELAY_4(SAS_APU_RT_CRITERIA_DIV2, SAS_APU_RT_CRITERIA_DIV2_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED2: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED1.OUT0, SAS_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED3: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED2.OUT0, SAS_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED4: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED3.OUT0, SAS_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED5: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED4.OUT0, SAS_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED6: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED5.OUT0, SAS_APU_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_TRIP from division 1
    MAN_TRIP_DIV1_DELAYED1: NONDET_DELAY_4(MAN_TRIP_DIV1, MAN_TRIP_DIV1_FAULT, TRUE);
    MAN_TRIP_DIV1_DELAYED2: NONDET_DELAY_4(MAN_TRIP_DIV1_DELAYED1.OUT0, MAN_TRIP_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV1_DELAYED3: NONDET_DELAY_4(MAN_TRIP_DIV1_DELAYED2.OUT0, MAN_TRIP_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV1_DELAYED4: NONDET_DELAY_4(MAN_TRIP_DIV1_DELAYED3.OUT0, MAN_TRIP_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV1_DELAYED5: NONDET_DELAY_4(MAN_TRIP_DIV1_DELAYED4.OUT0, MAN_TRIP_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV1_DELAYED6: NONDET_DELAY_4(MAN_TRIP_DIV1_DELAYED5.OUT0, MAN_TRIP_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for PAS from division 1
    PAS_DIV1_DELAYED1: NONDET_DELAY_4(PAS_RODS_UP_GROUP_1_DIV1, PAS_RODS_UP_GROUP_1_DIV1_FAULT, TRUE);
    PAS_DIV1_DELAYED2: NONDET_DELAY_4(PAS_DIV1_DELAYED1.OUT0, PAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED3: NONDET_DELAY_4(PAS_DIV1_DELAYED2.OUT0, PAS_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED4: NONDET_DELAY_4(PAS_DIV1_DELAYED3.OUT0, PAS_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED5: NONDET_DELAY_4(PAS_DIV1_DELAYED4.OUT0, PAS_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED6: NONDET_DELAY_4(PAS_DIV1_DELAYED5.OUT0, PAS_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 1
    PS_ALU_DIV1_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV1, PS_ALU_ENABLE_SAS_DIV1_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED1.OUT0, PS_ALU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED2.OUT0, PS_ALU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED3.OUT0, PS_ALU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED4.OUT0, PS_ALU_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED5.OUT0, PS_ALU_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 3
    PS_ALU_DIV3_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV3, PS_ALU_ENABLE_SAS_DIV3_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED1.OUT0, PS_ALU_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED2.OUT0, PS_ALU_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED3.OUT0, PS_ALU_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED4.OUT0, PS_ALU_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED5.OUT0, PS_ALU_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for SAS_APU_RT_CRITERIA_DIV1
    SAS_APU_DIV1_DELAYED6.OUT0_SUBS: boolean;
    SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE: INJECT_FAILURE(SAS_APU_DIV1_DELAYED6.OUT0, SAS_APU_DIV1_DELAYED6.OUT0_FAULT, TRUE, SAS_APU_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_APU_RT_CRITERIA_DIV2
    SAS_APU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE: INJECT_FAILURE(SAS_APU_DIV2_DELAYED6.OUT0, SAS_APU_DIV2_DELAYED6.OUT0_FAULT, TRUE, SAS_APU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for MAN_TRIP_DIV1
    MAN_TRIP_DIV1_DELAYED6.OUT0_SUBS: boolean;
    MAN_TRIP_DIV1_AFTER_FAILURE: INJECT_FAILURE(MAN_TRIP_DIV1_DELAYED6.OUT0, MAN_TRIP_DIV1_DELAYED6.OUT0_FAULT, TRUE, MAN_TRIP_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PAS_RODS_UP_GROUP_1_DIV1
    PAS_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE: INJECT_FAILURE(PAS_DIV1_DELAYED6.OUT0, PAS_DIV1_DELAYED6.OUT0_FAULT, TRUE, PAS_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV1
    PS_ALU_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV1_DELAYED6.OUT0, PS_ALU_DIV1_DELAYED6.OUT0_FAULT, TRUE, PS_ALU_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV3
    PS_ALU_DIV3_DELAYED6.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV3_DELAYED6.OUT0, PS_ALU_DIV3_DELAYED6.OUT0_FAULT, TRUE, PS_ALU_DIV3_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: SAS_ALU(
        SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE.OUT1, SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE.OUT1, SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_TRIP_DIV1_AFTER_FAILURE.OUT1, MAN_TRIP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE.OUT1, PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE.FAILURE | SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE.FAILURE | MAN_TRIP_DIV1_AFTER_FAILURE.FAILURE | PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE.FAILURE;
    RT_CRITERIA_1 := content.RT_CRITERIA_1;
    RT_CRITERIA_1_FAULT := content.RT_CRITERIA_1_FAULT;
    RT_CRITERIA_1_CONNECTED := content.RT_CRITERIA_1_CONNECTED;
    RT_CRITERIA_2 := content.RT_CRITERIA_2;
    RT_CRITERIA_2_FAULT := content.RT_CRITERIA_2_FAULT;
    RT_CRITERIA_2_CONNECTED := content.RT_CRITERIA_2_CONNECTED;
    MANUAL_TRIP := content.MANUAL_TRIP;
    MANUAL_TRIP_FAULT := content.MANUAL_TRIP_FAULT;
    MANUAL_TRIP_CONNECTED := content.MANUAL_TRIP_CONNECTED;
    CONTROL_RODS_UP := content.CONTROL_RODS_UP;
    CONTROL_RODS_UP_FAULT := content.CONTROL_RODS_UP_FAULT;
    CONTROL_RODS_UP_CONNECTED := content.CONTROL_RODS_UP_CONNECTED;
    ENABLE_SAS_1 := content.ENABLE_SAS_1;
    ENABLE_SAS_1_FAULT := content.ENABLE_SAS_1_FAULT;
    ENABLE_SAS_1_CONNECTED := content.ENABLE_SAS_1_CONNECTED;
    ENABLE_SAS_2 := content.ENABLE_SAS_2;
    ENABLE_SAS_2_FAULT := content.ENABLE_SAS_2_FAULT;
    ENABLE_SAS_2_CONNECTED := content.ENABLE_SAS_2_CONNECTED;
    RODS_DOWN := content.RODS_DOWN;
    RODS_UP := content.RODS_UP;
    RODS_DOWN_FAULT := content.RODS_DOWN_FAULT;
    RODS_UP_FAULT := content.RODS_UP_FAULT;

MODULE WRAPPER_SAS_ALU_DIV2(
    SAS_APU_RT_CRITERIA_DIV1, SAS_APU_RT_CRITERIA_DIV1_FAULT, SAS_APU_RT_CRITERIA_DIV1_CONNECTED, 
    SAS_APU_RT_CRITERIA_DIV2, SAS_APU_RT_CRITERIA_DIV2_FAULT, SAS_APU_RT_CRITERIA_DIV2_CONNECTED, 
    MAN_TRIP_DIV2, MAN_TRIP_DIV2_FAULT, MAN_TRIP_DIV2_CONNECTED, 
    PAS_RODS_UP_GROUP_1_DIV1, PAS_RODS_UP_GROUP_1_DIV1_FAULT, PAS_RODS_UP_GROUP_1_DIV1_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV2, PS_ALU_ENABLE_SAS_DIV2_FAULT, PS_ALU_ENABLE_SAS_DIV2_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV4, PS_ALU_ENABLE_SAS_DIV4_FAULT, PS_ALU_ENABLE_SAS_DIV4_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for SAS_APU from division 1
    SAS_APU_DIV1_DELAYED1: NONDET_DELAY_4(SAS_APU_RT_CRITERIA_DIV1, SAS_APU_RT_CRITERIA_DIV1_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED2: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED1.OUT0, SAS_APU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED3: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED2.OUT0, SAS_APU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED4: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED3.OUT0, SAS_APU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED5: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED4.OUT0, SAS_APU_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    SAS_APU_DIV1_DELAYED6: NONDET_DELAY_4(SAS_APU_DIV1_DELAYED5.OUT0, SAS_APU_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for SAS_APU from division 2
    SAS_APU_DIV2_DELAYED1: NONDET_DELAY_4(SAS_APU_RT_CRITERIA_DIV2, SAS_APU_RT_CRITERIA_DIV2_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED2: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED1.OUT0, SAS_APU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED3: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED2.OUT0, SAS_APU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED4: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED3.OUT0, SAS_APU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED5: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED4.OUT0, SAS_APU_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    SAS_APU_DIV2_DELAYED6: NONDET_DELAY_4(SAS_APU_DIV2_DELAYED5.OUT0, SAS_APU_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_TRIP from division 2
    MAN_TRIP_DIV2_DELAYED1: NONDET_DELAY_4(MAN_TRIP_DIV2, MAN_TRIP_DIV2_FAULT, TRUE);
    MAN_TRIP_DIV2_DELAYED2: NONDET_DELAY_4(MAN_TRIP_DIV2_DELAYED1.OUT0, MAN_TRIP_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV2_DELAYED3: NONDET_DELAY_4(MAN_TRIP_DIV2_DELAYED2.OUT0, MAN_TRIP_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV2_DELAYED4: NONDET_DELAY_4(MAN_TRIP_DIV2_DELAYED3.OUT0, MAN_TRIP_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV2_DELAYED5: NONDET_DELAY_4(MAN_TRIP_DIV2_DELAYED4.OUT0, MAN_TRIP_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    MAN_TRIP_DIV2_DELAYED6: NONDET_DELAY_4(MAN_TRIP_DIV2_DELAYED5.OUT0, MAN_TRIP_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for PAS from division 1
    PAS_DIV1_DELAYED1: NONDET_DELAY_4(PAS_RODS_UP_GROUP_1_DIV1, PAS_RODS_UP_GROUP_1_DIV1_FAULT, TRUE);
    PAS_DIV1_DELAYED2: NONDET_DELAY_4(PAS_DIV1_DELAYED1.OUT0, PAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED3: NONDET_DELAY_4(PAS_DIV1_DELAYED2.OUT0, PAS_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED4: NONDET_DELAY_4(PAS_DIV1_DELAYED3.OUT0, PAS_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED5: NONDET_DELAY_4(PAS_DIV1_DELAYED4.OUT0, PAS_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED6: NONDET_DELAY_4(PAS_DIV1_DELAYED5.OUT0, PAS_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 2
    PS_ALU_DIV2_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV2, PS_ALU_ENABLE_SAS_DIV2_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED1.OUT0, PS_ALU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED2.OUT0, PS_ALU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED3.OUT0, PS_ALU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED4.OUT0, PS_ALU_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED5.OUT0, PS_ALU_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 4
    PS_ALU_DIV4_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV4, PS_ALU_ENABLE_SAS_DIV4_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED1.OUT0, PS_ALU_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED2.OUT0, PS_ALU_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED3.OUT0, PS_ALU_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED4.OUT0, PS_ALU_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED5.OUT0, PS_ALU_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for SAS_APU_RT_CRITERIA_DIV1
    SAS_APU_DIV1_DELAYED6.OUT0_SUBS: boolean;
    SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE: INJECT_FAILURE(SAS_APU_DIV1_DELAYED6.OUT0, SAS_APU_DIV1_DELAYED6.OUT0_FAULT, TRUE, SAS_APU_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_APU_RT_CRITERIA_DIV2
    SAS_APU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE: INJECT_FAILURE(SAS_APU_DIV2_DELAYED6.OUT0, SAS_APU_DIV2_DELAYED6.OUT0_FAULT, TRUE, SAS_APU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for MAN_TRIP_DIV2
    MAN_TRIP_DIV2_DELAYED6.OUT0_SUBS: boolean;
    MAN_TRIP_DIV2_AFTER_FAILURE: INJECT_FAILURE(MAN_TRIP_DIV2_DELAYED6.OUT0, MAN_TRIP_DIV2_DELAYED6.OUT0_FAULT, TRUE, MAN_TRIP_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PAS_RODS_UP_GROUP_1_DIV1
    PAS_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE: INJECT_FAILURE(PAS_DIV1_DELAYED6.OUT0, PAS_DIV1_DELAYED6.OUT0_FAULT, TRUE, PAS_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV2
    PS_ALU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV2_DELAYED6.OUT0, PS_ALU_DIV2_DELAYED6.OUT0_FAULT, TRUE, PS_ALU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV4
    PS_ALU_DIV4_DELAYED6.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV4_DELAYED6.OUT0, PS_ALU_DIV4_DELAYED6.OUT0_FAULT, TRUE, PS_ALU_DIV4_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: SAS_ALU(
        SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE.OUT1, SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE.OUT1, SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_TRIP_DIV2_AFTER_FAILURE.OUT1, MAN_TRIP_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE.OUT1, PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := SAS_APU_RT_CRITERIA_DIV1_AFTER_FAILURE.FAILURE | SAS_APU_RT_CRITERIA_DIV2_AFTER_FAILURE.FAILURE | MAN_TRIP_DIV2_AFTER_FAILURE.FAILURE | PAS_RODS_UP_GROUP_1_DIV1_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE.FAILURE;
    RT_CRITERIA_1 := content.RT_CRITERIA_1;
    RT_CRITERIA_1_FAULT := content.RT_CRITERIA_1_FAULT;
    RT_CRITERIA_1_CONNECTED := content.RT_CRITERIA_1_CONNECTED;
    RT_CRITERIA_2 := content.RT_CRITERIA_2;
    RT_CRITERIA_2_FAULT := content.RT_CRITERIA_2_FAULT;
    RT_CRITERIA_2_CONNECTED := content.RT_CRITERIA_2_CONNECTED;
    MANUAL_TRIP := content.MANUAL_TRIP;
    MANUAL_TRIP_FAULT := content.MANUAL_TRIP_FAULT;
    MANUAL_TRIP_CONNECTED := content.MANUAL_TRIP_CONNECTED;
    CONTROL_RODS_UP := content.CONTROL_RODS_UP;
    CONTROL_RODS_UP_FAULT := content.CONTROL_RODS_UP_FAULT;
    CONTROL_RODS_UP_CONNECTED := content.CONTROL_RODS_UP_CONNECTED;
    ENABLE_SAS_1 := content.ENABLE_SAS_1;
    ENABLE_SAS_1_FAULT := content.ENABLE_SAS_1_FAULT;
    ENABLE_SAS_1_CONNECTED := content.ENABLE_SAS_1_CONNECTED;
    ENABLE_SAS_2 := content.ENABLE_SAS_2;
    ENABLE_SAS_2_FAULT := content.ENABLE_SAS_2_FAULT;
    ENABLE_SAS_2_CONNECTED := content.ENABLE_SAS_2_CONNECTED;
    RODS_DOWN := content.RODS_DOWN;
    RODS_UP := content.RODS_UP;
    RODS_DOWN_FAULT := content.RODS_DOWN_FAULT;
    RODS_UP_FAULT := content.RODS_UP_FAULT;

MODULE WRAPPER_PACS2_DIV1(
    PS_ALU_RODS_DOWN_DIV1, PS_ALU_RODS_DOWN_DIV1_FAULT, PS_ALU_RODS_DOWN_DIV1_CONNECTED, 
    SAS_ALU_RODS_DOWN_DIV1, SAS_ALU_RODS_DOWN_DIV1_FAULT, SAS_ALU_RODS_DOWN_DIV1_CONNECTED, 
    PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, PAS_RODS_DOWN_GROUP_1_DIV1_CONNECTED, 
    SAS_ALU_RODS_UP_DIV1, SAS_ALU_RODS_UP_DIV1_FAULT, SAS_ALU_RODS_UP_DIV1_CONNECTED, 
    MAN_OFF_DIV1, MAN_OFF_DIV1_FAULT, MAN_OFF_DIV1_CONNECTED, 
    MAN_ON_DIV1, MAN_ON_DIV1_FAULT, MAN_ON_DIV1_CONNECTED, 
    MAN_STOP_DIV1, MAN_STOP_DIV1_FAULT, MAN_STOP_DIV1_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_ALU from division 1
    PS_ALU_DIV1_DELAYED1: NONDET_DELAY_4(PS_ALU_RODS_DOWN_DIV1, PS_ALU_RODS_DOWN_DIV1_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED1.OUT0, PS_ALU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED2.OUT0, PS_ALU_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED3.OUT0, PS_ALU_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED4.OUT0, PS_ALU_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED5.OUT0, PS_ALU_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for SAS_ALU from division 1
    SAS_ALU_DIV1_DELAYED1: NONDET_DELAY_3(SAS_ALU_RODS_DOWN_DIV1, SAS_ALU_RODS_DOWN_DIV1_FAULT, TRUE, SAS_ALU_RODS_UP_DIV1, SAS_ALU_RODS_UP_DIV1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED2: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED1.OUT0, SAS_ALU_DIV1_DELAYED1.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED1.OUT1, SAS_ALU_DIV1_DELAYED1.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED3: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED2.OUT0, SAS_ALU_DIV1_DELAYED2.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED2.OUT1, SAS_ALU_DIV1_DELAYED2.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED4: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED3.OUT0, SAS_ALU_DIV1_DELAYED3.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED3.OUT1, SAS_ALU_DIV1_DELAYED3.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED5: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED4.OUT0, SAS_ALU_DIV1_DELAYED4.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED4.OUT1, SAS_ALU_DIV1_DELAYED4.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED6: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED5.OUT0, SAS_ALU_DIV1_DELAYED5.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED5.OUT1, SAS_ALU_DIV1_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PAS from division 1
    PAS_DIV1_DELAYED1: NONDET_DELAY_4(PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, TRUE);
    PAS_DIV1_DELAYED2: NONDET_DELAY_4(PAS_DIV1_DELAYED1.OUT0, PAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED3: NONDET_DELAY_4(PAS_DIV1_DELAYED2.OUT0, PAS_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED4: NONDET_DELAY_4(PAS_DIV1_DELAYED3.OUT0, PAS_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED5: NONDET_DELAY_4(PAS_DIV1_DELAYED4.OUT0, PAS_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED6: NONDET_DELAY_4(PAS_DIV1_DELAYED5.OUT0, PAS_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_OFF from division 1
    MAN_OFF_DIV1_DELAYED1: NONDET_DELAY_4(MAN_OFF_DIV1, MAN_OFF_DIV1_FAULT, TRUE);
    MAN_OFF_DIV1_DELAYED2: NONDET_DELAY_4(MAN_OFF_DIV1_DELAYED1.OUT0, MAN_OFF_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    MAN_OFF_DIV1_DELAYED3: NONDET_DELAY_4(MAN_OFF_DIV1_DELAYED2.OUT0, MAN_OFF_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    MAN_OFF_DIV1_DELAYED4: NONDET_DELAY_4(MAN_OFF_DIV1_DELAYED3.OUT0, MAN_OFF_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    MAN_OFF_DIV1_DELAYED5: NONDET_DELAY_4(MAN_OFF_DIV1_DELAYED4.OUT0, MAN_OFF_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    MAN_OFF_DIV1_DELAYED6: NONDET_DELAY_4(MAN_OFF_DIV1_DELAYED5.OUT0, MAN_OFF_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_ON from division 1
    MAN_ON_DIV1_DELAYED1: NONDET_DELAY_4(MAN_ON_DIV1, MAN_ON_DIV1_FAULT, TRUE);
    MAN_ON_DIV1_DELAYED2: NONDET_DELAY_4(MAN_ON_DIV1_DELAYED1.OUT0, MAN_ON_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    MAN_ON_DIV1_DELAYED3: NONDET_DELAY_4(MAN_ON_DIV1_DELAYED2.OUT0, MAN_ON_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    MAN_ON_DIV1_DELAYED4: NONDET_DELAY_4(MAN_ON_DIV1_DELAYED3.OUT0, MAN_ON_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    MAN_ON_DIV1_DELAYED5: NONDET_DELAY_4(MAN_ON_DIV1_DELAYED4.OUT0, MAN_ON_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    MAN_ON_DIV1_DELAYED6: NONDET_DELAY_4(MAN_ON_DIV1_DELAYED5.OUT0, MAN_ON_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_STOP from division 1
    MAN_STOP_DIV1_DELAYED1: NONDET_DELAY_4(MAN_STOP_DIV1, MAN_STOP_DIV1_FAULT, TRUE);
    MAN_STOP_DIV1_DELAYED2: NONDET_DELAY_4(MAN_STOP_DIV1_DELAYED1.OUT0, MAN_STOP_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    MAN_STOP_DIV1_DELAYED3: NONDET_DELAY_4(MAN_STOP_DIV1_DELAYED2.OUT0, MAN_STOP_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    MAN_STOP_DIV1_DELAYED4: NONDET_DELAY_4(MAN_STOP_DIV1_DELAYED3.OUT0, MAN_STOP_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    MAN_STOP_DIV1_DELAYED5: NONDET_DELAY_4(MAN_STOP_DIV1_DELAYED4.OUT0, MAN_STOP_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    MAN_STOP_DIV1_DELAYED6: NONDET_DELAY_4(MAN_STOP_DIV1_DELAYED5.OUT0, MAN_STOP_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for SAS_ALU_RODS_DOWN_DIV1
    SAS_ALU_DIV1_DELAYED6.OUT0_SUBS: boolean;
    SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV1_DELAYED6.OUT0, SAS_ALU_DIV1_DELAYED6.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PAS_RODS_DOWN_GROUP_1_DIV1
    PAS_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE: INJECT_FAILURE(PAS_DIV1_DELAYED6.OUT0, PAS_DIV1_DELAYED6.OUT0_FAULT, TRUE, PAS_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_ALU_RODS_UP_DIV1
    SAS_ALU_DIV1_DELAYED6.OUT1_SUBS: boolean;
    SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV1_DELAYED6.OUT1, SAS_ALU_DIV1_DELAYED6.OUT1_FAULT, TRUE, SAS_ALU_DIV1_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PACS2(
        PS_ALU_DIV1_DELAYED6.OUT0, PS_ALU_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE.OUT1, SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1, PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE.OUT1, SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_OFF_DIV1_DELAYED6.OUT0, MAN_OFF_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        MAN_ON_DIV1_DELAYED6.OUT0, MAN_ON_DIV1_DELAYED6.OUT0_FAULT, TRUE, 
        MAN_STOP_DIV1_DELAYED6.OUT0, MAN_STOP_DIV1_DELAYED6.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE.FAILURE | PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.FAILURE | SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE.FAILURE;
    SFOFF1 := content.SFOFF1;
    SFOFF1_FAULT := content.SFOFF1_FAULT;
    SFOFF1_CONNECTED := content.SFOFF1_CONNECTED;
    SFON1 := content.SFON1;
    SFON1_FAULT := content.SFON1_FAULT;
    SFON1_CONNECTED := content.SFON1_CONNECTED;
    SFOFF2 := content.SFOFF2;
    SFOFF2_FAULT := content.SFOFF2_FAULT;
    SFOFF2_CONNECTED := content.SFOFF2_CONNECTED;
    SFON2 := content.SFON2;
    SFON2_FAULT := content.SFON2_FAULT;
    SFON2_CONNECTED := content.SFON2_CONNECTED;
    AVOFF := content.AVOFF;
    AVOFF_FAULT := content.AVOFF_FAULT;
    AVOFF_CONNECTED := content.AVOFF_CONNECTED;
    AVON := content.AVON;
    AVON_FAULT := content.AVON_FAULT;
    AVON_CONNECTED := content.AVON_CONNECTED;
    MNOFF := content.MNOFF;
    MNOFF_FAULT := content.MNOFF_FAULT;
    MNOFF_CONNECTED := content.MNOFF_CONNECTED;
    MNON := content.MNON;
    MNON_FAULT := content.MNON_FAULT;
    MNON_CONNECTED := content.MNON_CONNECTED;
    STOP := content.STOP;
    STOP_FAULT := content.STOP_FAULT;
    STOP_CONNECTED := content.STOP_CONNECTED;
    CMDOFF := content.CMDOFF;
    CMDON := content.CMDON;
    CMDOFF_FAULT := content.CMDOFF_FAULT;
    CMDON_FAULT := content.CMDON_FAULT;

MODULE WRAPPER_PACS2_DIV2(
    PS_ALU_RODS_DOWN_DIV2, PS_ALU_RODS_DOWN_DIV2_FAULT, PS_ALU_RODS_DOWN_DIV2_CONNECTED, 
    SAS_ALU_RODS_DOWN_DIV2, SAS_ALU_RODS_DOWN_DIV2_FAULT, SAS_ALU_RODS_DOWN_DIV2_CONNECTED, 
    PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, PAS_RODS_DOWN_GROUP_1_DIV1_CONNECTED, 
    SAS_ALU_RODS_UP_DIV2, SAS_ALU_RODS_UP_DIV2_FAULT, SAS_ALU_RODS_UP_DIV2_CONNECTED, 
    MAN_OFF_DIV2, MAN_OFF_DIV2_FAULT, MAN_OFF_DIV2_CONNECTED, 
    MAN_ON_DIV2, MAN_ON_DIV2_FAULT, MAN_ON_DIV2_CONNECTED, 
    MAN_STOP_DIV2, MAN_STOP_DIV2_FAULT, MAN_STOP_DIV2_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_ALU from division 2
    PS_ALU_DIV2_DELAYED1: NONDET_DELAY_4(PS_ALU_RODS_DOWN_DIV2, PS_ALU_RODS_DOWN_DIV2_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED1.OUT0, PS_ALU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED2.OUT0, PS_ALU_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED3.OUT0, PS_ALU_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED4.OUT0, PS_ALU_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED5.OUT0, PS_ALU_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for SAS_ALU from division 2
    SAS_ALU_DIV2_DELAYED1: NONDET_DELAY_3(SAS_ALU_RODS_DOWN_DIV2, SAS_ALU_RODS_DOWN_DIV2_FAULT, TRUE, SAS_ALU_RODS_UP_DIV2, SAS_ALU_RODS_UP_DIV2_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED2: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED1.OUT0, SAS_ALU_DIV2_DELAYED1.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED1.OUT1, SAS_ALU_DIV2_DELAYED1.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED3: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED2.OUT0, SAS_ALU_DIV2_DELAYED2.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED2.OUT1, SAS_ALU_DIV2_DELAYED2.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED4: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED3.OUT0, SAS_ALU_DIV2_DELAYED3.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED3.OUT1, SAS_ALU_DIV2_DELAYED3.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED5: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED4.OUT0, SAS_ALU_DIV2_DELAYED4.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED4.OUT1, SAS_ALU_DIV2_DELAYED4.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED6: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED5.OUT0, SAS_ALU_DIV2_DELAYED5.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED5.OUT1, SAS_ALU_DIV2_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PAS from division 1
    PAS_DIV1_DELAYED1: NONDET_DELAY_4(PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, TRUE);
    PAS_DIV1_DELAYED2: NONDET_DELAY_4(PAS_DIV1_DELAYED1.OUT0, PAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED3: NONDET_DELAY_4(PAS_DIV1_DELAYED2.OUT0, PAS_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED4: NONDET_DELAY_4(PAS_DIV1_DELAYED3.OUT0, PAS_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED5: NONDET_DELAY_4(PAS_DIV1_DELAYED4.OUT0, PAS_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED6: NONDET_DELAY_4(PAS_DIV1_DELAYED5.OUT0, PAS_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_OFF from division 2
    MAN_OFF_DIV2_DELAYED1: NONDET_DELAY_4(MAN_OFF_DIV2, MAN_OFF_DIV2_FAULT, TRUE);
    MAN_OFF_DIV2_DELAYED2: NONDET_DELAY_4(MAN_OFF_DIV2_DELAYED1.OUT0, MAN_OFF_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    MAN_OFF_DIV2_DELAYED3: NONDET_DELAY_4(MAN_OFF_DIV2_DELAYED2.OUT0, MAN_OFF_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    MAN_OFF_DIV2_DELAYED4: NONDET_DELAY_4(MAN_OFF_DIV2_DELAYED3.OUT0, MAN_OFF_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    MAN_OFF_DIV2_DELAYED5: NONDET_DELAY_4(MAN_OFF_DIV2_DELAYED4.OUT0, MAN_OFF_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    MAN_OFF_DIV2_DELAYED6: NONDET_DELAY_4(MAN_OFF_DIV2_DELAYED5.OUT0, MAN_OFF_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_ON from division 2
    MAN_ON_DIV2_DELAYED1: NONDET_DELAY_4(MAN_ON_DIV2, MAN_ON_DIV2_FAULT, TRUE);
    MAN_ON_DIV2_DELAYED2: NONDET_DELAY_4(MAN_ON_DIV2_DELAYED1.OUT0, MAN_ON_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    MAN_ON_DIV2_DELAYED3: NONDET_DELAY_4(MAN_ON_DIV2_DELAYED2.OUT0, MAN_ON_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    MAN_ON_DIV2_DELAYED4: NONDET_DELAY_4(MAN_ON_DIV2_DELAYED3.OUT0, MAN_ON_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    MAN_ON_DIV2_DELAYED5: NONDET_DELAY_4(MAN_ON_DIV2_DELAYED4.OUT0, MAN_ON_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    MAN_ON_DIV2_DELAYED6: NONDET_DELAY_4(MAN_ON_DIV2_DELAYED5.OUT0, MAN_ON_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_STOP from division 2
    MAN_STOP_DIV2_DELAYED1: NONDET_DELAY_4(MAN_STOP_DIV2, MAN_STOP_DIV2_FAULT, TRUE);
    MAN_STOP_DIV2_DELAYED2: NONDET_DELAY_4(MAN_STOP_DIV2_DELAYED1.OUT0, MAN_STOP_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    MAN_STOP_DIV2_DELAYED3: NONDET_DELAY_4(MAN_STOP_DIV2_DELAYED2.OUT0, MAN_STOP_DIV2_DELAYED2.OUT0_FAULT, TRUE);
    MAN_STOP_DIV2_DELAYED4: NONDET_DELAY_4(MAN_STOP_DIV2_DELAYED3.OUT0, MAN_STOP_DIV2_DELAYED3.OUT0_FAULT, TRUE);
    MAN_STOP_DIV2_DELAYED5: NONDET_DELAY_4(MAN_STOP_DIV2_DELAYED4.OUT0, MAN_STOP_DIV2_DELAYED4.OUT0_FAULT, TRUE);
    MAN_STOP_DIV2_DELAYED6: NONDET_DELAY_4(MAN_STOP_DIV2_DELAYED5.OUT0, MAN_STOP_DIV2_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for PS_ALU_RODS_DOWN_DIV2
    PS_ALU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    PS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV2_DELAYED6.OUT0, PS_ALU_DIV2_DELAYED6.OUT0_FAULT, TRUE, PS_ALU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_ALU_RODS_DOWN_DIV2
    SAS_ALU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV2_DELAYED6.OUT0, SAS_ALU_DIV2_DELAYED6.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PAS_RODS_DOWN_GROUP_1_DIV1
    PAS_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE: INJECT_FAILURE(PAS_DIV1_DELAYED6.OUT0, PAS_DIV1_DELAYED6.OUT0_FAULT, TRUE, PAS_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_ALU_RODS_UP_DIV2
    SAS_ALU_DIV2_DELAYED6.OUT1_SUBS: boolean;
    SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV2_DELAYED6.OUT1, SAS_ALU_DIV2_DELAYED6.OUT1_FAULT, TRUE, SAS_ALU_DIV2_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for MAN_OFF_DIV2
    MAN_OFF_DIV2_DELAYED6.OUT0_SUBS: boolean;
    MAN_OFF_DIV2_AFTER_FAILURE: INJECT_FAILURE(MAN_OFF_DIV2_DELAYED6.OUT0, MAN_OFF_DIV2_DELAYED6.OUT0_FAULT, TRUE, MAN_OFF_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for MAN_ON_DIV2
    MAN_ON_DIV2_DELAYED6.OUT0_SUBS: boolean;
    MAN_ON_DIV2_AFTER_FAILURE: INJECT_FAILURE(MAN_ON_DIV2_DELAYED6.OUT0, MAN_ON_DIV2_DELAYED6.OUT0_FAULT, TRUE, MAN_ON_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for MAN_STOP_DIV2
    MAN_STOP_DIV2_DELAYED6.OUT0_SUBS: boolean;
    MAN_STOP_DIV2_AFTER_FAILURE: INJECT_FAILURE(MAN_STOP_DIV2_DELAYED6.OUT0, MAN_STOP_DIV2_DELAYED6.OUT0_FAULT, TRUE, MAN_STOP_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PACS2(
        PS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.OUT1, PS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.OUT1, SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1, PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE.OUT1, SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_OFF_DIV2_AFTER_FAILURE.OUT1, MAN_OFF_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_ON_DIV2_AFTER_FAILURE.OUT1, MAN_ON_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_STOP_DIV2_AFTER_FAILURE.OUT1, MAN_STOP_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := PS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.FAILURE | SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.FAILURE | PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.FAILURE | SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE.FAILURE | MAN_OFF_DIV2_AFTER_FAILURE.FAILURE | MAN_ON_DIV2_AFTER_FAILURE.FAILURE | MAN_STOP_DIV2_AFTER_FAILURE.FAILURE;
    SFOFF1 := content.SFOFF1;
    SFOFF1_FAULT := content.SFOFF1_FAULT;
    SFOFF1_CONNECTED := content.SFOFF1_CONNECTED;
    SFON1 := content.SFON1;
    SFON1_FAULT := content.SFON1_FAULT;
    SFON1_CONNECTED := content.SFON1_CONNECTED;
    SFOFF2 := content.SFOFF2;
    SFOFF2_FAULT := content.SFOFF2_FAULT;
    SFOFF2_CONNECTED := content.SFOFF2_CONNECTED;
    SFON2 := content.SFON2;
    SFON2_FAULT := content.SFON2_FAULT;
    SFON2_CONNECTED := content.SFON2_CONNECTED;
    AVOFF := content.AVOFF;
    AVOFF_FAULT := content.AVOFF_FAULT;
    AVOFF_CONNECTED := content.AVOFF_CONNECTED;
    AVON := content.AVON;
    AVON_FAULT := content.AVON_FAULT;
    AVON_CONNECTED := content.AVON_CONNECTED;
    MNOFF := content.MNOFF;
    MNOFF_FAULT := content.MNOFF_FAULT;
    MNOFF_CONNECTED := content.MNOFF_CONNECTED;
    MNON := content.MNON;
    MNON_FAULT := content.MNON_FAULT;
    MNON_CONNECTED := content.MNON_CONNECTED;
    STOP := content.STOP;
    STOP_FAULT := content.STOP_FAULT;
    STOP_CONNECTED := content.STOP_CONNECTED;
    CMDOFF := content.CMDOFF;
    CMDON := content.CMDON;
    CMDOFF_FAULT := content.CMDOFF_FAULT;
    CMDON_FAULT := content.CMDON_FAULT;

MODULE WRAPPER_PACS2_DIV3(
    PS_ALU_RODS_DOWN_DIV3, PS_ALU_RODS_DOWN_DIV3_FAULT, PS_ALU_RODS_DOWN_DIV3_CONNECTED, 
    SAS_ALU_RODS_DOWN_DIV1, SAS_ALU_RODS_DOWN_DIV1_FAULT, SAS_ALU_RODS_DOWN_DIV1_CONNECTED, 
    PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, PAS_RODS_DOWN_GROUP_1_DIV1_CONNECTED, 
    SAS_ALU_RODS_UP_DIV1, SAS_ALU_RODS_UP_DIV1_FAULT, SAS_ALU_RODS_UP_DIV1_CONNECTED, 
    MAN_OFF_DIV3, MAN_OFF_DIV3_FAULT, MAN_OFF_DIV3_CONNECTED, 
    MAN_ON_DIV3, MAN_ON_DIV3_FAULT, MAN_ON_DIV3_CONNECTED, 
    MAN_STOP_DIV3, MAN_STOP_DIV3_FAULT, MAN_STOP_DIV3_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_ALU from division 3
    PS_ALU_DIV3_DELAYED1: NONDET_DELAY_4(PS_ALU_RODS_DOWN_DIV3, PS_ALU_RODS_DOWN_DIV3_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED1.OUT0, PS_ALU_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED2.OUT0, PS_ALU_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED3.OUT0, PS_ALU_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED4.OUT0, PS_ALU_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED5.OUT0, PS_ALU_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for SAS_ALU from division 1
    SAS_ALU_DIV1_DELAYED1: NONDET_DELAY_3(SAS_ALU_RODS_DOWN_DIV1, SAS_ALU_RODS_DOWN_DIV1_FAULT, TRUE, SAS_ALU_RODS_UP_DIV1, SAS_ALU_RODS_UP_DIV1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED2: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED1.OUT0, SAS_ALU_DIV1_DELAYED1.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED1.OUT1, SAS_ALU_DIV1_DELAYED1.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED3: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED2.OUT0, SAS_ALU_DIV1_DELAYED2.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED2.OUT1, SAS_ALU_DIV1_DELAYED2.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED4: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED3.OUT0, SAS_ALU_DIV1_DELAYED3.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED3.OUT1, SAS_ALU_DIV1_DELAYED3.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED5: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED4.OUT0, SAS_ALU_DIV1_DELAYED4.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED4.OUT1, SAS_ALU_DIV1_DELAYED4.OUT1_FAULT, TRUE);
    SAS_ALU_DIV1_DELAYED6: NONDET_DELAY_3(SAS_ALU_DIV1_DELAYED5.OUT0, SAS_ALU_DIV1_DELAYED5.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED5.OUT1, SAS_ALU_DIV1_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PAS from division 1
    PAS_DIV1_DELAYED1: NONDET_DELAY_4(PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, TRUE);
    PAS_DIV1_DELAYED2: NONDET_DELAY_4(PAS_DIV1_DELAYED1.OUT0, PAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED3: NONDET_DELAY_4(PAS_DIV1_DELAYED2.OUT0, PAS_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED4: NONDET_DELAY_4(PAS_DIV1_DELAYED3.OUT0, PAS_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED5: NONDET_DELAY_4(PAS_DIV1_DELAYED4.OUT0, PAS_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED6: NONDET_DELAY_4(PAS_DIV1_DELAYED5.OUT0, PAS_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_OFF from division 3
    MAN_OFF_DIV3_DELAYED1: NONDET_DELAY_4(MAN_OFF_DIV3, MAN_OFF_DIV3_FAULT, TRUE);
    MAN_OFF_DIV3_DELAYED2: NONDET_DELAY_4(MAN_OFF_DIV3_DELAYED1.OUT0, MAN_OFF_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    MAN_OFF_DIV3_DELAYED3: NONDET_DELAY_4(MAN_OFF_DIV3_DELAYED2.OUT0, MAN_OFF_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    MAN_OFF_DIV3_DELAYED4: NONDET_DELAY_4(MAN_OFF_DIV3_DELAYED3.OUT0, MAN_OFF_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    MAN_OFF_DIV3_DELAYED5: NONDET_DELAY_4(MAN_OFF_DIV3_DELAYED4.OUT0, MAN_OFF_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    MAN_OFF_DIV3_DELAYED6: NONDET_DELAY_4(MAN_OFF_DIV3_DELAYED5.OUT0, MAN_OFF_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_ON from division 3
    MAN_ON_DIV3_DELAYED1: NONDET_DELAY_4(MAN_ON_DIV3, MAN_ON_DIV3_FAULT, TRUE);
    MAN_ON_DIV3_DELAYED2: NONDET_DELAY_4(MAN_ON_DIV3_DELAYED1.OUT0, MAN_ON_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    MAN_ON_DIV3_DELAYED3: NONDET_DELAY_4(MAN_ON_DIV3_DELAYED2.OUT0, MAN_ON_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    MAN_ON_DIV3_DELAYED4: NONDET_DELAY_4(MAN_ON_DIV3_DELAYED3.OUT0, MAN_ON_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    MAN_ON_DIV3_DELAYED5: NONDET_DELAY_4(MAN_ON_DIV3_DELAYED4.OUT0, MAN_ON_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    MAN_ON_DIV3_DELAYED6: NONDET_DELAY_4(MAN_ON_DIV3_DELAYED5.OUT0, MAN_ON_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_STOP from division 3
    MAN_STOP_DIV3_DELAYED1: NONDET_DELAY_4(MAN_STOP_DIV3, MAN_STOP_DIV3_FAULT, TRUE);
    MAN_STOP_DIV3_DELAYED2: NONDET_DELAY_4(MAN_STOP_DIV3_DELAYED1.OUT0, MAN_STOP_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    MAN_STOP_DIV3_DELAYED3: NONDET_DELAY_4(MAN_STOP_DIV3_DELAYED2.OUT0, MAN_STOP_DIV3_DELAYED2.OUT0_FAULT, TRUE);
    MAN_STOP_DIV3_DELAYED4: NONDET_DELAY_4(MAN_STOP_DIV3_DELAYED3.OUT0, MAN_STOP_DIV3_DELAYED3.OUT0_FAULT, TRUE);
    MAN_STOP_DIV3_DELAYED5: NONDET_DELAY_4(MAN_STOP_DIV3_DELAYED4.OUT0, MAN_STOP_DIV3_DELAYED4.OUT0_FAULT, TRUE);
    MAN_STOP_DIV3_DELAYED6: NONDET_DELAY_4(MAN_STOP_DIV3_DELAYED5.OUT0, MAN_STOP_DIV3_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for SAS_ALU_RODS_DOWN_DIV1
    SAS_ALU_DIV1_DELAYED6.OUT0_SUBS: boolean;
    SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV1_DELAYED6.OUT0, SAS_ALU_DIV1_DELAYED6.OUT0_FAULT, TRUE, SAS_ALU_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PAS_RODS_DOWN_GROUP_1_DIV1
    PAS_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE: INJECT_FAILURE(PAS_DIV1_DELAYED6.OUT0, PAS_DIV1_DELAYED6.OUT0_FAULT, TRUE, PAS_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_ALU_RODS_UP_DIV1
    SAS_ALU_DIV1_DELAYED6.OUT1_SUBS: boolean;
    SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV1_DELAYED6.OUT1, SAS_ALU_DIV1_DELAYED6.OUT1_FAULT, TRUE, SAS_ALU_DIV1_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PACS2(
        PS_ALU_DIV3_DELAYED6.OUT0, PS_ALU_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE.OUT1, SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1, PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE.OUT1, SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_OFF_DIV3_DELAYED6.OUT0, MAN_OFF_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        MAN_ON_DIV3_DELAYED6.OUT0, MAN_ON_DIV3_DELAYED6.OUT0_FAULT, TRUE, 
        MAN_STOP_DIV3_DELAYED6.OUT0, MAN_STOP_DIV3_DELAYED6.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := SAS_ALU_RODS_DOWN_DIV1_AFTER_FAILURE.FAILURE | PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.FAILURE | SAS_ALU_RODS_UP_DIV1_AFTER_FAILURE.FAILURE;
    SFOFF1 := content.SFOFF1;
    SFOFF1_FAULT := content.SFOFF1_FAULT;
    SFOFF1_CONNECTED := content.SFOFF1_CONNECTED;
    SFON1 := content.SFON1;
    SFON1_FAULT := content.SFON1_FAULT;
    SFON1_CONNECTED := content.SFON1_CONNECTED;
    SFOFF2 := content.SFOFF2;
    SFOFF2_FAULT := content.SFOFF2_FAULT;
    SFOFF2_CONNECTED := content.SFOFF2_CONNECTED;
    SFON2 := content.SFON2;
    SFON2_FAULT := content.SFON2_FAULT;
    SFON2_CONNECTED := content.SFON2_CONNECTED;
    AVOFF := content.AVOFF;
    AVOFF_FAULT := content.AVOFF_FAULT;
    AVOFF_CONNECTED := content.AVOFF_CONNECTED;
    AVON := content.AVON;
    AVON_FAULT := content.AVON_FAULT;
    AVON_CONNECTED := content.AVON_CONNECTED;
    MNOFF := content.MNOFF;
    MNOFF_FAULT := content.MNOFF_FAULT;
    MNOFF_CONNECTED := content.MNOFF_CONNECTED;
    MNON := content.MNON;
    MNON_FAULT := content.MNON_FAULT;
    MNON_CONNECTED := content.MNON_CONNECTED;
    STOP := content.STOP;
    STOP_FAULT := content.STOP_FAULT;
    STOP_CONNECTED := content.STOP_CONNECTED;
    CMDOFF := content.CMDOFF;
    CMDON := content.CMDON;
    CMDOFF_FAULT := content.CMDOFF_FAULT;
    CMDON_FAULT := content.CMDON_FAULT;

MODULE WRAPPER_PACS2_DIV4(
    PS_ALU_RODS_DOWN_DIV4, PS_ALU_RODS_DOWN_DIV4_FAULT, PS_ALU_RODS_DOWN_DIV4_CONNECTED, 
    SAS_ALU_RODS_DOWN_DIV2, SAS_ALU_RODS_DOWN_DIV2_FAULT, SAS_ALU_RODS_DOWN_DIV2_CONNECTED, 
    PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, PAS_RODS_DOWN_GROUP_1_DIV1_CONNECTED, 
    SAS_ALU_RODS_UP_DIV2, SAS_ALU_RODS_UP_DIV2_FAULT, SAS_ALU_RODS_UP_DIV2_CONNECTED, 
    MAN_OFF_DIV4, MAN_OFF_DIV4_FAULT, MAN_OFF_DIV4_CONNECTED, 
    MAN_ON_DIV4, MAN_ON_DIV4_FAULT, MAN_ON_DIV4_CONNECTED, 
    MAN_STOP_DIV4, MAN_STOP_DIV4_FAULT, MAN_STOP_DIV4_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_ALU from division 4
    PS_ALU_DIV4_DELAYED1: NONDET_DELAY_4(PS_ALU_RODS_DOWN_DIV4, PS_ALU_RODS_DOWN_DIV4_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED1.OUT0, PS_ALU_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED3: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED2.OUT0, PS_ALU_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED4: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED3.OUT0, PS_ALU_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED5: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED4.OUT0, PS_ALU_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED6: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED5.OUT0, PS_ALU_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for SAS_ALU from division 2
    SAS_ALU_DIV2_DELAYED1: NONDET_DELAY_3(SAS_ALU_RODS_DOWN_DIV2, SAS_ALU_RODS_DOWN_DIV2_FAULT, TRUE, SAS_ALU_RODS_UP_DIV2, SAS_ALU_RODS_UP_DIV2_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED2: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED1.OUT0, SAS_ALU_DIV2_DELAYED1.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED1.OUT1, SAS_ALU_DIV2_DELAYED1.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED3: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED2.OUT0, SAS_ALU_DIV2_DELAYED2.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED2.OUT1, SAS_ALU_DIV2_DELAYED2.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED4: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED3.OUT0, SAS_ALU_DIV2_DELAYED3.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED3.OUT1, SAS_ALU_DIV2_DELAYED3.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED5: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED4.OUT0, SAS_ALU_DIV2_DELAYED4.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED4.OUT1, SAS_ALU_DIV2_DELAYED4.OUT1_FAULT, TRUE);
    SAS_ALU_DIV2_DELAYED6: NONDET_DELAY_3(SAS_ALU_DIV2_DELAYED5.OUT0, SAS_ALU_DIV2_DELAYED5.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED5.OUT1, SAS_ALU_DIV2_DELAYED5.OUT1_FAULT, TRUE);
    -- delay modules for PAS from division 1
    PAS_DIV1_DELAYED1: NONDET_DELAY_4(PAS_RODS_DOWN_GROUP_1_DIV1, PAS_RODS_DOWN_GROUP_1_DIV1_FAULT, TRUE);
    PAS_DIV1_DELAYED2: NONDET_DELAY_4(PAS_DIV1_DELAYED1.OUT0, PAS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED3: NONDET_DELAY_4(PAS_DIV1_DELAYED2.OUT0, PAS_DIV1_DELAYED2.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED4: NONDET_DELAY_4(PAS_DIV1_DELAYED3.OUT0, PAS_DIV1_DELAYED3.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED5: NONDET_DELAY_4(PAS_DIV1_DELAYED4.OUT0, PAS_DIV1_DELAYED4.OUT0_FAULT, TRUE);
    PAS_DIV1_DELAYED6: NONDET_DELAY_4(PAS_DIV1_DELAYED5.OUT0, PAS_DIV1_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_OFF from division 4
    MAN_OFF_DIV4_DELAYED1: NONDET_DELAY_4(MAN_OFF_DIV4, MAN_OFF_DIV4_FAULT, TRUE);
    MAN_OFF_DIV4_DELAYED2: NONDET_DELAY_4(MAN_OFF_DIV4_DELAYED1.OUT0, MAN_OFF_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    MAN_OFF_DIV4_DELAYED3: NONDET_DELAY_4(MAN_OFF_DIV4_DELAYED2.OUT0, MAN_OFF_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    MAN_OFF_DIV4_DELAYED4: NONDET_DELAY_4(MAN_OFF_DIV4_DELAYED3.OUT0, MAN_OFF_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    MAN_OFF_DIV4_DELAYED5: NONDET_DELAY_4(MAN_OFF_DIV4_DELAYED4.OUT0, MAN_OFF_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    MAN_OFF_DIV4_DELAYED6: NONDET_DELAY_4(MAN_OFF_DIV4_DELAYED5.OUT0, MAN_OFF_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_ON from division 4
    MAN_ON_DIV4_DELAYED1: NONDET_DELAY_4(MAN_ON_DIV4, MAN_ON_DIV4_FAULT, TRUE);
    MAN_ON_DIV4_DELAYED2: NONDET_DELAY_4(MAN_ON_DIV4_DELAYED1.OUT0, MAN_ON_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    MAN_ON_DIV4_DELAYED3: NONDET_DELAY_4(MAN_ON_DIV4_DELAYED2.OUT0, MAN_ON_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    MAN_ON_DIV4_DELAYED4: NONDET_DELAY_4(MAN_ON_DIV4_DELAYED3.OUT0, MAN_ON_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    MAN_ON_DIV4_DELAYED5: NONDET_DELAY_4(MAN_ON_DIV4_DELAYED4.OUT0, MAN_ON_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    MAN_ON_DIV4_DELAYED6: NONDET_DELAY_4(MAN_ON_DIV4_DELAYED5.OUT0, MAN_ON_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- delay modules for MAN_STOP from division 4
    MAN_STOP_DIV4_DELAYED1: NONDET_DELAY_4(MAN_STOP_DIV4, MAN_STOP_DIV4_FAULT, TRUE);
    MAN_STOP_DIV4_DELAYED2: NONDET_DELAY_4(MAN_STOP_DIV4_DELAYED1.OUT0, MAN_STOP_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    MAN_STOP_DIV4_DELAYED3: NONDET_DELAY_4(MAN_STOP_DIV4_DELAYED2.OUT0, MAN_STOP_DIV4_DELAYED2.OUT0_FAULT, TRUE);
    MAN_STOP_DIV4_DELAYED4: NONDET_DELAY_4(MAN_STOP_DIV4_DELAYED3.OUT0, MAN_STOP_DIV4_DELAYED3.OUT0_FAULT, TRUE);
    MAN_STOP_DIV4_DELAYED5: NONDET_DELAY_4(MAN_STOP_DIV4_DELAYED4.OUT0, MAN_STOP_DIV4_DELAYED4.OUT0_FAULT, TRUE);
    MAN_STOP_DIV4_DELAYED6: NONDET_DELAY_4(MAN_STOP_DIV4_DELAYED5.OUT0, MAN_STOP_DIV4_DELAYED5.OUT0_FAULT, TRUE);
    -- fault injection modules for SAS_ALU_RODS_DOWN_DIV2
    SAS_ALU_DIV2_DELAYED6.OUT0_SUBS: boolean;
    SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV2_DELAYED6.OUT0, SAS_ALU_DIV2_DELAYED6.OUT0_FAULT, TRUE, SAS_ALU_DIV2_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PAS_RODS_DOWN_GROUP_1_DIV1
    PAS_DIV1_DELAYED6.OUT0_SUBS: boolean;
    PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE: INJECT_FAILURE(PAS_DIV1_DELAYED6.OUT0, PAS_DIV1_DELAYED6.OUT0_FAULT, TRUE, PAS_DIV1_DELAYED6.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for SAS_ALU_RODS_UP_DIV2
    SAS_ALU_DIV2_DELAYED6.OUT1_SUBS: boolean;
    SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE: INJECT_FAILURE(SAS_ALU_DIV2_DELAYED6.OUT1, SAS_ALU_DIV2_DELAYED6.OUT1_FAULT, TRUE, SAS_ALU_DIV2_DELAYED6.OUT1_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PACS2(
        PS_ALU_DIV4_DELAYED6.OUT0, PS_ALU_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.OUT1, SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        FALSE, FALSE, FALSE, 
        PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1, PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE.OUT1, SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        MAN_OFF_DIV4_DELAYED6.OUT0, MAN_OFF_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        MAN_ON_DIV4_DELAYED6.OUT0, MAN_ON_DIV4_DELAYED6.OUT0_FAULT, TRUE, 
        MAN_STOP_DIV4_DELAYED6.OUT0, MAN_STOP_DIV4_DELAYED6.OUT0_FAULT, TRUE);
DEFINE
    FAILURE := SAS_ALU_RODS_DOWN_DIV2_AFTER_FAILURE.FAILURE | PAS_RODS_DOWN_GROUP_1_DIV1_AFTER_FAILURE.FAILURE | SAS_ALU_RODS_UP_DIV2_AFTER_FAILURE.FAILURE;
    SFOFF1 := content.SFOFF1;
    SFOFF1_FAULT := content.SFOFF1_FAULT;
    SFOFF1_CONNECTED := content.SFOFF1_CONNECTED;
    SFON1 := content.SFON1;
    SFON1_FAULT := content.SFON1_FAULT;
    SFON1_CONNECTED := content.SFON1_CONNECTED;
    SFOFF2 := content.SFOFF2;
    SFOFF2_FAULT := content.SFOFF2_FAULT;
    SFOFF2_CONNECTED := content.SFOFF2_CONNECTED;
    SFON2 := content.SFON2;
    SFON2_FAULT := content.SFON2_FAULT;
    SFON2_CONNECTED := content.SFON2_CONNECTED;
    AVOFF := content.AVOFF;
    AVOFF_FAULT := content.AVOFF_FAULT;
    AVOFF_CONNECTED := content.AVOFF_CONNECTED;
    AVON := content.AVON;
    AVON_FAULT := content.AVON_FAULT;
    AVON_CONNECTED := content.AVON_CONNECTED;
    MNOFF := content.MNOFF;
    MNOFF_FAULT := content.MNOFF_FAULT;
    MNOFF_CONNECTED := content.MNOFF_CONNECTED;
    MNON := content.MNON;
    MNON_FAULT := content.MNON_FAULT;
    MNON_CONNECTED := content.MNON_CONNECTED;
    STOP := content.STOP;
    STOP_FAULT := content.STOP_FAULT;
    STOP_CONNECTED := content.STOP_CONNECTED;
    CMDOFF := content.CMDOFF;
    CMDON := content.CMDON;
    CMDOFF_FAULT := content.CMDOFF_FAULT;
    CMDON_FAULT := content.CMDON_FAULT;

MODULE WRAPPER_PAS_DIV1(
    PS_ALU_ENABLE_SAS_DIV1, PS_ALU_ENABLE_SAS_DIV1_FAULT, PS_ALU_ENABLE_SAS_DIV1_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV2, PS_ALU_ENABLE_SAS_DIV2_FAULT, PS_ALU_ENABLE_SAS_DIV2_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV3, PS_ALU_ENABLE_SAS_DIV3_FAULT, PS_ALU_ENABLE_SAS_DIV3_CONNECTED, 
    PS_ALU_ENABLE_SAS_DIV4, PS_ALU_ENABLE_SAS_DIV4_FAULT, PS_ALU_ENABLE_SAS_DIV4_CONNECTED, 
    N_FLUX_NS_DIV1, N_FLUX_NS_DIV1_FAULT, N_FLUX_NS_DIV1_CONNECTED, 
    RCP1_IN_OP_DIV1, RCP1_IN_OP_DIV1_FAULT, RCP1_IN_OP_DIV1_CONNECTED, 
    RCP2_IN_OP_DIV1, RCP2_IN_OP_DIV1_FAULT, RCP2_IN_OP_DIV1_CONNECTED, 
    RCP3_IN_OP_DIV1, RCP3_IN_OP_DIV1_FAULT, RCP3_IN_OP_DIV1_CONNECTED, 
    RCP4_IN_OP_DIV1, RCP4_IN_OP_DIV1_FAULT, RCP4_IN_OP_DIV1_CONNECTED, FAILURE_VANISHED)
VAR
    -- delay modules for PS_ALU from division 1
    PS_ALU_DIV1_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV1, PS_ALU_ENABLE_SAS_DIV1_FAULT, TRUE);
    PS_ALU_DIV1_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV1_DELAYED1.OUT0, PS_ALU_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 2
    PS_ALU_DIV2_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV2, PS_ALU_ENABLE_SAS_DIV2_FAULT, TRUE);
    PS_ALU_DIV2_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV2_DELAYED1.OUT0, PS_ALU_DIV2_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 3
    PS_ALU_DIV3_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV3, PS_ALU_ENABLE_SAS_DIV3_FAULT, TRUE);
    PS_ALU_DIV3_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV3_DELAYED1.OUT0, PS_ALU_DIV3_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for PS_ALU from division 4
    PS_ALU_DIV4_DELAYED1: NONDET_DELAY_4(PS_ALU_ENABLE_SAS_DIV4, PS_ALU_ENABLE_SAS_DIV4_FAULT, TRUE);
    PS_ALU_DIV4_DELAYED2: NONDET_DELAY_4(PS_ALU_DIV4_DELAYED1.OUT0, PS_ALU_DIV4_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for N_FLUX_NS from division 1
    N_FLUX_NS_DIV1_DELAYED1: NONDET_DELAY_5(N_FLUX_NS_DIV1, N_FLUX_NS_DIV1_FAULT, TRUE);
    N_FLUX_NS_DIV1_DELAYED2: NONDET_DELAY_5(N_FLUX_NS_DIV1_DELAYED1.OUT0, N_FLUX_NS_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for RCP1_IN_OP from division 1
    RCP1_IN_OP_DIV1_DELAYED1: NONDET_DELAY_4(RCP1_IN_OP_DIV1, RCP1_IN_OP_DIV1_FAULT, TRUE);
    RCP1_IN_OP_DIV1_DELAYED2: NONDET_DELAY_4(RCP1_IN_OP_DIV1_DELAYED1.OUT0, RCP1_IN_OP_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for RCP2_IN_OP from division 1
    RCP2_IN_OP_DIV1_DELAYED1: NONDET_DELAY_4(RCP2_IN_OP_DIV1, RCP2_IN_OP_DIV1_FAULT, TRUE);
    RCP2_IN_OP_DIV1_DELAYED2: NONDET_DELAY_4(RCP2_IN_OP_DIV1_DELAYED1.OUT0, RCP2_IN_OP_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for RCP3_IN_OP from division 1
    RCP3_IN_OP_DIV1_DELAYED1: NONDET_DELAY_4(RCP3_IN_OP_DIV1, RCP3_IN_OP_DIV1_FAULT, TRUE);
    RCP3_IN_OP_DIV1_DELAYED2: NONDET_DELAY_4(RCP3_IN_OP_DIV1_DELAYED1.OUT0, RCP3_IN_OP_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- delay modules for RCP4_IN_OP from division 1
    RCP4_IN_OP_DIV1_DELAYED1: NONDET_DELAY_4(RCP4_IN_OP_DIV1, RCP4_IN_OP_DIV1_FAULT, TRUE);
    RCP4_IN_OP_DIV1_DELAYED2: NONDET_DELAY_4(RCP4_IN_OP_DIV1_DELAYED1.OUT0, RCP4_IN_OP_DIV1_DELAYED1.OUT0_FAULT, TRUE);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV1
    PS_ALU_DIV1_DELAYED2.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV1_DELAYED2.OUT0, PS_ALU_DIV1_DELAYED2.OUT0_FAULT, TRUE, PS_ALU_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV2
    PS_ALU_DIV2_DELAYED2.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV2_DELAYED2.OUT0, PS_ALU_DIV2_DELAYED2.OUT0_FAULT, TRUE, PS_ALU_DIV2_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV3
    PS_ALU_DIV3_DELAYED2.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV3_DELAYED2.OUT0, PS_ALU_DIV3_DELAYED2.OUT0_FAULT, TRUE, PS_ALU_DIV3_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for PS_ALU_ENABLE_SAS_DIV4
    PS_ALU_DIV4_DELAYED2.OUT0_SUBS: boolean;
    PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE: INJECT_FAILURE(PS_ALU_DIV4_DELAYED2.OUT0, PS_ALU_DIV4_DELAYED2.OUT0_FAULT, TRUE, PS_ALU_DIV4_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for N_FLUX_NS_DIV1
    N_FLUX_NS_DIV1_DELAYED2.OUT0_SUBS: {0,20,80,100,120};
    N_FLUX_NS_DIV1_AFTER_FAILURE: INJECT_FAILURE(N_FLUX_NS_DIV1_DELAYED2.OUT0, N_FLUX_NS_DIV1_DELAYED2.OUT0_FAULT, TRUE, N_FLUX_NS_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for RCP1_IN_OP_DIV1
    RCP1_IN_OP_DIV1_DELAYED2.OUT0_SUBS: boolean;
    RCP1_IN_OP_DIV1_AFTER_FAILURE: INJECT_FAILURE(RCP1_IN_OP_DIV1_DELAYED2.OUT0, RCP1_IN_OP_DIV1_DELAYED2.OUT0_FAULT, TRUE, RCP1_IN_OP_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for RCP2_IN_OP_DIV1
    RCP2_IN_OP_DIV1_DELAYED2.OUT0_SUBS: boolean;
    RCP2_IN_OP_DIV1_AFTER_FAILURE: INJECT_FAILURE(RCP2_IN_OP_DIV1_DELAYED2.OUT0, RCP2_IN_OP_DIV1_DELAYED2.OUT0_FAULT, TRUE, RCP2_IN_OP_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for RCP3_IN_OP_DIV1
    RCP3_IN_OP_DIV1_DELAYED2.OUT0_SUBS: boolean;
    RCP3_IN_OP_DIV1_AFTER_FAILURE: INJECT_FAILURE(RCP3_IN_OP_DIV1_DELAYED2.OUT0, RCP3_IN_OP_DIV1_DELAYED2.OUT0_FAULT, TRUE, RCP3_IN_OP_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- fault injection modules for RCP4_IN_OP_DIV1
    RCP4_IN_OP_DIV1_DELAYED2.OUT0_SUBS: boolean;
    RCP4_IN_OP_DIV1_AFTER_FAILURE: INJECT_FAILURE(RCP4_IN_OP_DIV1_DELAYED2.OUT0, RCP4_IN_OP_DIV1_DELAYED2.OUT0_FAULT, TRUE, RCP4_IN_OP_DIV1_DELAYED2.OUT0_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    -- unit
    content: PAS(
        PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE.OUT1, PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        N_FLUX_NS_DIV1_AFTER_FAILURE.OUT1, N_FLUX_NS_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        RCP1_IN_OP_DIV1_AFTER_FAILURE.OUT1, RCP1_IN_OP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        RCP2_IN_OP_DIV1_AFTER_FAILURE.OUT1, RCP2_IN_OP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        RCP3_IN_OP_DIV1_AFTER_FAILURE.OUT1, RCP3_IN_OP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE, 
        RCP4_IN_OP_DIV1_AFTER_FAILURE.OUT1, RCP4_IN_OP_DIV1_AFTER_FAILURE.OUT1_FAULT, TRUE);
DEFINE
    FAILURE := PS_ALU_ENABLE_SAS_DIV1_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV2_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV3_AFTER_FAILURE.FAILURE | PS_ALU_ENABLE_SAS_DIV4_AFTER_FAILURE.FAILURE | N_FLUX_NS_DIV1_AFTER_FAILURE.FAILURE | RCP1_IN_OP_DIV1_AFTER_FAILURE.FAILURE | RCP2_IN_OP_DIV1_AFTER_FAILURE.FAILURE | RCP3_IN_OP_DIV1_AFTER_FAILURE.FAILURE | RCP4_IN_OP_DIV1_AFTER_FAILURE.FAILURE;
    PS_ENABLE_1 := content.PS_ENABLE_1;
    PS_ENABLE_1_FAULT := content.PS_ENABLE_1_FAULT;
    PS_ENABLE_1_CONNECTED := content.PS_ENABLE_1_CONNECTED;
    PS_ENABLE_2 := content.PS_ENABLE_2;
    PS_ENABLE_2_FAULT := content.PS_ENABLE_2_FAULT;
    PS_ENABLE_2_CONNECTED := content.PS_ENABLE_2_CONNECTED;
    PS_ENABLE_3 := content.PS_ENABLE_3;
    PS_ENABLE_3_FAULT := content.PS_ENABLE_3_FAULT;
    PS_ENABLE_3_CONNECTED := content.PS_ENABLE_3_CONNECTED;
    PS_ENABLE_4 := content.PS_ENABLE_4;
    PS_ENABLE_4_FAULT := content.PS_ENABLE_4_FAULT;
    PS_ENABLE_4_CONNECTED := content.PS_ENABLE_4_CONNECTED;
    NEUTRON_FLUX := content.NEUTRON_FLUX;
    NEUTRON_FLUX_FAULT := content.NEUTRON_FLUX_FAULT;
    NEUTRON_FLUX_CONNECTED := content.NEUTRON_FLUX_CONNECTED;
    RCP1_IN_OP := content.RCP1_IN_OP;
    RCP1_IN_OP_FAULT := content.RCP1_IN_OP_FAULT;
    RCP1_IN_OP_CONNECTED := content.RCP1_IN_OP_CONNECTED;
    RCP2_IN_OP := content.RCP2_IN_OP;
    RCP2_IN_OP_FAULT := content.RCP2_IN_OP_FAULT;
    RCP2_IN_OP_CONNECTED := content.RCP2_IN_OP_CONNECTED;
    RCP3_IN_OP := content.RCP3_IN_OP;
    RCP3_IN_OP_FAULT := content.RCP3_IN_OP_FAULT;
    RCP3_IN_OP_CONNECTED := content.RCP3_IN_OP_CONNECTED;
    RCP4_IN_OP := content.RCP4_IN_OP;
    RCP4_IN_OP_FAULT := content.RCP4_IN_OP_FAULT;
    RCP4_IN_OP_CONNECTED := content.RCP4_IN_OP_CONNECTED;
    RODS_UP_GROUP_1 := content.RODS_UP_GROUP_1;
    RODS_UP_GROUP_2 := content.RODS_UP_GROUP_2;
    RODS_DOWN_GROUP_1 := content.RODS_DOWN_GROUP_1;
    RODS_DOWN_GROUP_2 := content.RODS_DOWN_GROUP_2;
    RODS_UP_GROUP_1_FAULT := content.RODS_UP_GROUP_1_FAULT;
    RODS_UP_GROUP_2_FAULT := content.RODS_UP_GROUP_2_FAULT;
    RODS_DOWN_GROUP_1_FAULT := content.RODS_DOWN_GROUP_1_FAULT;
    RODS_DOWN_GROUP_2_FAULT := content.RODS_DOWN_GROUP_2_FAULT;
--# AND Function
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE AND_2(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED)
	VAR

	DEFINE
		BO1:=
		case
			!BI1_CONNECTED & !BI2_CONNECTED : FALSE;
			TRUE : (!BI1_CONNECTED | BI1) & (!BI2_CONNECTED | BI2); 
		esac;
		BO1_FAULT:= BI1_FAULT | BI2_FAULT; --# Passive status processing [2]

	ASSIGN


--# OR Function
--# 
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE OR_4(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED, BI3, BI3_FAULT, BI3_CONNECTED, BI4, BI4_FAULT, BI4_CONNECTED)
	VAR

	DEFINE
		BO1:= BI1 | BI2 | BI3 | BI4;  
		BO1_FAULT:= BI1_FAULT | BI2_FAULT | BI3_FAULT | BI4_FAULT;  --# Passive status processing [2]

	ASSIGN


--# OR Function
--# 
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE OR_2(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED)
	VAR

	DEFINE
		BO1:= BI1 | BI2;
		BO1_FAULT:= BI1_FAULT | BI2_FAULT; --# Passive status processing [2]

	ASSIGN


--# AND Function
--# 
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE AND_4(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED, BI3, BI3_FAULT, BI3_CONNECTED, BI4, BI4_FAULT, BI4_CONNECTED)
	VAR

	DEFINE
		BO1:=
		case
			!BI1_CONNECTED & !BI2_CONNECTED & !BI3_CONNECTED & !BI4_CONNECTED : FALSE;
			TRUE : (!BI1_CONNECTED | BI1) & (!BI2_CONNECTED | BI2) & (!BI3_CONNECTED | BI3) & (!BI4_CONNECTED | BI4); 
		esac;
		BO1_FAULT:= BI1_FAULT | BI2_FAULT | BI3_FAULT | BI4_FAULT; --# Passive status processing [2]

	ASSIGN


--# Description: 
--# Name: PACS_RS
MODULE PACS_RS(SET, SET_FAULT, SET_CONNECTED, RESET, RESET_FAULT, RESET_CONNECTED)
	VAR
		mem : boolean;

	DEFINE
		OUT:= 
		case
			RESET : FALSE;
			SET : TRUE;
			TRUE: mem;
		esac;
		OUT_FAULT:= FALSE;

	ASSIGN
		init(mem) := FALSE;
		next(mem) := OUT;

--# AUX: Fault status masking (analog signal)
--#
MODULE NFA(IN0, IN0_FAULT, IN0_CONNECTED)
	VAR

	DEFINE
		OUT0:= IN0;
		OUT0_FAULT:= FALSE;

	ASSIGN


--# On Time Delay
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE ON_DELAY(BI1, BI1_FAULT, BI1_CONNECTED, time)
VAR
	
	timeLeft : 0..10;			--# Time left (in processor cycles) on the on delay

DEFINE	

	BO1 :=
	case
		!BI1 : FALSE;
		BI1 & (timeLeft = 0) : TRUE;
		TRUE : FALSE;
	esac;
	
	BO1_FAULT := BI1_FAULT;   --# Passive status processing [2]

ASSIGN
	init(timeLeft) := time;
	next(timeLeft) :=
	case
		BI1 & (timeLeft = 0) : 0;
		BI1 & (timeLeft > 0) : timeLeft - 1;
		TRUE : time;
	esac;

--# High Treshold
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE HIGH_TRESH(AI1, AI1_FAULT, AI1_CONNECTED, Max_)
	VAR

	DEFINE
		BO1:= (AI1 > Max_);
		BO1_FAULT:= AI1_FAULT;   --# Passive status processing [2]

	ASSIGN


--# Low Treshold
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE LOW_TRESH(AI1, AI1_FAULT, AI1_CONNECTED, Min_)
	VAR

	DEFINE
		BO1:= (AI1 < Min_);
		BO1_FAULT:= AI1_FAULT;  --# Passive status processing [2]

	ASSIGN


--# Memory with Set Priority
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE MEM_S(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED)
	VAR
		mem : boolean;
		prevBI1 : boolean;
		prevBI2 : boolean;

	DEFINE

		BO1:=
		case
			!prevBI1 & BI1 : TRUE;		
			!prevBI2 & BI2 : FALSE;
			TRUE : mem;
		esac;
		
		
		BO1_FAULT:= BI1_FAULT | BI2_FAULT;   --# Passive status processing [2]

	ASSIGN
		init(mem) := FALSE;
		next(mem) := BO1;
	
		init(prevBI1) := FALSE;
		next(prevBI1) := BI1;
		
		init(prevBI2) := FALSE;
		next(prevBI2) := BI2;

--# AUX: Default value substitution
--#
MODULE DFT_B(BI1, BI1_FAULT, BI1_CONNECTED, DefaultValue)
	VAR

	DEFINE
		BO1:= BI1_FAULT ? DefaultValue : BI1;
		BO1_FAULT:= FALSE;

	ASSIGN


--# 2 out of 4 Function
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML1322/ML13220A721.pdf
MODULE _24(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED, BI3, BI3_FAULT, BI3_CONNECTED, BI4, BI4_FAULT, BI4_CONNECTED)
	VAR

	DEFINE
			
		--# When a signal with a faulty status reaches the voting function block, 
		--# the signal is disregarded through modification of the vote. 
		--# This results in the output of the voting function block having a non-faulty status. [2]
	
		valids := count((!BI1_FAULT & BI1_CONNECTED),(!BI2_FAULT & BI2_CONNECTED),(!BI3_FAULT & BI3_CONNECTED),(!BI4_FAULT & BI4_CONNECTED));
		votes := count((!BI1_FAULT & BI1_CONNECTED & BI1),(!BI2_FAULT & BI2_CONNECTED & BI2),(!BI3_FAULT & BI3_CONNECTED & BI3),(!BI4_FAULT & BI4_CONNECTED & BI4));
	
		BO1:=
		case
			valids > 2 : votes >= 2;
			valids > 0 : votes >= 1;
			TRUE : FALSE;
		esac;
		
		BO1_FAULT:= FALSE;
		
	ASSIGN

--# 3 out of 4 Function
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML1322/ML13220A721.pdf
MODULE _34(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED, BI3, BI3_FAULT, BI3_CONNECTED, BI4, BI4_FAULT, BI4_CONNECTED)
	VAR

	DEFINE
				
		--# When a signal with a faulty status reaches the voting function block, 
		--# the signal is disregarded through modification of the vote. 
		--# This results in the output of the voting function block having a non-faulty status. [2]
	
		valids := count((!BI1_FAULT & BI1_CONNECTED),(!BI2_FAULT & BI2_CONNECTED),(!BI3_FAULT & BI3_CONNECTED),(!BI4_FAULT & BI4_CONNECTED));
		votes := count((!BI1_FAULT & BI1_CONNECTED & BI1),(!BI2_FAULT & BI2_CONNECTED & BI2),(!BI3_FAULT & BI3_CONNECTED & BI3),(!BI4_FAULT & BI4_CONNECTED & BI4));
	
		BO1:=
		case
			valids = 4 : votes >= 3;
			valids = 3 : votes = 3;
			valids = 2 : votes = 2;
			valids = 1 : votes = 1;
			TRUE : FALSE;
		esac;
		
		BO1_FAULT:= FALSE;

	ASSIGN


--# NOT
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE NOT(BI1, BI1_FAULT, BI1_CONNECTED)
	VAR

	DEFINE
		BO1:= !BI1;
		BO1_FAULT:= BI1_FAULT;   --# Passive status processing [2]

	ASSIGN


--# AUX: Fault status masking (binary signal)
--#
--# 
MODULE NF(IN0, IN0_FAULT, IN0_CONNECTED)
	VAR

	DEFINE
		OUT0:= IN0;
		OUT0_FAULT:= FALSE;

	ASSIGN


--# 1 out of 2 Function
--#
--# 
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML1322/ML13220A721.pdf
MODULE _12(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED)
	VAR

	DEFINE
	
		--# When a signal with a faulty status reaches the voting function block, 
		--# the signal is disregarded through modification of the vote. 
		--# This results in the output of the voting function block having a non-faulty status. [2]
	
		valids := count((!BI1_FAULT & BI1_CONNECTED),(!BI2_FAULT & BI2_CONNECTED));
		votes := count((!BI1_FAULT & BI1_CONNECTED & BI1),(!BI2_FAULT & BI2_CONNECTED & BI2));
	
		BO1:=
		case
			valids = 2 : votes >= 1;
			valids = 1 : votes = 1;
			TRUE : FALSE;
		esac;
		
		BO1_FAULT:= FALSE;


	ASSIGN

--# Pulse
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE PULSE(BI1, BI1_FAULT, BI1_CONNECTED, BI2, BI2_FAULT, BI2_CONNECTED, time)
	VAR
	PrevIn : boolean;
	PrevOut : boolean;
	timeLeft : 0..10;			--# Time left (in processor cycles) on the clock during the pulse

DEFINE	

	BO1 := 
	case
		BI2 : FALSE;				
		timeLeft > 0 : TRUE;
		!PrevOut & !PrevIn & BI1 : TRUE;

		TRUE : FALSE;
	esac;

	BO1_FAULT := BI1_FAULT | BI2_FAULT;  --# Passive status processing [2]


ASSIGN
	init(PrevIn) := FALSE;	
	next(PrevIn) :=	BI1;

	init(PrevOut) := FALSE;
	next(PrevOut) := BO1;	
	
	init(timeLeft) := 0;
	next(timeLeft) :=
	case
		BI2 : 0;
		timeLeft > 0 : timeLeft - 1;
		!PrevOut & !PrevIn & BI1 : time;
		TRUE : 0;
	esac;

--# Description: 
--# Name: DELAY
MODULE DELAY(BI1, BI1_FAULT, BI1_CONNECTED, InitValue)
	VAR
		mem : boolean;
		mem_FAULT : boolean;
		
	DEFINE
		BO1:= mem;
		BO1_FAULT:= mem_FAULT;

	ASSIGN
		init(mem) := InitValue;
		next(mem) := BI1;
		
		init(mem_FAULT) := FALSE;
		next(mem_FAULT) := BI1_FAULT;

--# NON-SAFETY LOGIC (made up)
--# Description: Permitted power calculation
--# Name: PERM_POWER
MODULE PERM_POWER(INOP1, INOP1_FAULT, INOP1_CONNECTED, INOP2, INOP2_FAULT, INOP2_CONNECTED, INOP3, INOP3_FAULT, INOP3_CONNECTED, INOP4, INOP4_FAULT, INOP4_CONNECTED)
	VAR

	DEFINE
	
		RCPs_IN_OP := count(INOP1,INOP2,INOP3,INOP4);
	
		SP:= 
		case
			RCPs_IN_OP = 4 : 100;
			RCPs_IN_OP = 3 : 75;
			RCPs_IN_OP = 2 : 15;
			TRUE : 0;
		esac;
		
		SP_FAULT:= FALSE;

	ASSIGN


--# NON-SAFETY LOGIC (made up)
--# Description: Dummy PID controller
--# Name: PID
MODULE PID(DIFF, DIFF_FAULT, DIFF_CONNECTED)
	VAR

	DEFINE
		CLOSE:= (DIFF < 0);
		CLOSE_FAULT:= FALSE;
		OPEN:= (DIFF > 0);
		OPEN_FAULT:= FALSE;

	ASSIGN


--# Analog Summation
--#
--# Source documents:
--#	- [1] U.S. EPR FSAR - https://www.nrc.gov/docs/ML1322/ML13220A726.pdf
--# - [2] TELEPERM XS - A Digital Reactor Protection System - https://www.nrc.gov/docs/ML0037/ML003732662.pdf
MODULE SUM(AI1, AI1_FAULT, AI1_CONNECTED, AI2, AI2_FAULT, AI2_CONNECTED)
	VAR

	DEFINE
		AO1:= AI1 - AI2;
		AO1_FAULT:= AI1_FAULT | AI2_FAULT; --# Passive status processing [2]

	ASSIGN


--# Description: 
MODULE PS_APU(HLEG_P, HLEG_P_FAULT, HLEG_P_CONNECTED, HLEG_T, HLEG_T_FAULT, HLEG_T_CONNECTED, NEUTRON_FLUX, NEUTRON_FLUX_FAULT, NEUTRON_FLUX_CONNECTED)
	VAR
		--# INPUTS / VARIABLES:

		--# MODULE CONNECTIONS:
		HIGH_TRESH002 : HIGH_TRESH(NEUTRON_FLUX, NEUTRON_FLUX_FAULT, TRUE, 200000);
		OR_2002 : OR_2(HIGH_TRESH002.BO1, HIGH_TRESH002.BO1_FAULT, TRUE, HIGH_TRESH001.BO1, HIGH_TRESH001.BO1_FAULT, TRUE);
		ON_DELAY001 : ON_DELAY(LOW_TRESH002.BO1, LOW_TRESH002.BO1_FAULT, TRUE, 3);
		LOW_TRESH002 : LOW_TRESH(HLEG_T, HLEG_T_FAULT, TRUE, 150);
		AND_2002 : AND_2(ON_DELAY001.BO1, ON_DELAY001.BO1_FAULT, TRUE, ON_DELAY002.BO1, ON_DELAY002.BO1_FAULT, TRUE);
		ON_DELAY002 : ON_DELAY(LOW_TRESH001.BO1, LOW_TRESH001.BO1_FAULT, TRUE, 3);
		HIGH_TRESH001 : HIGH_TRESH(HLEG_P, HLEG_P_FAULT, TRUE, 70);
		LOW_TRESH001 : LOW_TRESH(HLEG_P, HLEG_P_FAULT, TRUE, 20);

	DEFINE
		--# OUTPUTS:
		HLEG_P_Max2_OR_NF_Max2:=OR_2002.BO1;
		HLEG_P_Max2_OR_NF_Max2_FAULT:=OR_2002.BO1_FAULT;
		HLEG_T_Min_AND_HLEG_P_Min:=AND_2002.BO1;
		HLEG_T_Min_AND_HLEG_P_Min_FAULT:=AND_2002.BO1_FAULT;

	ASSIGN
		--# INTERNAL STATE:


--# Description: 
MODULE PS_ALU(HLEG_T_Min_AND_HLEG_P_Min1, HLEG_T_Min_AND_HLEG_P_Min1_FAULT, HLEG_T_Min_AND_HLEG_P_Min1_CONNECTED, HLEG_T_Min_AND_HLEG_P_Min2, HLEG_T_Min_AND_HLEG_P_Min2_FAULT, HLEG_T_Min_AND_HLEG_P_Min2_CONNECTED, HLEG_T_Min_AND_HLEG_P_Min3, HLEG_T_Min_AND_HLEG_P_Min3_FAULT, HLEG_T_Min_AND_HLEG_P_Min3_CONNECTED, HLEG_T_Min_AND_HLEG_P_Min4, HLEG_T_Min_AND_HLEG_P_Min4_FAULT, HLEG_T_Min_AND_HLEG_P_Min4_CONNECTED, HLEG_P_Max2_OR_NF_Max2_1, HLEG_P_Max2_OR_NF_Max2_1_FAULT, HLEG_P_Max2_OR_NF_Max2_1_CONNECTED, HLEG_P_Max2_OR_NF_Max2_2, HLEG_P_Max2_OR_NF_Max2_2_FAULT, HLEG_P_Max2_OR_NF_Max2_2_CONNECTED, HLEG_P_Max2_OR_NF_Max2_3, HLEG_P_Max2_OR_NF_Max2_3_FAULT, HLEG_P_Max2_OR_NF_Max2_3_CONNECTED, HLEG_P_Max2_OR_NF_Max2_4, HLEG_P_Max2_OR_NF_Max2_4_FAULT, HLEG_P_Max2_OR_NF_Max2_4_CONNECTED, MANUAL_RESET, MANUAL_RESET_FAULT, MANUAL_RESET_CONNECTED, MANUAL_P_VALIDATE, MANUAL_P_VALIDATE_FAULT, MANUAL_P_VALIDATE_CONNECTED)
	VAR
		--# INPUTS / VARIABLES:

		--# MODULE CONNECTIONS:
		_24002 : _24(HLEG_P_Max2_OR_NF_Max2_1, HLEG_P_Max2_OR_NF_Max2_1_FAULT, TRUE, HLEG_P_Max2_OR_NF_Max2_2, HLEG_P_Max2_OR_NF_Max2_2_FAULT, TRUE, HLEG_P_Max2_OR_NF_Max2_3, HLEG_P_Max2_OR_NF_Max2_3_FAULT, TRUE, HLEG_P_Max2_OR_NF_Max2_4, HLEG_P_Max2_OR_NF_Max2_4_FAULT, TRUE);
		OR_2001 : OR_2(DFT_B001.BO1, DFT_B001.BO1_FAULT, TRUE, !AND_2001.BO1, AND_2001.BO1_FAULT, TRUE);
		_34002 : _34(HLEG_T_Min_AND_HLEG_P_Min1, HLEG_T_Min_AND_HLEG_P_Min1_FAULT, TRUE, HLEG_T_Min_AND_HLEG_P_Min2, HLEG_T_Min_AND_HLEG_P_Min2_FAULT, TRUE, HLEG_T_Min_AND_HLEG_P_Min3, HLEG_T_Min_AND_HLEG_P_Min3_FAULT, TRUE, HLEG_T_Min_AND_HLEG_P_Min4, HLEG_T_Min_AND_HLEG_P_Min4_FAULT, TRUE);
		PERMISSIVE : MEM_S(AND_2002.BO1, AND_2002.BO1_FAULT, TRUE, !_34002.BO1, _34002.BO1_FAULT, TRUE);
		NOT002 : NOT(MEM_S001.BO1, MEM_S001.BO1_FAULT, TRUE);
		AND_2002 : AND_2(_34002.BO1, _34002.BO1_FAULT, TRUE, DFT_B002.BO1, DFT_B002.BO1_FAULT, TRUE);
		MEM_S001 : MEM_S(AND_2001.BO1, AND_2001.BO1_FAULT, TRUE, OR_2001.BO1, OR_2001.BO1_FAULT, TRUE);
		DFT_B002 : DFT_B(MANUAL_P_VALIDATE, MANUAL_P_VALIDATE_FAULT, TRUE, FALSE);
		AND_2001 : AND_2(!PERMISSIVE.BO1, PERMISSIVE.BO1_FAULT, TRUE, _24002.BO1, _24002.BO1_FAULT, TRUE);
		DFT_B001 : DFT_B(MANUAL_RESET, MANUAL_RESET_FAULT, TRUE, FALSE);

	DEFINE
		--# OUTPUTS:
		RODS_DOWN:=MEM_S001.BO1;
		RODS_DOWN_FAULT:=MEM_S001.BO1_FAULT;
		ENABLE_SAS:=NOT002.BO1;
		ENABLE_SAS_FAULT:=NOT002.BO1_FAULT;
		ENABLE_PAS:=NOT002.BO1;
		ENABLE_PAS_FAULT:=NOT002.BO1_FAULT;

	ASSIGN
		--# INTERNAL STATE:



--# Description: 
MODULE SAS_APU(HLEG_T, HLEG_T_FAULT, HLEG_T_CONNECTED, NEUTRON_FLUX_1, NEUTRON_FLUX_1_FAULT, NEUTRON_FLUX_1_CONNECTED, NEUTRON_FLUX_2, NEUTRON_FLUX_2_FAULT, NEUTRON_FLUX_2_CONNECTED)
	VAR
		--# INPUTS / VARIABLES:

		--# MODULE CONNECTIONS:
		HIGH_TRESH002 : HIGH_TRESH(HLEG_T, HLEG_T_FAULT, TRUE, 300);
		OR_2002 : OR_2(HIGH_TRESH002.BO1, HIGH_TRESH002.BO1_FAULT, TRUE, OR_2001.BO1, OR_2001.BO1_FAULT, TRUE);
		HIGH_TRESH003 : HIGH_TRESH(NEUTRON_FLUX_1, NEUTRON_FLUX_1_FAULT, TRUE, 150000);
		HIGH_TRESH001 : HIGH_TRESH(NEUTRON_FLUX_2, NEUTRON_FLUX_2_FAULT, TRUE, 150000);
		OR_2001 : OR_2(HIGH_TRESH003.BO1, HIGH_TRESH003.BO1_FAULT, TRUE, HIGH_TRESH001.BO1, HIGH_TRESH001.BO1_FAULT, TRUE);

	DEFINE
		--# OUTPUTS:
		RT_CRITERIA:=OR_2002.BO1;
		RT_CRITERIA_FAULT:=OR_2002.BO1_FAULT;

	ASSIGN
		--# INTERNAL STATE:


--# Description: 
MODULE SAS_ALU(RT_CRITERIA_1, RT_CRITERIA_1_FAULT, RT_CRITERIA_1_CONNECTED, RT_CRITERIA_2, RT_CRITERIA_2_FAULT, RT_CRITERIA_2_CONNECTED, MANUAL_TRIP, MANUAL_TRIP_FAULT, MANUAL_TRIP_CONNECTED, CONTROL_RODS_UP, CONTROL_RODS_UP_FAULT, CONTROL_RODS_UP_CONNECTED, ENABLE_SAS_1, ENABLE_SAS_1_FAULT, ENABLE_SAS_1_CONNECTED, ENABLE_SAS_2, ENABLE_SAS_2_FAULT, ENABLE_SAS_2_CONNECTED)
	VAR
		--# INPUTS / VARIABLES:

		--# MODULE CONNECTIONS:
		OR_2001 : OR_2(PULSE001.BO1, PULSE001.BO1_FAULT, TRUE, PULSE002.BO1, PULSE002.BO1_FAULT, TRUE);
		PULSE001 : PULSE(DELAY001.BO1, DELAY001.BO1_FAULT, TRUE, DFT_B001.BO1, DFT_B001.BO1_FAULT, TRUE, 9);
		AND_4001 : AND_4(ENABLE_SAS_1, ENABLE_SAS_1_FAULT, TRUE, ENABLE_SAS_2, ENABLE_SAS_2_FAULT, TRUE, CONTROL_RODS_UP, CONTROL_RODS_UP_FAULT, TRUE, !OR_2001.BO1, OR_2001.BO1_FAULT, TRUE);
		AND_2001 : AND_2(!PULSE001.BO1, PULSE001.BO1_FAULT, TRUE, OR_2002.BO1, OR_2002.BO1_FAULT, TRUE);
		DELAY001 : DELAY(PULSE002.BO1, PULSE002.BO1_FAULT, TRUE, FALSE);
		PULSE002 : PULSE(AND_2001.BO1, AND_2001.BO1_FAULT, TRUE, FALSE, FALSE, FALSE, 3);
		DFT_B001 : DFT_B(MANUAL_TRIP, MANUAL_TRIP_FAULT, TRUE, FALSE);
		OR_2002 : OR_2(DFT_B001.BO1, DFT_B001.BO1_FAULT, TRUE, _12001.BO1, _12001.BO1_FAULT, TRUE);
		_12001 : _12(RT_CRITERIA_1, RT_CRITERIA_1_FAULT, TRUE, RT_CRITERIA_2, RT_CRITERIA_2_FAULT, TRUE);

	DEFINE
		--# OUTPUTS:
		RODS_DOWN:=PULSE002.BO1;
		RODS_DOWN_FAULT:=PULSE002.BO1_FAULT;
		RODS_UP:=AND_4001.BO1;
		RODS_UP_FAULT:=AND_4001.BO1_FAULT;

	ASSIGN
		--# INTERNAL STATE:


--# Description: 
MODULE PACS2(SFOFF1, SFOFF1_FAULT, SFOFF1_CONNECTED, SFON1, SFON1_FAULT, SFON1_CONNECTED, SFOFF2, SFOFF2_FAULT, SFOFF2_CONNECTED, SFON2, SFON2_FAULT, SFON2_CONNECTED, AVOFF, AVOFF_FAULT, AVOFF_CONNECTED, AVON, AVON_FAULT, AVON_CONNECTED, MNOFF, MNOFF_FAULT, MNOFF_CONNECTED, MNON, MNON_FAULT, MNON_CONNECTED, STOP, STOP_FAULT, STOP_CONNECTED)
	VAR
		--# INPUTS / VARIABLES:

		--# MODULE CONNECTIONS:
		AND_2005 : AND_2(NF003.OUT0, NF003.OUT0_FAULT, TRUE, !OR_4003.BO1, OR_4003.BO1_FAULT, TRUE);
		AND_4001 : AND_4(!AND_2002.BO1, AND_2002.BO1_FAULT, TRUE, !NF009.OUT0, NF009.OUT0_FAULT, TRUE, FALSE, FALSE, FALSE, NF008.OUT0, NF008.OUT0_FAULT, TRUE);
		OR_4001 : OR_4(AND_2004.BO1, AND_2004.BO1_FAULT, TRUE, NF005.OUT0, NF005.OUT0_FAULT, TRUE, FALSE, FALSE, FALSE, OR_2001.BO1, OR_2001.BO1_FAULT, TRUE);
		PACS_RS001 : PACS_RS(AND_2004.BO1, AND_2004.BO1_FAULT, TRUE, OR_4002.BO1, OR_4002.BO1_FAULT, TRUE);
		NF007 : NF(AVON, AVON_FAULT, TRUE);
		NF002 : NF(MNON, MNON_FAULT, TRUE);
		AND_2002 : AND_2(!AND_2001.BO1, AND_2001.BO1_FAULT, TRUE, NF004.OUT0, NF004.OUT0_FAULT, TRUE);
		OR_2006 : OR_2(AND_2001.BO1, AND_2001.BO1_FAULT, TRUE, AND_4001.BO1, AND_4001.BO1_FAULT, TRUE);
		PACS_RS002 : PACS_RS(NF006.OUT0, NF006.OUT0_FAULT, TRUE, OR_4001.BO1, OR_4001.BO1_FAULT, TRUE);
		OR_2007 : OR_2(OR_2006.BO1, OR_2006.BO1_FAULT, TRUE, AND_4002.BO1, AND_4002.BO1_FAULT, TRUE);
		AND_2006 : AND_2(NF007.OUT0, NF007.OUT0_FAULT, TRUE, !OR_4003.BO1, OR_4003.BO1_FAULT, TRUE);
		NF006 : NF(MNOFF, MNOFF_FAULT, TRUE);
		OR_2004 : OR_2(AND_2005.BO1, AND_2005.BO1_FAULT, TRUE, PACS_RS002.OUT, PACS_RS002.OUT_FAULT, TRUE);
		NF004 : NF(SFOFF2, SFOFF2_FAULT, TRUE);
		NF003 : NF(AVOFF, AVOFF_FAULT, TRUE);
		NF001 : NF(SFON1, SFON1_FAULT, TRUE);
		NF005 : NF(STOP, STOP_FAULT, TRUE);
		OR_2001 : OR_2(OR_2003.BO1, OR_2003.BO1_FAULT, TRUE, OR_2006.BO1, OR_2006.BO1_FAULT, TRUE);
		OR_2003 : OR_2(NF009.OUT0, NF009.OUT0_FAULT, TRUE, AND_2002.BO1, AND_2002.BO1_FAULT, TRUE);
		AND_2001 : AND_2(!NF009.OUT0, NF009.OUT0_FAULT, TRUE, NF001.OUT0, NF001.OUT0_FAULT, TRUE);
		OR_4003 : OR_4(PACS_RS001.OUT, PACS_RS001.OUT_FAULT, TRUE, FALSE, FALSE, FALSE, FALSE, FALSE, FALSE, PACS_RS002.OUT, PACS_RS002.OUT_FAULT, TRUE);
		NF009 : NF(SFOFF1, SFOFF1_FAULT, TRUE);
		OR_4002 : OR_4(FALSE, FALSE, FALSE, NF005.OUT0, NF005.OUT0_FAULT, TRUE, OR_2001.BO1, OR_2001.BO1_FAULT, TRUE, NF006.OUT0, NF006.OUT0_FAULT, TRUE);
		AND_4002 : AND_4(OR_2005.BO1, OR_2005.BO1_FAULT, TRUE, FALSE, FALSE, FALSE, !OR_2004.BO1, OR_2004.BO1_FAULT, TRUE, !OR_2001.BO1, OR_2001.BO1_FAULT, TRUE);
		OR_2002 : OR_2(OR_2003.BO1, OR_2003.BO1_FAULT, TRUE, AND_2003.BO1, AND_2003.BO1_FAULT, TRUE);
		AND_2003 : AND_2(OR_2004.BO1, OR_2004.BO1_FAULT, TRUE, !OR_2001.BO1, OR_2001.BO1_FAULT, TRUE);
		NF008 : NF(SFON2, SFON2_FAULT, TRUE);
		AND_2004 : AND_2(NF002.OUT0, NF002.OUT0_FAULT, TRUE, !NF006.OUT0, NF006.OUT0_FAULT, TRUE);
		OR_2005 : OR_2(AND_2006.BO1, AND_2006.BO1_FAULT, TRUE, PACS_RS001.OUT, PACS_RS001.OUT_FAULT, TRUE);

	DEFINE
		--# OUTPUTS:
		CMDOFF:=OR_2002.BO1;
		CMDOFF_FAULT:=OR_2002.BO1_FAULT;
		CMDON:=OR_2007.BO1;
		CMDON_FAULT:=OR_2007.BO1_FAULT;

	ASSIGN
		--# INTERNAL STATE:


--# Description: 
MODULE PAS(PS_ENABLE_1, PS_ENABLE_1_FAULT, PS_ENABLE_1_CONNECTED, PS_ENABLE_2, PS_ENABLE_2_FAULT, PS_ENABLE_2_CONNECTED, PS_ENABLE_3, PS_ENABLE_3_FAULT, PS_ENABLE_3_CONNECTED, PS_ENABLE_4, PS_ENABLE_4_FAULT, PS_ENABLE_4_CONNECTED, NEUTRON_FLUX, NEUTRON_FLUX_FAULT, NEUTRON_FLUX_CONNECTED, RCP1_IN_OP, RCP1_IN_OP_FAULT, RCP1_IN_OP_CONNECTED, RCP2_IN_OP, RCP2_IN_OP_FAULT, RCP2_IN_OP_CONNECTED, RCP3_IN_OP, RCP3_IN_OP_FAULT, RCP3_IN_OP_CONNECTED, RCP4_IN_OP, RCP4_IN_OP_FAULT, RCP4_IN_OP_CONNECTED)
	VAR
		--# INPUTS / VARIABLES:

		--# MODULE CONNECTIONS:
		ON_DELAY001 : ON_DELAY(RCP1_IN_OP, RCP1_IN_OP_FAULT, TRUE, 5);
		PERM_POWER001 : PERM_POWER(ON_DELAY001.BO1, ON_DELAY001.BO1_FAULT, TRUE, ON_DELAY002.BO1, ON_DELAY002.BO1_FAULT, TRUE, ON_DELAY003.BO1, ON_DELAY003.BO1_FAULT, TRUE, ON_DELAY004.BO1, ON_DELAY004.BO1_FAULT, TRUE);
		ON_DELAY005 : ON_DELAY(AND_4002.BO1, AND_4002.BO1_FAULT, TRUE, 3);
		AND_4001 : AND_4(PID001.OPEN, PID001.OPEN_FAULT, TRUE, FALSE, FALSE, FALSE, ON_DELAY005.BO1, ON_DELAY005.BO1_FAULT, TRUE, !HIGH_TRESH001.BO1, HIGH_TRESH001.BO1_FAULT, TRUE);
		ON_DELAY004 : ON_DELAY(RCP4_IN_OP, RCP4_IN_OP_FAULT, TRUE, 5);
		ON_DELAY003 : ON_DELAY(RCP3_IN_OP, RCP3_IN_OP_FAULT, TRUE, 5);
		ON_DELAY002 : ON_DELAY(RCP2_IN_OP, RCP2_IN_OP_FAULT, TRUE, 5);
		AND_2002 : AND_2(ON_DELAY005.BO1, ON_DELAY005.BO1_FAULT, TRUE, PID001.CLOSE, PID001.CLOSE_FAULT, TRUE);
		SUM001 : SUM(PERM_POWER001.SP, PERM_POWER001.SP_FAULT, TRUE, NEUTRON_FLUX, NEUTRON_FLUX_FAULT, TRUE);
		PID001 : PID(SUM001.AO1, SUM001.AO1_FAULT, TRUE);
		HIGH_TRESH001 : HIGH_TRESH(NEUTRON_FLUX, NEUTRON_FLUX_FAULT, TRUE, 100);
		AND_4002 : AND_4(PS_ENABLE_1, PS_ENABLE_1_FAULT, TRUE, PS_ENABLE_2, PS_ENABLE_2_FAULT, TRUE, PS_ENABLE_3, PS_ENABLE_3_FAULT, TRUE, PS_ENABLE_4, PS_ENABLE_4_FAULT, TRUE);

	DEFINE
		--# OUTPUTS:
		RODS_UP_GROUP_1:=AND_4001.BO1;
		RODS_UP_GROUP_1_FAULT:=AND_4001.BO1_FAULT;
		RODS_UP_GROUP_2:=AND_4001.BO1;
		RODS_UP_GROUP_2_FAULT:=AND_4001.BO1_FAULT;
		RODS_DOWN_GROUP_1:=AND_2002.BO1;
		RODS_DOWN_GROUP_1_FAULT:=AND_2002.BO1_FAULT;
		RODS_DOWN_GROUP_2:=AND_2002.BO1;
		RODS_DOWN_GROUP_2_FAULT:=AND_2002.BO1_FAULT;

	ASSIGN
		--# INTERNAL STATE:

MODULE main
DEFINE FAILURE_VANISHED := FALSE;
VAR
    HLEG_P_DIV1: {0,50,80};
    HLEG_P_DIV2: {0,50,80};
    HLEG_P_DIV3: {0,50,80};
    HLEG_P_DIV4: {0,50,80};
    HLEG_T_DIV1: {20,400};
    HLEG_T_DIV2: {20,400};
    HLEG_T_DIV3: {20,400};
    HLEG_T_DIV4: {20,400};
    NF_DIV1: {0,180000,250000};
    NF_DIV2: {0,180000,250000};
    NF_DIV3: {0,180000,250000};
    NF_DIV4: {0,180000,250000};
    MAN_RESET_DIV1: boolean;
    MAN_RESET_DIV2: boolean;
    MAN_RESET_DIV3: boolean;
    MAN_RESET_DIV4: boolean;
    P_VALIDATE_DIV1: boolean;
    P_VALIDATE_DIV2: boolean;
    P_VALIDATE_DIV3: boolean;
    P_VALIDATE_DIV4: boolean;
    HLEG_T_SAS_DIV1: {20,400};
    HLEG_T_SAS_DIV2: {20,400};
    MAN_TRIP_DIV1: boolean;
    MAN_TRIP_DIV2: boolean;
    MAN_OFF_DIV1: boolean;
    MAN_OFF_DIV2: boolean;
    MAN_OFF_DIV3: boolean;
    MAN_OFF_DIV4: boolean;
    MAN_ON_DIV1: boolean;
    MAN_ON_DIV2: boolean;
    MAN_ON_DIV3: boolean;
    MAN_ON_DIV4: boolean;
    MAN_STOP_DIV1: boolean;
    MAN_STOP_DIV2: boolean;
    MAN_STOP_DIV3: boolean;
    MAN_STOP_DIV4: boolean;
    N_FLUX_NS_DIV1: {0,20,80,100,120};
    RCP1_IN_OP_DIV1: boolean;
    RCP2_IN_OP_DIV1: boolean;
    RCP3_IN_OP_DIV1: boolean;
    RCP4_IN_OP_DIV1: boolean;
    PS_APU_DIV1: WRAPPER_PS_APU_DIV1(
        HLEG_P_DIV1, HLEG_P_DIV1_FAULT, TRUE, 
        HLEG_T_DIV1, HLEG_T_DIV1_FAULT, TRUE, 
        NF_DIV1, NF_DIV1_FAULT, TRUE, FAILURE_VANISHED);
    PS_APU_DIV2: WRAPPER_PS_APU_DIV2(
        HLEG_P_DIV2, HLEG_P_DIV2_FAULT, TRUE, 
        HLEG_T_DIV2, HLEG_T_DIV2_FAULT, TRUE, 
        NF_DIV2, NF_DIV2_FAULT, TRUE, FAILURE_VANISHED);
    PS_APU_DIV3: WRAPPER_PS_APU_DIV3(
        HLEG_P_DIV3, HLEG_P_DIV3_FAULT, TRUE, 
        HLEG_T_DIV3, HLEG_T_DIV3_FAULT, TRUE, 
        NF_DIV3, NF_DIV3_FAULT, TRUE, FAILURE_VANISHED);
    PS_APU_DIV4: WRAPPER_PS_APU_DIV4(
        HLEG_P_DIV4, HLEG_P_DIV4_FAULT, TRUE, 
        HLEG_T_DIV4, HLEG_T_DIV4_FAULT, TRUE, 
        NF_DIV4, NF_DIV4_FAULT, TRUE, FAILURE_VANISHED);
    PS_ALU_DIV1: WRAPPER_PS_ALU_DIV1(
        PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        MAN_RESET_DIV1, MAN_RESET_DIV1_FAULT, TRUE, 
        P_VALIDATE_DIV1, P_VALIDATE_DIV1_FAULT, TRUE, FAILURE_VANISHED);
    PS_ALU_DIV2: WRAPPER_PS_ALU_DIV2(
        PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        MAN_RESET_DIV2, MAN_RESET_DIV2_FAULT, TRUE, 
        P_VALIDATE_DIV2, P_VALIDATE_DIV2_FAULT, TRUE, FAILURE_VANISHED);
    PS_ALU_DIV3: WRAPPER_PS_ALU_DIV3(
        PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        MAN_RESET_DIV3, MAN_RESET_DIV3_FAULT, TRUE, 
        P_VALIDATE_DIV3, P_VALIDATE_DIV3_FAULT, TRUE, FAILURE_VANISHED);
    PS_ALU_DIV4: WRAPPER_PS_ALU_DIV4(
        PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV1.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV2.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV3.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min, PS_APU_DIV4.HLEG_T_Min_AND_HLEG_P_Min_FAULT, TRUE, 
        PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV1.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV2.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV3.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2, PS_APU_DIV4.HLEG_P_Max2_OR_NF_Max2_FAULT, TRUE, 
        MAN_RESET_DIV4, MAN_RESET_DIV4_FAULT, TRUE, 
        P_VALIDATE_DIV4, P_VALIDATE_DIV4_FAULT, TRUE, FAILURE_VANISHED);
    SAS_APU_DIV1: WRAPPER_SAS_APU_DIV1(
        HLEG_T_SAS_DIV1, HLEG_T_SAS_DIV1_FAULT, TRUE, 
        NF_DIV1, NF_DIV1_FAULT, TRUE, 
        NF_DIV2, NF_DIV2_FAULT, TRUE, FAILURE_VANISHED);
    SAS_APU_DIV2: WRAPPER_SAS_APU_DIV2(
        HLEG_T_SAS_DIV2, HLEG_T_SAS_DIV2_FAULT, TRUE, 
        NF_DIV3, NF_DIV3_FAULT, TRUE, 
        NF_DIV4, NF_DIV4_FAULT, TRUE, FAILURE_VANISHED);
    SAS_ALU_DIV1: WRAPPER_SAS_ALU_DIV1(
        SAS_APU_DIV1.RT_CRITERIA, SAS_APU_DIV1.RT_CRITERIA_FAULT, TRUE, 
        SAS_APU_DIV2.RT_CRITERIA, SAS_APU_DIV2.RT_CRITERIA_FAULT, TRUE, 
        MAN_TRIP_DIV1, MAN_TRIP_DIV1_FAULT, TRUE, 
        PAS_DIV1.RODS_UP_GROUP_1, PAS_DIV1.RODS_UP_GROUP_1_FAULT, TRUE, 
        PS_ALU_DIV1.ENABLE_SAS, PS_ALU_DIV1.ENABLE_SAS_FAULT, TRUE, 
        PS_ALU_DIV3.ENABLE_SAS, PS_ALU_DIV3.ENABLE_SAS_FAULT, TRUE, FAILURE_VANISHED);
    SAS_ALU_DIV2: WRAPPER_SAS_ALU_DIV2(
        SAS_APU_DIV1.RT_CRITERIA, SAS_APU_DIV1.RT_CRITERIA_FAULT, TRUE, 
        SAS_APU_DIV2.RT_CRITERIA, SAS_APU_DIV2.RT_CRITERIA_FAULT, TRUE, 
        MAN_TRIP_DIV2, MAN_TRIP_DIV2_FAULT, TRUE, 
        PAS_DIV1.RODS_UP_GROUP_1, PAS_DIV1.RODS_UP_GROUP_1_FAULT, TRUE, 
        PS_ALU_DIV2.ENABLE_SAS, PS_ALU_DIV2.ENABLE_SAS_FAULT, TRUE, 
        PS_ALU_DIV4.ENABLE_SAS, PS_ALU_DIV4.ENABLE_SAS_FAULT, TRUE, FAILURE_VANISHED);
    PACS2_DIV1: WRAPPER_PACS2_DIV1(
        PS_ALU_DIV1.RODS_DOWN, PS_ALU_DIV1.RODS_DOWN_FAULT, TRUE, 
        SAS_ALU_DIV1.RODS_DOWN, SAS_ALU_DIV1.RODS_DOWN_FAULT, TRUE, 
        PAS_DIV1.RODS_DOWN_GROUP_1, PAS_DIV1.RODS_DOWN_GROUP_1_FAULT, TRUE, 
        SAS_ALU_DIV1.RODS_UP, SAS_ALU_DIV1.RODS_UP_FAULT, TRUE, 
        MAN_OFF_DIV1, MAN_OFF_DIV1_FAULT, TRUE, 
        MAN_ON_DIV1, MAN_ON_DIV1_FAULT, TRUE, 
        MAN_STOP_DIV1, MAN_STOP_DIV1_FAULT, TRUE, FAILURE_VANISHED);
    PACS2_DIV2: WRAPPER_PACS2_DIV2(
        PS_ALU_DIV2.RODS_DOWN, PS_ALU_DIV2.RODS_DOWN_FAULT, TRUE, 
        SAS_ALU_DIV2.RODS_DOWN, SAS_ALU_DIV2.RODS_DOWN_FAULT, TRUE, 
        PAS_DIV1.RODS_DOWN_GROUP_1, PAS_DIV1.RODS_DOWN_GROUP_1_FAULT, TRUE, 
        SAS_ALU_DIV2.RODS_UP, SAS_ALU_DIV2.RODS_UP_FAULT, TRUE, 
        MAN_OFF_DIV2, MAN_OFF_DIV2_FAULT, TRUE, 
        MAN_ON_DIV2, MAN_ON_DIV2_FAULT, TRUE, 
        MAN_STOP_DIV2, MAN_STOP_DIV2_FAULT, TRUE, FAILURE_VANISHED);
    PACS2_DIV3: WRAPPER_PACS2_DIV3(
        PS_ALU_DIV3.RODS_DOWN, PS_ALU_DIV3.RODS_DOWN_FAULT, TRUE, 
        SAS_ALU_DIV1.RODS_DOWN, SAS_ALU_DIV1.RODS_DOWN_FAULT, TRUE, 
        PAS_DIV1.RODS_DOWN_GROUP_1, PAS_DIV1.RODS_DOWN_GROUP_1_FAULT, TRUE, 
        SAS_ALU_DIV1.RODS_UP, SAS_ALU_DIV1.RODS_UP_FAULT, TRUE, 
        MAN_OFF_DIV3, MAN_OFF_DIV3_FAULT, TRUE, 
        MAN_ON_DIV3, MAN_ON_DIV3_FAULT, TRUE, 
        MAN_STOP_DIV3, MAN_STOP_DIV3_FAULT, TRUE, FAILURE_VANISHED);
    PACS2_DIV4: WRAPPER_PACS2_DIV4(
        PS_ALU_DIV4.RODS_DOWN, PS_ALU_DIV4.RODS_DOWN_FAULT, TRUE, 
        SAS_ALU_DIV2.RODS_DOWN, SAS_ALU_DIV2.RODS_DOWN_FAULT, TRUE, 
        PAS_DIV1.RODS_DOWN_GROUP_1, PAS_DIV1.RODS_DOWN_GROUP_1_FAULT, TRUE, 
        SAS_ALU_DIV2.RODS_UP, SAS_ALU_DIV2.RODS_UP_FAULT, TRUE, 
        MAN_OFF_DIV4, MAN_OFF_DIV4_FAULT, TRUE, 
        MAN_ON_DIV4, MAN_ON_DIV4_FAULT, TRUE, 
        MAN_STOP_DIV4, MAN_STOP_DIV4_FAULT, TRUE, FAILURE_VANISHED);
    PAS_DIV1: WRAPPER_PAS_DIV1(
        PS_ALU_DIV1.ENABLE_SAS, PS_ALU_DIV1.ENABLE_SAS_FAULT, TRUE, 
        PS_ALU_DIV2.ENABLE_SAS, PS_ALU_DIV2.ENABLE_SAS_FAULT, TRUE, 
        PS_ALU_DIV3.ENABLE_SAS, PS_ALU_DIV3.ENABLE_SAS_FAULT, TRUE, 
        PS_ALU_DIV4.ENABLE_SAS, PS_ALU_DIV4.ENABLE_SAS_FAULT, TRUE, 
        N_FLUX_NS_DIV1, N_FLUX_NS_DIV1_FAULT, TRUE, 
        RCP1_IN_OP_DIV1, RCP1_IN_OP_DIV1_FAULT, TRUE, 
        RCP2_IN_OP_DIV1, RCP2_IN_OP_DIV1_FAULT, TRUE, 
        RCP3_IN_OP_DIV1, RCP3_IN_OP_DIV1_FAULT, TRUE, 
        RCP4_IN_OP_DIV1, RCP4_IN_OP_DIV1_FAULT, TRUE, FAILURE_VANISHED);
    PACS2_DIV2.CMDOFF_SUBS: boolean;
    RODS_DOWN_DIV2_AFTER_FAILURE: INJECT_FAILURE(PACS2_DIV2.CMDOFF, PACS2_DIV2.CMDOFF_FAULT, TRUE, PACS2_DIV2.CMDOFF_SUBS, FALSE, TRUE, FAILURE_VANISHED);
    PACS2_DIV2.CMDON_SUBS: boolean;
    RODS_UP_DIV2_AFTER_FAILURE: INJECT_FAILURE(PACS2_DIV2.CMDON, PACS2_DIV2.CMDON_FAULT, TRUE, PACS2_DIV2.CMDON_SUBS, FALSE, TRUE, FAILURE_VANISHED);
DEFINE
    HLEG_P_DIV1_FAULT := FALSE;
    HLEG_P_DIV2_FAULT := FALSE;
    HLEG_P_DIV3_FAULT := FALSE;
    HLEG_P_DIV4_FAULT := FALSE;
    HLEG_T_DIV1_FAULT := FALSE;
    HLEG_T_DIV2_FAULT := FALSE;
    HLEG_T_DIV3_FAULT := FALSE;
    HLEG_T_DIV4_FAULT := FALSE;
    NF_DIV1_FAULT := FALSE;
    NF_DIV2_FAULT := FALSE;
    NF_DIV3_FAULT := FALSE;
    NF_DIV4_FAULT := FALSE;
    MAN_RESET_DIV1_FAULT := FALSE;
    MAN_RESET_DIV2_FAULT := FALSE;
    MAN_RESET_DIV3_FAULT := FALSE;
    MAN_RESET_DIV4_FAULT := FALSE;
    P_VALIDATE_DIV1_FAULT := FALSE;
    P_VALIDATE_DIV2_FAULT := FALSE;
    P_VALIDATE_DIV3_FAULT := FALSE;
    P_VALIDATE_DIV4_FAULT := FALSE;
    HLEG_T_SAS_DIV1_FAULT := FALSE;
    HLEG_T_SAS_DIV2_FAULT := FALSE;
    MAN_TRIP_DIV1_FAULT := FALSE;
    MAN_TRIP_DIV2_FAULT := FALSE;
    MAN_OFF_DIV1_FAULT := FALSE;
    MAN_OFF_DIV2_FAULT := FALSE;
    MAN_OFF_DIV3_FAULT := FALSE;
    MAN_OFF_DIV4_FAULT := FALSE;
    MAN_ON_DIV1_FAULT := FALSE;
    MAN_ON_DIV2_FAULT := FALSE;
    MAN_ON_DIV3_FAULT := FALSE;
    MAN_ON_DIV4_FAULT := FALSE;
    MAN_STOP_DIV1_FAULT := FALSE;
    MAN_STOP_DIV2_FAULT := FALSE;
    MAN_STOP_DIV3_FAULT := FALSE;
    MAN_STOP_DIV4_FAULT := FALSE;
    N_FLUX_NS_DIV1_FAULT := FALSE;
    RCP1_IN_OP_DIV1_FAULT := FALSE;
    RCP2_IN_OP_DIV1_FAULT := FALSE;
    RCP3_IN_OP_DIV1_FAULT := FALSE;
    RCP4_IN_OP_DIV1_FAULT := FALSE;
    RODS_DOWN_DIV1 := PACS2_DIV1.CMDOFF;
    RODS_DOWN_DIV1_FAULT := PACS2_DIV1.CMDOFF_FAULT;
    RODS_DOWN_DIV2 := RODS_DOWN_DIV2_AFTER_FAILURE.OUT1;
    RODS_DOWN_DIV2_FAULT := RODS_DOWN_DIV2_AFTER_FAILURE.OUT1_FAULT;
    RODS_DOWN_DIV3 := PACS2_DIV3.CMDOFF;
    RODS_DOWN_DIV3_FAULT := PACS2_DIV3.CMDOFF_FAULT;
    RODS_DOWN_DIV4 := PACS2_DIV4.CMDOFF;
    RODS_DOWN_DIV4_FAULT := PACS2_DIV4.CMDOFF_FAULT;
    RODS_UP_DIV1 := PACS2_DIV1.CMDON;
    RODS_UP_DIV1_FAULT := PACS2_DIV1.CMDON_FAULT;
    RODS_UP_DIV2 := RODS_UP_DIV2_AFTER_FAILURE.OUT1;
    RODS_UP_DIV2_FAULT := RODS_UP_DIV2_AFTER_FAILURE.OUT1_FAULT;
    RODS_UP_DIV3 := PACS2_DIV3.CMDON;
    RODS_UP_DIV3_FAULT := PACS2_DIV3.CMDON_FAULT;
    RODS_UP_DIV4 := PACS2_DIV4.CMDON;
    RODS_UP_DIV4_FAULT := PACS2_DIV4.CMDON_FAULT;
    FAILURE := PS_APU_DIV1.FAILURE | PS_APU_DIV2.FAILURE | PS_APU_DIV3.FAILURE | PS_APU_DIV4.FAILURE | PS_ALU_DIV1.FAILURE | PS_ALU_DIV2.FAILURE | PS_ALU_DIV3.FAILURE | PS_ALU_DIV4.FAILURE | SAS_APU_DIV1.FAILURE | SAS_APU_DIV2.FAILURE | SAS_ALU_DIV1.FAILURE | SAS_ALU_DIV2.FAILURE | PACS2_DIV1.FAILURE | PACS2_DIV2.FAILURE | PACS2_DIV3.FAILURE | PACS2_DIV4.FAILURE | PAS_DIV1.FAILURE | RODS_DOWN_DIV2_AFTER_FAILURE.FAILURE | RODS_UP_DIV2_AFTER_FAILURE.FAILURE;


LTLSPEC (G !MAN_RESET_DIV1) -> G((((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20))))) & ((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20))))) & ((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20))))) | ((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20))))) & ((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20))))) & ((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20))))) | ((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20))))) & ((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20))))) & ((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20) & X((HLEG_T_DIV4 < 150) & (HLEG_P_DIV4 < 20))))) | ((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20) & X((HLEG_T_DIV1 < 150) & (HLEG_P_DIV1 < 20))))) & ((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20) & X((HLEG_T_DIV2 < 150) & (HLEG_P_DIV2 < 20))))) & ((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20) & X((HLEG_T_DIV3 < 150) & (HLEG_P_DIV3 < 20)))))) -> X X(!PS_ALU_DIV1.RODS_DOWN -> X(!PS_ALU_DIV1.RODS_DOWN)))
